
Garden-Control-System.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00005490  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001b2  00800060  00005490  00005504  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000036e4  00000000  00000000  000056b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000112a  00000000  00000000  00008d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00009ec6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  0000a006  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  0000a176  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000bdbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000ccaa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000da58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000dbb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000de45  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000e613  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e9       	ldi	r30, 0x90	; 144
      68:	f4 e5       	ldi	r31, 0x54	; 84
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 31       	cpi	r26, 0x12	; 18
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 a5 10 	call	0x214a	; 0x214a <main>
      7a:	0c 94 46 2a 	jmp	0x548c	; 0x548c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 06 2a 	jmp	0x540c	; 0x540c <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	ab ee       	ldi	r26, 0xEB	; 235
     118:	b1 e0       	ldi	r27, 0x01	; 1
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 22 2a 	jmp	0x5444	; 0x5444 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 12 2a 	jmp	0x5424	; 0x5424 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 2e 2a 	jmp	0x545c	; 0x545c <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 12 2a 	jmp	0x5424	; 0x5424 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 2e 2a 	jmp	0x545c	; 0x545c <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 06 2a 	jmp	0x540c	; 0x540c <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	8b ee       	ldi	r24, 0xEB	; 235
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 22 2a 	jmp	0x5444	; 0x5444 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 12 2a 	jmp	0x5424	; 0x5424 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 2e 2a 	jmp	0x545c	; 0x545c <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 12 2a 	jmp	0x5424	; 0x5424 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 2e 2a 	jmp	0x545c	; 0x545c <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 12 2a 	jmp	0x5424	; 0x5424 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 2e 2a 	jmp	0x545c	; 0x545c <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 16 2a 	jmp	0x542c	; 0x542c <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 32 2a 	jmp	0x5464	; 0x5464 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_SetPinDirection>:
/*Func 1 : Set Pins Direction either OUTPUT or INPUT
 *for any PIN from PIN0 --OR--> 0 to PIN7 --OR--> 7
 *at any PORT from PORTA --OR--> 0 to PORTD --OR--> 3*/

u8 DIO_SetPinDirection(u8 u8_PortIDCopy ,u8 u8_PinNumberCopy,u8 u8_PinDirectionCopy)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	28 97       	sbiw	r28, 0x08	; 8
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	6b 83       	std	Y+3, r22	; 0x03
     b4e:	4c 83       	std	Y+4, r20	; 0x04
	u8 u8_ErrorState;
	if (((u8_PortIDCopy >= PORTA)&&(u8_PortIDCopy <= PORTD))&&((u8_PinNumberCopy >= PIN0)&&(u8_PinNumberCopy <= PIN7))&&((u8_PinDirectionCopy >= INPUT  )&&(u8_PinDirectionCopy <= OUTPUT )))
     b50:	8a 81       	ldd	r24, Y+2	; 0x02
     b52:	84 30       	cpi	r24, 0x04	; 4
     b54:	08 f0       	brcs	.+2      	; 0xb58 <DIO_SetPinDirection+0x22>
     b56:	f5 c0       	rjmp	.+490    	; 0xd42 <DIO_SetPinDirection+0x20c>
     b58:	8b 81       	ldd	r24, Y+3	; 0x03
     b5a:	88 30       	cpi	r24, 0x08	; 8
     b5c:	08 f0       	brcs	.+2      	; 0xb60 <DIO_SetPinDirection+0x2a>
     b5e:	f1 c0       	rjmp	.+482    	; 0xd42 <DIO_SetPinDirection+0x20c>
     b60:	8c 81       	ldd	r24, Y+4	; 0x04
     b62:	82 30       	cpi	r24, 0x02	; 2
     b64:	08 f0       	brcs	.+2      	; 0xb68 <DIO_SetPinDirection+0x32>
     b66:	ed c0       	rjmp	.+474    	; 0xd42 <DIO_SetPinDirection+0x20c>
	{/*Function Inputs Error check*/
		u8_ErrorState =ErrorStateOK ;
     b68:	81 e0       	ldi	r24, 0x01	; 1
     b6a:	89 83       	std	Y+1, r24	; 0x01
		/*Setting Pins Direction*/
		if (u8_PinDirectionCopy == OUTPUT)
     b6c:	8c 81       	ldd	r24, Y+4	; 0x04
     b6e:	81 30       	cpi	r24, 0x01	; 1
     b70:	09 f0       	breq	.+2      	; 0xb74 <DIO_SetPinDirection+0x3e>
     b72:	6f c0       	rjmp	.+222    	; 0xc52 <DIO_SetPinDirection+0x11c>
		{
			switch(u8_PortIDCopy)
     b74:	8a 81       	ldd	r24, Y+2	; 0x02
     b76:	28 2f       	mov	r18, r24
     b78:	30 e0       	ldi	r19, 0x00	; 0
     b7a:	38 87       	std	Y+8, r19	; 0x08
     b7c:	2f 83       	std	Y+7, r18	; 0x07
     b7e:	8f 81       	ldd	r24, Y+7	; 0x07
     b80:	98 85       	ldd	r25, Y+8	; 0x08
     b82:	81 30       	cpi	r24, 0x01	; 1
     b84:	91 05       	cpc	r25, r1
     b86:	49 f1       	breq	.+82     	; 0xbda <DIO_SetPinDirection+0xa4>
     b88:	2f 81       	ldd	r18, Y+7	; 0x07
     b8a:	38 85       	ldd	r19, Y+8	; 0x08
     b8c:	22 30       	cpi	r18, 0x02	; 2
     b8e:	31 05       	cpc	r19, r1
     b90:	2c f4       	brge	.+10     	; 0xb9c <DIO_SetPinDirection+0x66>
     b92:	8f 81       	ldd	r24, Y+7	; 0x07
     b94:	98 85       	ldd	r25, Y+8	; 0x08
     b96:	00 97       	sbiw	r24, 0x00	; 0
     b98:	61 f0       	breq	.+24     	; 0xbb2 <DIO_SetPinDirection+0x7c>
     b9a:	d4 c0       	rjmp	.+424    	; 0xd44 <DIO_SetPinDirection+0x20e>
     b9c:	2f 81       	ldd	r18, Y+7	; 0x07
     b9e:	38 85       	ldd	r19, Y+8	; 0x08
     ba0:	22 30       	cpi	r18, 0x02	; 2
     ba2:	31 05       	cpc	r19, r1
     ba4:	71 f1       	breq	.+92     	; 0xc02 <DIO_SetPinDirection+0xcc>
     ba6:	8f 81       	ldd	r24, Y+7	; 0x07
     ba8:	98 85       	ldd	r25, Y+8	; 0x08
     baa:	83 30       	cpi	r24, 0x03	; 3
     bac:	91 05       	cpc	r25, r1
     bae:	e9 f1       	breq	.+122    	; 0xc2a <DIO_SetPinDirection+0xf4>
     bb0:	c9 c0       	rjmp	.+402    	; 0xd44 <DIO_SetPinDirection+0x20e>
			{
				case PORTA : 	SET_BIT(DDRA_register,u8_PinNumberCopy);	break;
     bb2:	aa e3       	ldi	r26, 0x3A	; 58
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	ea e3       	ldi	r30, 0x3A	; 58
     bb8:	f0 e0       	ldi	r31, 0x00	; 0
     bba:	80 81       	ld	r24, Z
     bbc:	48 2f       	mov	r20, r24
     bbe:	8b 81       	ldd	r24, Y+3	; 0x03
     bc0:	28 2f       	mov	r18, r24
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	81 e0       	ldi	r24, 0x01	; 1
     bc6:	90 e0       	ldi	r25, 0x00	; 0
     bc8:	02 2e       	mov	r0, r18
     bca:	02 c0       	rjmp	.+4      	; 0xbd0 <DIO_SetPinDirection+0x9a>
     bcc:	88 0f       	add	r24, r24
     bce:	99 1f       	adc	r25, r25
     bd0:	0a 94       	dec	r0
     bd2:	e2 f7       	brpl	.-8      	; 0xbcc <DIO_SetPinDirection+0x96>
     bd4:	84 2b       	or	r24, r20
     bd6:	8c 93       	st	X, r24
     bd8:	b5 c0       	rjmp	.+362    	; 0xd44 <DIO_SetPinDirection+0x20e>
				case PORTB :	SET_BIT(DDRB_register,u8_PinNumberCopy);	break;
     bda:	a7 e3       	ldi	r26, 0x37	; 55
     bdc:	b0 e0       	ldi	r27, 0x00	; 0
     bde:	e7 e3       	ldi	r30, 0x37	; 55
     be0:	f0 e0       	ldi	r31, 0x00	; 0
     be2:	80 81       	ld	r24, Z
     be4:	48 2f       	mov	r20, r24
     be6:	8b 81       	ldd	r24, Y+3	; 0x03
     be8:	28 2f       	mov	r18, r24
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	81 e0       	ldi	r24, 0x01	; 1
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	02 2e       	mov	r0, r18
     bf2:	02 c0       	rjmp	.+4      	; 0xbf8 <DIO_SetPinDirection+0xc2>
     bf4:	88 0f       	add	r24, r24
     bf6:	99 1f       	adc	r25, r25
     bf8:	0a 94       	dec	r0
     bfa:	e2 f7       	brpl	.-8      	; 0xbf4 <DIO_SetPinDirection+0xbe>
     bfc:	84 2b       	or	r24, r20
     bfe:	8c 93       	st	X, r24
     c00:	a1 c0       	rjmp	.+322    	; 0xd44 <DIO_SetPinDirection+0x20e>
				case PORTC :	SET_BIT(DDRC_register,u8_PinNumberCopy);	break;
     c02:	a4 e3       	ldi	r26, 0x34	; 52
     c04:	b0 e0       	ldi	r27, 0x00	; 0
     c06:	e4 e3       	ldi	r30, 0x34	; 52
     c08:	f0 e0       	ldi	r31, 0x00	; 0
     c0a:	80 81       	ld	r24, Z
     c0c:	48 2f       	mov	r20, r24
     c0e:	8b 81       	ldd	r24, Y+3	; 0x03
     c10:	28 2f       	mov	r18, r24
     c12:	30 e0       	ldi	r19, 0x00	; 0
     c14:	81 e0       	ldi	r24, 0x01	; 1
     c16:	90 e0       	ldi	r25, 0x00	; 0
     c18:	02 2e       	mov	r0, r18
     c1a:	02 c0       	rjmp	.+4      	; 0xc20 <DIO_SetPinDirection+0xea>
     c1c:	88 0f       	add	r24, r24
     c1e:	99 1f       	adc	r25, r25
     c20:	0a 94       	dec	r0
     c22:	e2 f7       	brpl	.-8      	; 0xc1c <DIO_SetPinDirection+0xe6>
     c24:	84 2b       	or	r24, r20
     c26:	8c 93       	st	X, r24
     c28:	8d c0       	rjmp	.+282    	; 0xd44 <DIO_SetPinDirection+0x20e>
				case PORTD :	SET_BIT(DDRD_register,u8_PinNumberCopy);	break;
     c2a:	a1 e3       	ldi	r26, 0x31	; 49
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	e1 e3       	ldi	r30, 0x31	; 49
     c30:	f0 e0       	ldi	r31, 0x00	; 0
     c32:	80 81       	ld	r24, Z
     c34:	48 2f       	mov	r20, r24
     c36:	8b 81       	ldd	r24, Y+3	; 0x03
     c38:	28 2f       	mov	r18, r24
     c3a:	30 e0       	ldi	r19, 0x00	; 0
     c3c:	81 e0       	ldi	r24, 0x01	; 1
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	02 2e       	mov	r0, r18
     c42:	02 c0       	rjmp	.+4      	; 0xc48 <DIO_SetPinDirection+0x112>
     c44:	88 0f       	add	r24, r24
     c46:	99 1f       	adc	r25, r25
     c48:	0a 94       	dec	r0
     c4a:	e2 f7       	brpl	.-8      	; 0xc44 <DIO_SetPinDirection+0x10e>
     c4c:	84 2b       	or	r24, r20
     c4e:	8c 93       	st	X, r24
     c50:	79 c0       	rjmp	.+242    	; 0xd44 <DIO_SetPinDirection+0x20e>
			}

		}
		else if (u8_PinDirectionCopy == INPUT)
     c52:	8c 81       	ldd	r24, Y+4	; 0x04
     c54:	88 23       	and	r24, r24
     c56:	09 f0       	breq	.+2      	; 0xc5a <DIO_SetPinDirection+0x124>
     c58:	75 c0       	rjmp	.+234    	; 0xd44 <DIO_SetPinDirection+0x20e>
		{
			switch(u8_PortIDCopy)
     c5a:	8a 81       	ldd	r24, Y+2	; 0x02
     c5c:	28 2f       	mov	r18, r24
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	3e 83       	std	Y+6, r19	; 0x06
     c62:	2d 83       	std	Y+5, r18	; 0x05
     c64:	8d 81       	ldd	r24, Y+5	; 0x05
     c66:	9e 81       	ldd	r25, Y+6	; 0x06
     c68:	81 30       	cpi	r24, 0x01	; 1
     c6a:	91 05       	cpc	r25, r1
     c6c:	59 f1       	breq	.+86     	; 0xcc4 <DIO_SetPinDirection+0x18e>
     c6e:	2d 81       	ldd	r18, Y+5	; 0x05
     c70:	3e 81       	ldd	r19, Y+6	; 0x06
     c72:	22 30       	cpi	r18, 0x02	; 2
     c74:	31 05       	cpc	r19, r1
     c76:	2c f4       	brge	.+10     	; 0xc82 <DIO_SetPinDirection+0x14c>
     c78:	8d 81       	ldd	r24, Y+5	; 0x05
     c7a:	9e 81       	ldd	r25, Y+6	; 0x06
     c7c:	00 97       	sbiw	r24, 0x00	; 0
     c7e:	69 f0       	breq	.+26     	; 0xc9a <DIO_SetPinDirection+0x164>
     c80:	61 c0       	rjmp	.+194    	; 0xd44 <DIO_SetPinDirection+0x20e>
     c82:	2d 81       	ldd	r18, Y+5	; 0x05
     c84:	3e 81       	ldd	r19, Y+6	; 0x06
     c86:	22 30       	cpi	r18, 0x02	; 2
     c88:	31 05       	cpc	r19, r1
     c8a:	89 f1       	breq	.+98     	; 0xcee <DIO_SetPinDirection+0x1b8>
     c8c:	8d 81       	ldd	r24, Y+5	; 0x05
     c8e:	9e 81       	ldd	r25, Y+6	; 0x06
     c90:	83 30       	cpi	r24, 0x03	; 3
     c92:	91 05       	cpc	r25, r1
     c94:	09 f4       	brne	.+2      	; 0xc98 <DIO_SetPinDirection+0x162>
     c96:	40 c0       	rjmp	.+128    	; 0xd18 <DIO_SetPinDirection+0x1e2>
     c98:	55 c0       	rjmp	.+170    	; 0xd44 <DIO_SetPinDirection+0x20e>
					{
						case PORTA :	CLR_BIT(DDRA_register,u8_PinNumberCopy);	break;
     c9a:	aa e3       	ldi	r26, 0x3A	; 58
     c9c:	b0 e0       	ldi	r27, 0x00	; 0
     c9e:	ea e3       	ldi	r30, 0x3A	; 58
     ca0:	f0 e0       	ldi	r31, 0x00	; 0
     ca2:	80 81       	ld	r24, Z
     ca4:	48 2f       	mov	r20, r24
     ca6:	8b 81       	ldd	r24, Y+3	; 0x03
     ca8:	28 2f       	mov	r18, r24
     caa:	30 e0       	ldi	r19, 0x00	; 0
     cac:	81 e0       	ldi	r24, 0x01	; 1
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	02 2e       	mov	r0, r18
     cb2:	02 c0       	rjmp	.+4      	; 0xcb8 <DIO_SetPinDirection+0x182>
     cb4:	88 0f       	add	r24, r24
     cb6:	99 1f       	adc	r25, r25
     cb8:	0a 94       	dec	r0
     cba:	e2 f7       	brpl	.-8      	; 0xcb4 <DIO_SetPinDirection+0x17e>
     cbc:	80 95       	com	r24
     cbe:	84 23       	and	r24, r20
     cc0:	8c 93       	st	X, r24
     cc2:	40 c0       	rjmp	.+128    	; 0xd44 <DIO_SetPinDirection+0x20e>
						case PORTB :	CLR_BIT(DDRB_register,u8_PinNumberCopy);	break;
     cc4:	a7 e3       	ldi	r26, 0x37	; 55
     cc6:	b0 e0       	ldi	r27, 0x00	; 0
     cc8:	e7 e3       	ldi	r30, 0x37	; 55
     cca:	f0 e0       	ldi	r31, 0x00	; 0
     ccc:	80 81       	ld	r24, Z
     cce:	48 2f       	mov	r20, r24
     cd0:	8b 81       	ldd	r24, Y+3	; 0x03
     cd2:	28 2f       	mov	r18, r24
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	81 e0       	ldi	r24, 0x01	; 1
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	02 2e       	mov	r0, r18
     cdc:	02 c0       	rjmp	.+4      	; 0xce2 <DIO_SetPinDirection+0x1ac>
     cde:	88 0f       	add	r24, r24
     ce0:	99 1f       	adc	r25, r25
     ce2:	0a 94       	dec	r0
     ce4:	e2 f7       	brpl	.-8      	; 0xcde <DIO_SetPinDirection+0x1a8>
     ce6:	80 95       	com	r24
     ce8:	84 23       	and	r24, r20
     cea:	8c 93       	st	X, r24
     cec:	2b c0       	rjmp	.+86     	; 0xd44 <DIO_SetPinDirection+0x20e>
						case PORTC :	CLR_BIT(DDRC_register,u8_PinNumberCopy);	break;
     cee:	a4 e3       	ldi	r26, 0x34	; 52
     cf0:	b0 e0       	ldi	r27, 0x00	; 0
     cf2:	e4 e3       	ldi	r30, 0x34	; 52
     cf4:	f0 e0       	ldi	r31, 0x00	; 0
     cf6:	80 81       	ld	r24, Z
     cf8:	48 2f       	mov	r20, r24
     cfa:	8b 81       	ldd	r24, Y+3	; 0x03
     cfc:	28 2f       	mov	r18, r24
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	81 e0       	ldi	r24, 0x01	; 1
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	02 2e       	mov	r0, r18
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <DIO_SetPinDirection+0x1d6>
     d08:	88 0f       	add	r24, r24
     d0a:	99 1f       	adc	r25, r25
     d0c:	0a 94       	dec	r0
     d0e:	e2 f7       	brpl	.-8      	; 0xd08 <DIO_SetPinDirection+0x1d2>
     d10:	80 95       	com	r24
     d12:	84 23       	and	r24, r20
     d14:	8c 93       	st	X, r24
     d16:	16 c0       	rjmp	.+44     	; 0xd44 <DIO_SetPinDirection+0x20e>
						case PORTD :	CLR_BIT(DDRD_register,u8_PinNumberCopy);	break;
     d18:	a1 e3       	ldi	r26, 0x31	; 49
     d1a:	b0 e0       	ldi	r27, 0x00	; 0
     d1c:	e1 e3       	ldi	r30, 0x31	; 49
     d1e:	f0 e0       	ldi	r31, 0x00	; 0
     d20:	80 81       	ld	r24, Z
     d22:	48 2f       	mov	r20, r24
     d24:	8b 81       	ldd	r24, Y+3	; 0x03
     d26:	28 2f       	mov	r18, r24
     d28:	30 e0       	ldi	r19, 0x00	; 0
     d2a:	81 e0       	ldi	r24, 0x01	; 1
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	02 2e       	mov	r0, r18
     d30:	02 c0       	rjmp	.+4      	; 0xd36 <DIO_SetPinDirection+0x200>
     d32:	88 0f       	add	r24, r24
     d34:	99 1f       	adc	r25, r25
     d36:	0a 94       	dec	r0
     d38:	e2 f7       	brpl	.-8      	; 0xd32 <DIO_SetPinDirection+0x1fc>
     d3a:	80 95       	com	r24
     d3c:	84 23       	and	r24, r20
     d3e:	8c 93       	st	X, r24
     d40:	01 c0       	rjmp	.+2      	; 0xd44 <DIO_SetPinDirection+0x20e>
					}
		}
	}
	else
	{
		u8_ErrorState = ErrorStateNOK ;
     d42:	19 82       	std	Y+1, r1	; 0x01
	}
return u8_ErrorState ;
     d44:	89 81       	ldd	r24, Y+1	; 0x01

}
     d46:	28 96       	adiw	r28, 0x08	; 8
     d48:	0f b6       	in	r0, 0x3f	; 63
     d4a:	f8 94       	cli
     d4c:	de bf       	out	0x3e, r29	; 62
     d4e:	0f be       	out	0x3f, r0	; 63
     d50:	cd bf       	out	0x3d, r28	; 61
     d52:	cf 91       	pop	r28
     d54:	df 91       	pop	r29
     d56:	08 95       	ret

00000d58 <DIO_SetPinValue>:
/*Func 2 : Set Pins values either HIGH or LOW
 *for any PIN from PIN0 --OR--> 0 to PIN7 --OR--> 7
 *at any PORT from PORTA --OR--> 0 to PORTD --OR--> 3*/

u8 DIO_SetPinValue(u8 u8_PortIDCopy ,u8 u8_PinNumberCopy,u8 u8_PinValueCopy)
{
     d58:	df 93       	push	r29
     d5a:	cf 93       	push	r28
     d5c:	cd b7       	in	r28, 0x3d	; 61
     d5e:	de b7       	in	r29, 0x3e	; 62
     d60:	28 97       	sbiw	r28, 0x08	; 8
     d62:	0f b6       	in	r0, 0x3f	; 63
     d64:	f8 94       	cli
     d66:	de bf       	out	0x3e, r29	; 62
     d68:	0f be       	out	0x3f, r0	; 63
     d6a:	cd bf       	out	0x3d, r28	; 61
     d6c:	8a 83       	std	Y+2, r24	; 0x02
     d6e:	6b 83       	std	Y+3, r22	; 0x03
     d70:	4c 83       	std	Y+4, r20	; 0x04
	u8 u8_ErrorState;
	if (((u8_PortIDCopy >= PORTA)&&(u8_PortIDCopy <= PORTD))&&((u8_PinNumberCopy >= PIN0)&&(u8_PinNumberCopy <= PIN7))&&((u8_PinValueCopy >= LOW  )&&(u8_PinValueCopy <= HIGH )))
     d72:	8a 81       	ldd	r24, Y+2	; 0x02
     d74:	84 30       	cpi	r24, 0x04	; 4
     d76:	08 f0       	brcs	.+2      	; 0xd7a <DIO_SetPinValue+0x22>
     d78:	f5 c0       	rjmp	.+490    	; 0xf64 <DIO_SetPinValue+0x20c>
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	88 30       	cpi	r24, 0x08	; 8
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <DIO_SetPinValue+0x2a>
     d80:	f1 c0       	rjmp	.+482    	; 0xf64 <DIO_SetPinValue+0x20c>
     d82:	8c 81       	ldd	r24, Y+4	; 0x04
     d84:	82 30       	cpi	r24, 0x02	; 2
     d86:	08 f0       	brcs	.+2      	; 0xd8a <DIO_SetPinValue+0x32>
     d88:	ed c0       	rjmp	.+474    	; 0xf64 <DIO_SetPinValue+0x20c>
		{/*Function Inputs Error check*/
		u8_ErrorState = ErrorStateOK;
     d8a:	81 e0       	ldi	r24, 0x01	; 1
     d8c:	89 83       	std	Y+1, r24	; 0x01
		/*Setting PINS Value*/
		if (u8_PinValueCopy == HIGH)
     d8e:	8c 81       	ldd	r24, Y+4	; 0x04
     d90:	81 30       	cpi	r24, 0x01	; 1
     d92:	09 f0       	breq	.+2      	; 0xd96 <DIO_SetPinValue+0x3e>
     d94:	6f c0       	rjmp	.+222    	; 0xe74 <DIO_SetPinValue+0x11c>
				{
					switch(u8_PortIDCopy)
     d96:	8a 81       	ldd	r24, Y+2	; 0x02
     d98:	28 2f       	mov	r18, r24
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	38 87       	std	Y+8, r19	; 0x08
     d9e:	2f 83       	std	Y+7, r18	; 0x07
     da0:	8f 81       	ldd	r24, Y+7	; 0x07
     da2:	98 85       	ldd	r25, Y+8	; 0x08
     da4:	81 30       	cpi	r24, 0x01	; 1
     da6:	91 05       	cpc	r25, r1
     da8:	49 f1       	breq	.+82     	; 0xdfc <DIO_SetPinValue+0xa4>
     daa:	2f 81       	ldd	r18, Y+7	; 0x07
     dac:	38 85       	ldd	r19, Y+8	; 0x08
     dae:	22 30       	cpi	r18, 0x02	; 2
     db0:	31 05       	cpc	r19, r1
     db2:	2c f4       	brge	.+10     	; 0xdbe <DIO_SetPinValue+0x66>
     db4:	8f 81       	ldd	r24, Y+7	; 0x07
     db6:	98 85       	ldd	r25, Y+8	; 0x08
     db8:	00 97       	sbiw	r24, 0x00	; 0
     dba:	61 f0       	breq	.+24     	; 0xdd4 <DIO_SetPinValue+0x7c>
     dbc:	d4 c0       	rjmp	.+424    	; 0xf66 <DIO_SetPinValue+0x20e>
     dbe:	2f 81       	ldd	r18, Y+7	; 0x07
     dc0:	38 85       	ldd	r19, Y+8	; 0x08
     dc2:	22 30       	cpi	r18, 0x02	; 2
     dc4:	31 05       	cpc	r19, r1
     dc6:	71 f1       	breq	.+92     	; 0xe24 <DIO_SetPinValue+0xcc>
     dc8:	8f 81       	ldd	r24, Y+7	; 0x07
     dca:	98 85       	ldd	r25, Y+8	; 0x08
     dcc:	83 30       	cpi	r24, 0x03	; 3
     dce:	91 05       	cpc	r25, r1
     dd0:	e9 f1       	breq	.+122    	; 0xe4c <DIO_SetPinValue+0xf4>
     dd2:	c9 c0       	rjmp	.+402    	; 0xf66 <DIO_SetPinValue+0x20e>
					{
						case PORTA : 	SET_BIT(PORTA_register,u8_PinNumberCopy);	break;
     dd4:	ab e3       	ldi	r26, 0x3B	; 59
     dd6:	b0 e0       	ldi	r27, 0x00	; 0
     dd8:	eb e3       	ldi	r30, 0x3B	; 59
     dda:	f0 e0       	ldi	r31, 0x00	; 0
     ddc:	80 81       	ld	r24, Z
     dde:	48 2f       	mov	r20, r24
     de0:	8b 81       	ldd	r24, Y+3	; 0x03
     de2:	28 2f       	mov	r18, r24
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	81 e0       	ldi	r24, 0x01	; 1
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	02 2e       	mov	r0, r18
     dec:	02 c0       	rjmp	.+4      	; 0xdf2 <DIO_SetPinValue+0x9a>
     dee:	88 0f       	add	r24, r24
     df0:	99 1f       	adc	r25, r25
     df2:	0a 94       	dec	r0
     df4:	e2 f7       	brpl	.-8      	; 0xdee <DIO_SetPinValue+0x96>
     df6:	84 2b       	or	r24, r20
     df8:	8c 93       	st	X, r24
     dfa:	b5 c0       	rjmp	.+362    	; 0xf66 <DIO_SetPinValue+0x20e>
						case PORTB :	SET_BIT(PORTB_register,u8_PinNumberCopy);	break;
     dfc:	a8 e3       	ldi	r26, 0x38	; 56
     dfe:	b0 e0       	ldi	r27, 0x00	; 0
     e00:	e8 e3       	ldi	r30, 0x38	; 56
     e02:	f0 e0       	ldi	r31, 0x00	; 0
     e04:	80 81       	ld	r24, Z
     e06:	48 2f       	mov	r20, r24
     e08:	8b 81       	ldd	r24, Y+3	; 0x03
     e0a:	28 2f       	mov	r18, r24
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	81 e0       	ldi	r24, 0x01	; 1
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	02 2e       	mov	r0, r18
     e14:	02 c0       	rjmp	.+4      	; 0xe1a <DIO_SetPinValue+0xc2>
     e16:	88 0f       	add	r24, r24
     e18:	99 1f       	adc	r25, r25
     e1a:	0a 94       	dec	r0
     e1c:	e2 f7       	brpl	.-8      	; 0xe16 <DIO_SetPinValue+0xbe>
     e1e:	84 2b       	or	r24, r20
     e20:	8c 93       	st	X, r24
     e22:	a1 c0       	rjmp	.+322    	; 0xf66 <DIO_SetPinValue+0x20e>
						case PORTC :	SET_BIT(PORTC_register,u8_PinNumberCopy);	break;
     e24:	a5 e3       	ldi	r26, 0x35	; 53
     e26:	b0 e0       	ldi	r27, 0x00	; 0
     e28:	e5 e3       	ldi	r30, 0x35	; 53
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	80 81       	ld	r24, Z
     e2e:	48 2f       	mov	r20, r24
     e30:	8b 81       	ldd	r24, Y+3	; 0x03
     e32:	28 2f       	mov	r18, r24
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	81 e0       	ldi	r24, 0x01	; 1
     e38:	90 e0       	ldi	r25, 0x00	; 0
     e3a:	02 2e       	mov	r0, r18
     e3c:	02 c0       	rjmp	.+4      	; 0xe42 <DIO_SetPinValue+0xea>
     e3e:	88 0f       	add	r24, r24
     e40:	99 1f       	adc	r25, r25
     e42:	0a 94       	dec	r0
     e44:	e2 f7       	brpl	.-8      	; 0xe3e <DIO_SetPinValue+0xe6>
     e46:	84 2b       	or	r24, r20
     e48:	8c 93       	st	X, r24
     e4a:	8d c0       	rjmp	.+282    	; 0xf66 <DIO_SetPinValue+0x20e>
						case PORTD :	SET_BIT(PORTD_register,u8_PinNumberCopy);	break;
     e4c:	a2 e3       	ldi	r26, 0x32	; 50
     e4e:	b0 e0       	ldi	r27, 0x00	; 0
     e50:	e2 e3       	ldi	r30, 0x32	; 50
     e52:	f0 e0       	ldi	r31, 0x00	; 0
     e54:	80 81       	ld	r24, Z
     e56:	48 2f       	mov	r20, r24
     e58:	8b 81       	ldd	r24, Y+3	; 0x03
     e5a:	28 2f       	mov	r18, r24
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	81 e0       	ldi	r24, 0x01	; 1
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	02 2e       	mov	r0, r18
     e64:	02 c0       	rjmp	.+4      	; 0xe6a <DIO_SetPinValue+0x112>
     e66:	88 0f       	add	r24, r24
     e68:	99 1f       	adc	r25, r25
     e6a:	0a 94       	dec	r0
     e6c:	e2 f7       	brpl	.-8      	; 0xe66 <DIO_SetPinValue+0x10e>
     e6e:	84 2b       	or	r24, r20
     e70:	8c 93       	st	X, r24
     e72:	79 c0       	rjmp	.+242    	; 0xf66 <DIO_SetPinValue+0x20e>
					}

				}
				else if (u8_PinValueCopy == LOW)
     e74:	8c 81       	ldd	r24, Y+4	; 0x04
     e76:	88 23       	and	r24, r24
     e78:	09 f0       	breq	.+2      	; 0xe7c <DIO_SetPinValue+0x124>
     e7a:	75 c0       	rjmp	.+234    	; 0xf66 <DIO_SetPinValue+0x20e>
				{
					switch(u8_PortIDCopy)
     e7c:	8a 81       	ldd	r24, Y+2	; 0x02
     e7e:	28 2f       	mov	r18, r24
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	3e 83       	std	Y+6, r19	; 0x06
     e84:	2d 83       	std	Y+5, r18	; 0x05
     e86:	8d 81       	ldd	r24, Y+5	; 0x05
     e88:	9e 81       	ldd	r25, Y+6	; 0x06
     e8a:	81 30       	cpi	r24, 0x01	; 1
     e8c:	91 05       	cpc	r25, r1
     e8e:	59 f1       	breq	.+86     	; 0xee6 <DIO_SetPinValue+0x18e>
     e90:	2d 81       	ldd	r18, Y+5	; 0x05
     e92:	3e 81       	ldd	r19, Y+6	; 0x06
     e94:	22 30       	cpi	r18, 0x02	; 2
     e96:	31 05       	cpc	r19, r1
     e98:	2c f4       	brge	.+10     	; 0xea4 <DIO_SetPinValue+0x14c>
     e9a:	8d 81       	ldd	r24, Y+5	; 0x05
     e9c:	9e 81       	ldd	r25, Y+6	; 0x06
     e9e:	00 97       	sbiw	r24, 0x00	; 0
     ea0:	69 f0       	breq	.+26     	; 0xebc <DIO_SetPinValue+0x164>
     ea2:	61 c0       	rjmp	.+194    	; 0xf66 <DIO_SetPinValue+0x20e>
     ea4:	2d 81       	ldd	r18, Y+5	; 0x05
     ea6:	3e 81       	ldd	r19, Y+6	; 0x06
     ea8:	22 30       	cpi	r18, 0x02	; 2
     eaa:	31 05       	cpc	r19, r1
     eac:	89 f1       	breq	.+98     	; 0xf10 <DIO_SetPinValue+0x1b8>
     eae:	8d 81       	ldd	r24, Y+5	; 0x05
     eb0:	9e 81       	ldd	r25, Y+6	; 0x06
     eb2:	83 30       	cpi	r24, 0x03	; 3
     eb4:	91 05       	cpc	r25, r1
     eb6:	09 f4       	brne	.+2      	; 0xeba <DIO_SetPinValue+0x162>
     eb8:	40 c0       	rjmp	.+128    	; 0xf3a <DIO_SetPinValue+0x1e2>
     eba:	55 c0       	rjmp	.+170    	; 0xf66 <DIO_SetPinValue+0x20e>
							{
								case PORTA :	CLR_BIT(PORTA_register,u8_PinNumberCopy);	break;
     ebc:	ab e3       	ldi	r26, 0x3B	; 59
     ebe:	b0 e0       	ldi	r27, 0x00	; 0
     ec0:	eb e3       	ldi	r30, 0x3B	; 59
     ec2:	f0 e0       	ldi	r31, 0x00	; 0
     ec4:	80 81       	ld	r24, Z
     ec6:	48 2f       	mov	r20, r24
     ec8:	8b 81       	ldd	r24, Y+3	; 0x03
     eca:	28 2f       	mov	r18, r24
     ecc:	30 e0       	ldi	r19, 0x00	; 0
     ece:	81 e0       	ldi	r24, 0x01	; 1
     ed0:	90 e0       	ldi	r25, 0x00	; 0
     ed2:	02 2e       	mov	r0, r18
     ed4:	02 c0       	rjmp	.+4      	; 0xeda <DIO_SetPinValue+0x182>
     ed6:	88 0f       	add	r24, r24
     ed8:	99 1f       	adc	r25, r25
     eda:	0a 94       	dec	r0
     edc:	e2 f7       	brpl	.-8      	; 0xed6 <DIO_SetPinValue+0x17e>
     ede:	80 95       	com	r24
     ee0:	84 23       	and	r24, r20
     ee2:	8c 93       	st	X, r24
     ee4:	40 c0       	rjmp	.+128    	; 0xf66 <DIO_SetPinValue+0x20e>
								case PORTB :	CLR_BIT(PORTB_register,u8_PinNumberCopy);	break;
     ee6:	a8 e3       	ldi	r26, 0x38	; 56
     ee8:	b0 e0       	ldi	r27, 0x00	; 0
     eea:	e8 e3       	ldi	r30, 0x38	; 56
     eec:	f0 e0       	ldi	r31, 0x00	; 0
     eee:	80 81       	ld	r24, Z
     ef0:	48 2f       	mov	r20, r24
     ef2:	8b 81       	ldd	r24, Y+3	; 0x03
     ef4:	28 2f       	mov	r18, r24
     ef6:	30 e0       	ldi	r19, 0x00	; 0
     ef8:	81 e0       	ldi	r24, 0x01	; 1
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	02 2e       	mov	r0, r18
     efe:	02 c0       	rjmp	.+4      	; 0xf04 <DIO_SetPinValue+0x1ac>
     f00:	88 0f       	add	r24, r24
     f02:	99 1f       	adc	r25, r25
     f04:	0a 94       	dec	r0
     f06:	e2 f7       	brpl	.-8      	; 0xf00 <DIO_SetPinValue+0x1a8>
     f08:	80 95       	com	r24
     f0a:	84 23       	and	r24, r20
     f0c:	8c 93       	st	X, r24
     f0e:	2b c0       	rjmp	.+86     	; 0xf66 <DIO_SetPinValue+0x20e>
								case PORTC :	CLR_BIT(PORTC_register,u8_PinNumberCopy);	break;
     f10:	a5 e3       	ldi	r26, 0x35	; 53
     f12:	b0 e0       	ldi	r27, 0x00	; 0
     f14:	e5 e3       	ldi	r30, 0x35	; 53
     f16:	f0 e0       	ldi	r31, 0x00	; 0
     f18:	80 81       	ld	r24, Z
     f1a:	48 2f       	mov	r20, r24
     f1c:	8b 81       	ldd	r24, Y+3	; 0x03
     f1e:	28 2f       	mov	r18, r24
     f20:	30 e0       	ldi	r19, 0x00	; 0
     f22:	81 e0       	ldi	r24, 0x01	; 1
     f24:	90 e0       	ldi	r25, 0x00	; 0
     f26:	02 2e       	mov	r0, r18
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <DIO_SetPinValue+0x1d6>
     f2a:	88 0f       	add	r24, r24
     f2c:	99 1f       	adc	r25, r25
     f2e:	0a 94       	dec	r0
     f30:	e2 f7       	brpl	.-8      	; 0xf2a <DIO_SetPinValue+0x1d2>
     f32:	80 95       	com	r24
     f34:	84 23       	and	r24, r20
     f36:	8c 93       	st	X, r24
     f38:	16 c0       	rjmp	.+44     	; 0xf66 <DIO_SetPinValue+0x20e>
								case PORTD :	CLR_BIT(PORTD_register,u8_PinNumberCopy);	break;
     f3a:	a2 e3       	ldi	r26, 0x32	; 50
     f3c:	b0 e0       	ldi	r27, 0x00	; 0
     f3e:	e2 e3       	ldi	r30, 0x32	; 50
     f40:	f0 e0       	ldi	r31, 0x00	; 0
     f42:	80 81       	ld	r24, Z
     f44:	48 2f       	mov	r20, r24
     f46:	8b 81       	ldd	r24, Y+3	; 0x03
     f48:	28 2f       	mov	r18, r24
     f4a:	30 e0       	ldi	r19, 0x00	; 0
     f4c:	81 e0       	ldi	r24, 0x01	; 1
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	02 2e       	mov	r0, r18
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <DIO_SetPinValue+0x200>
     f54:	88 0f       	add	r24, r24
     f56:	99 1f       	adc	r25, r25
     f58:	0a 94       	dec	r0
     f5a:	e2 f7       	brpl	.-8      	; 0xf54 <DIO_SetPinValue+0x1fc>
     f5c:	80 95       	com	r24
     f5e:	84 23       	and	r24, r20
     f60:	8c 93       	st	X, r24
     f62:	01 c0       	rjmp	.+2      	; 0xf66 <DIO_SetPinValue+0x20e>


		}
	else
	{
		u8_ErrorState = ErrorStateNOK;
     f64:	19 82       	std	Y+1, r1	; 0x01
	}




return u8_ErrorState;
     f66:	89 81       	ldd	r24, Y+1	; 0x01
}
     f68:	28 96       	adiw	r28, 0x08	; 8
     f6a:	0f b6       	in	r0, 0x3f	; 63
     f6c:	f8 94       	cli
     f6e:	de bf       	out	0x3e, r29	; 62
     f70:	0f be       	out	0x3f, r0	; 63
     f72:	cd bf       	out	0x3d, r28	; 61
     f74:	cf 91       	pop	r28
     f76:	df 91       	pop	r29
     f78:	08 95       	ret

00000f7a <DIO_GetPinValue>:
/*Func 3: Get Pins values
 *for any PIN from PIN0 --OR--> 0 to PIN7 --OR--> 7
 *at any PORT from PORTA --OR--> 0 to PORTD --OR--> 3*/

u8 DIO_GetPinValue(u8 u8_PortIDCopy ,u8 u8_PinNumberCopy,u8* u8_PinValueCopy)
{
     f7a:	df 93       	push	r29
     f7c:	cf 93       	push	r28
     f7e:	cd b7       	in	r28, 0x3d	; 61
     f80:	de b7       	in	r29, 0x3e	; 62
     f82:	27 97       	sbiw	r28, 0x07	; 7
     f84:	0f b6       	in	r0, 0x3f	; 63
     f86:	f8 94       	cli
     f88:	de bf       	out	0x3e, r29	; 62
     f8a:	0f be       	out	0x3f, r0	; 63
     f8c:	cd bf       	out	0x3d, r28	; 61
     f8e:	8a 83       	std	Y+2, r24	; 0x02
     f90:	6b 83       	std	Y+3, r22	; 0x03
     f92:	5d 83       	std	Y+5, r21	; 0x05
     f94:	4c 83       	std	Y+4, r20	; 0x04
	//u8 u8_PinValueCopy;
	u8 u8_ErrorState;
	if (((u8_PortIDCopy >= PORTA)&&(u8_PortIDCopy <= PORTD))&&((u8_PinNumberCopy >= PIN0)&&(u8_PinNumberCopy <= PIN7)))
     f96:	8a 81       	ldd	r24, Y+2	; 0x02
     f98:	84 30       	cpi	r24, 0x04	; 4
     f9a:	08 f0       	brcs	.+2      	; 0xf9e <DIO_GetPinValue+0x24>
     f9c:	77 c0       	rjmp	.+238    	; 0x108c <DIO_GetPinValue+0x112>
     f9e:	8b 81       	ldd	r24, Y+3	; 0x03
     fa0:	88 30       	cpi	r24, 0x08	; 8
     fa2:	08 f0       	brcs	.+2      	; 0xfa6 <DIO_GetPinValue+0x2c>
     fa4:	73 c0       	rjmp	.+230    	; 0x108c <DIO_GetPinValue+0x112>
	{/*Function Inputs Error check*/
		u8_ErrorState =ErrorStateOK ;
     fa6:	81 e0       	ldi	r24, 0x01	; 1
     fa8:	89 83       	std	Y+1, r24	; 0x01
		/*Getting Pins Value*/

			switch(u8_PortIDCopy)
     faa:	8a 81       	ldd	r24, Y+2	; 0x02
     fac:	28 2f       	mov	r18, r24
     fae:	30 e0       	ldi	r19, 0x00	; 0
     fb0:	3f 83       	std	Y+7, r19	; 0x07
     fb2:	2e 83       	std	Y+6, r18	; 0x06
     fb4:	4e 81       	ldd	r20, Y+6	; 0x06
     fb6:	5f 81       	ldd	r21, Y+7	; 0x07
     fb8:	41 30       	cpi	r20, 0x01	; 1
     fba:	51 05       	cpc	r21, r1
     fbc:	59 f1       	breq	.+86     	; 0x1014 <DIO_GetPinValue+0x9a>
     fbe:	8e 81       	ldd	r24, Y+6	; 0x06
     fc0:	9f 81       	ldd	r25, Y+7	; 0x07
     fc2:	82 30       	cpi	r24, 0x02	; 2
     fc4:	91 05       	cpc	r25, r1
     fc6:	34 f4       	brge	.+12     	; 0xfd4 <DIO_GetPinValue+0x5a>
     fc8:	2e 81       	ldd	r18, Y+6	; 0x06
     fca:	3f 81       	ldd	r19, Y+7	; 0x07
     fcc:	21 15       	cp	r18, r1
     fce:	31 05       	cpc	r19, r1
     fd0:	69 f0       	breq	.+26     	; 0xfec <DIO_GetPinValue+0x72>
     fd2:	5d c0       	rjmp	.+186    	; 0x108e <DIO_GetPinValue+0x114>
     fd4:	4e 81       	ldd	r20, Y+6	; 0x06
     fd6:	5f 81       	ldd	r21, Y+7	; 0x07
     fd8:	42 30       	cpi	r20, 0x02	; 2
     fda:	51 05       	cpc	r21, r1
     fdc:	79 f1       	breq	.+94     	; 0x103c <DIO_GetPinValue+0xc2>
     fde:	8e 81       	ldd	r24, Y+6	; 0x06
     fe0:	9f 81       	ldd	r25, Y+7	; 0x07
     fe2:	83 30       	cpi	r24, 0x03	; 3
     fe4:	91 05       	cpc	r25, r1
     fe6:	09 f4       	brne	.+2      	; 0xfea <DIO_GetPinValue+0x70>
     fe8:	3d c0       	rjmp	.+122    	; 0x1064 <DIO_GetPinValue+0xea>
     fea:	51 c0       	rjmp	.+162    	; 0x108e <DIO_GetPinValue+0x114>
			{
				case PORTA : 	(*u8_PinValueCopy) = GET_BIT(PINA_register,u8_PinNumberCopy);	break;
     fec:	e9 e3       	ldi	r30, 0x39	; 57
     fee:	f0 e0       	ldi	r31, 0x00	; 0
     ff0:	80 81       	ld	r24, Z
     ff2:	28 2f       	mov	r18, r24
     ff4:	30 e0       	ldi	r19, 0x00	; 0
     ff6:	8b 81       	ldd	r24, Y+3	; 0x03
     ff8:	88 2f       	mov	r24, r24
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	a9 01       	movw	r20, r18
     ffe:	02 c0       	rjmp	.+4      	; 0x1004 <DIO_GetPinValue+0x8a>
    1000:	55 95       	asr	r21
    1002:	47 95       	ror	r20
    1004:	8a 95       	dec	r24
    1006:	e2 f7       	brpl	.-8      	; 0x1000 <DIO_GetPinValue+0x86>
    1008:	ca 01       	movw	r24, r20
    100a:	81 70       	andi	r24, 0x01	; 1
    100c:	ec 81       	ldd	r30, Y+4	; 0x04
    100e:	fd 81       	ldd	r31, Y+5	; 0x05
    1010:	80 83       	st	Z, r24
    1012:	3d c0       	rjmp	.+122    	; 0x108e <DIO_GetPinValue+0x114>
				case PORTB :	(*u8_PinValueCopy) = GET_BIT(PINB_register,u8_PinNumberCopy);	break;
    1014:	e6 e3       	ldi	r30, 0x36	; 54
    1016:	f0 e0       	ldi	r31, 0x00	; 0
    1018:	80 81       	ld	r24, Z
    101a:	28 2f       	mov	r18, r24
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	8b 81       	ldd	r24, Y+3	; 0x03
    1020:	88 2f       	mov	r24, r24
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	a9 01       	movw	r20, r18
    1026:	02 c0       	rjmp	.+4      	; 0x102c <DIO_GetPinValue+0xb2>
    1028:	55 95       	asr	r21
    102a:	47 95       	ror	r20
    102c:	8a 95       	dec	r24
    102e:	e2 f7       	brpl	.-8      	; 0x1028 <DIO_GetPinValue+0xae>
    1030:	ca 01       	movw	r24, r20
    1032:	81 70       	andi	r24, 0x01	; 1
    1034:	ec 81       	ldd	r30, Y+4	; 0x04
    1036:	fd 81       	ldd	r31, Y+5	; 0x05
    1038:	80 83       	st	Z, r24
    103a:	29 c0       	rjmp	.+82     	; 0x108e <DIO_GetPinValue+0x114>
				case PORTC :	(*u8_PinValueCopy) = GET_BIT(PINA_register,u8_PinNumberCopy);	break;
    103c:	e9 e3       	ldi	r30, 0x39	; 57
    103e:	f0 e0       	ldi	r31, 0x00	; 0
    1040:	80 81       	ld	r24, Z
    1042:	28 2f       	mov	r18, r24
    1044:	30 e0       	ldi	r19, 0x00	; 0
    1046:	8b 81       	ldd	r24, Y+3	; 0x03
    1048:	88 2f       	mov	r24, r24
    104a:	90 e0       	ldi	r25, 0x00	; 0
    104c:	a9 01       	movw	r20, r18
    104e:	02 c0       	rjmp	.+4      	; 0x1054 <DIO_GetPinValue+0xda>
    1050:	55 95       	asr	r21
    1052:	47 95       	ror	r20
    1054:	8a 95       	dec	r24
    1056:	e2 f7       	brpl	.-8      	; 0x1050 <DIO_GetPinValue+0xd6>
    1058:	ca 01       	movw	r24, r20
    105a:	81 70       	andi	r24, 0x01	; 1
    105c:	ec 81       	ldd	r30, Y+4	; 0x04
    105e:	fd 81       	ldd	r31, Y+5	; 0x05
    1060:	80 83       	st	Z, r24
    1062:	15 c0       	rjmp	.+42     	; 0x108e <DIO_GetPinValue+0x114>
				case PORTD :	(*u8_PinValueCopy) = GET_BIT(PINA_register,u8_PinNumberCopy);	break;
    1064:	e9 e3       	ldi	r30, 0x39	; 57
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	80 81       	ld	r24, Z
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	8b 81       	ldd	r24, Y+3	; 0x03
    1070:	88 2f       	mov	r24, r24
    1072:	90 e0       	ldi	r25, 0x00	; 0
    1074:	a9 01       	movw	r20, r18
    1076:	02 c0       	rjmp	.+4      	; 0x107c <DIO_GetPinValue+0x102>
    1078:	55 95       	asr	r21
    107a:	47 95       	ror	r20
    107c:	8a 95       	dec	r24
    107e:	e2 f7       	brpl	.-8      	; 0x1078 <DIO_GetPinValue+0xfe>
    1080:	ca 01       	movw	r24, r20
    1082:	81 70       	andi	r24, 0x01	; 1
    1084:	ec 81       	ldd	r30, Y+4	; 0x04
    1086:	fd 81       	ldd	r31, Y+5	; 0x05
    1088:	80 83       	st	Z, r24
    108a:	01 c0       	rjmp	.+2      	; 0x108e <DIO_GetPinValue+0x114>
			}

	}
	else
	{
		u8_ErrorState = ErrorStateNOK ;
    108c:	19 82       	std	Y+1, r1	; 0x01
	}
return u8_ErrorState  ;
    108e:	89 81       	ldd	r24, Y+1	; 0x01

}
    1090:	27 96       	adiw	r28, 0x07	; 7
    1092:	0f b6       	in	r0, 0x3f	; 63
    1094:	f8 94       	cli
    1096:	de bf       	out	0x3e, r29	; 62
    1098:	0f be       	out	0x3f, r0	; 63
    109a:	cd bf       	out	0x3d, r28	; 61
    109c:	cf 91       	pop	r28
    109e:	df 91       	pop	r29
    10a0:	08 95       	ret

000010a2 <DIO_TogPinValue>:
/*Func 4 : toggle Pins values
 *for any PIN from PIN0 --OR--> 0 to PIN7 --OR--> 7
 *at any PORT from PORTA --OR--> 0 to PORTD --OR--> 3*/

u8 DIO_TogPinValue(u8 u8_PortIDCopy ,u8 u8_PinNumberCopy)
{
    10a2:	df 93       	push	r29
    10a4:	cf 93       	push	r28
    10a6:	00 d0       	rcall	.+0      	; 0x10a8 <DIO_TogPinValue+0x6>
    10a8:	00 d0       	rcall	.+0      	; 0x10aa <DIO_TogPinValue+0x8>
    10aa:	0f 92       	push	r0
    10ac:	cd b7       	in	r28, 0x3d	; 61
    10ae:	de b7       	in	r29, 0x3e	; 62
    10b0:	8a 83       	std	Y+2, r24	; 0x02
    10b2:	6b 83       	std	Y+3, r22	; 0x03
	u8 u8_ErrorState;


	if (((u8_PortIDCopy >= PORTA)&&(u8_PortIDCopy <= PORTD))&&((u8_PinNumberCopy >= PIN0)&&(u8_PinNumberCopy <= PIN7)))
    10b4:	8a 81       	ldd	r24, Y+2	; 0x02
    10b6:	84 30       	cpi	r24, 0x04	; 4
    10b8:	08 f0       	brcs	.+2      	; 0x10bc <DIO_TogPinValue+0x1a>
    10ba:	75 c0       	rjmp	.+234    	; 0x11a6 <DIO_TogPinValue+0x104>
    10bc:	8b 81       	ldd	r24, Y+3	; 0x03
    10be:	88 30       	cpi	r24, 0x08	; 8
    10c0:	08 f0       	brcs	.+2      	; 0x10c4 <DIO_TogPinValue+0x22>
    10c2:	71 c0       	rjmp	.+226    	; 0x11a6 <DIO_TogPinValue+0x104>
	{/*Function Inputs Error check*/
		u8_ErrorState =ErrorStateOK ;
    10c4:	81 e0       	ldi	r24, 0x01	; 1
    10c6:	89 83       	std	Y+1, r24	; 0x01
		/*Toggle Pins Value*/

			switch(u8_PortIDCopy)
    10c8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ca:	28 2f       	mov	r18, r24
    10cc:	30 e0       	ldi	r19, 0x00	; 0
    10ce:	3d 83       	std	Y+5, r19	; 0x05
    10d0:	2c 83       	std	Y+4, r18	; 0x04
    10d2:	8c 81       	ldd	r24, Y+4	; 0x04
    10d4:	9d 81       	ldd	r25, Y+5	; 0x05
    10d6:	81 30       	cpi	r24, 0x01	; 1
    10d8:	91 05       	cpc	r25, r1
    10da:	49 f1       	breq	.+82     	; 0x112e <DIO_TogPinValue+0x8c>
    10dc:	2c 81       	ldd	r18, Y+4	; 0x04
    10de:	3d 81       	ldd	r19, Y+5	; 0x05
    10e0:	22 30       	cpi	r18, 0x02	; 2
    10e2:	31 05       	cpc	r19, r1
    10e4:	2c f4       	brge	.+10     	; 0x10f0 <DIO_TogPinValue+0x4e>
    10e6:	8c 81       	ldd	r24, Y+4	; 0x04
    10e8:	9d 81       	ldd	r25, Y+5	; 0x05
    10ea:	00 97       	sbiw	r24, 0x00	; 0
    10ec:	61 f0       	breq	.+24     	; 0x1106 <DIO_TogPinValue+0x64>
    10ee:	5c c0       	rjmp	.+184    	; 0x11a8 <DIO_TogPinValue+0x106>
    10f0:	2c 81       	ldd	r18, Y+4	; 0x04
    10f2:	3d 81       	ldd	r19, Y+5	; 0x05
    10f4:	22 30       	cpi	r18, 0x02	; 2
    10f6:	31 05       	cpc	r19, r1
    10f8:	71 f1       	breq	.+92     	; 0x1156 <DIO_TogPinValue+0xb4>
    10fa:	8c 81       	ldd	r24, Y+4	; 0x04
    10fc:	9d 81       	ldd	r25, Y+5	; 0x05
    10fe:	83 30       	cpi	r24, 0x03	; 3
    1100:	91 05       	cpc	r25, r1
    1102:	e9 f1       	breq	.+122    	; 0x117e <DIO_TogPinValue+0xdc>
    1104:	51 c0       	rjmp	.+162    	; 0x11a8 <DIO_TogPinValue+0x106>
			{
				case PORTA : 	 TOG_BIT(PORTA_register,u8_PinNumberCopy);	break;
    1106:	ab e3       	ldi	r26, 0x3B	; 59
    1108:	b0 e0       	ldi	r27, 0x00	; 0
    110a:	eb e3       	ldi	r30, 0x3B	; 59
    110c:	f0 e0       	ldi	r31, 0x00	; 0
    110e:	80 81       	ld	r24, Z
    1110:	48 2f       	mov	r20, r24
    1112:	8b 81       	ldd	r24, Y+3	; 0x03
    1114:	28 2f       	mov	r18, r24
    1116:	30 e0       	ldi	r19, 0x00	; 0
    1118:	81 e0       	ldi	r24, 0x01	; 1
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	02 2e       	mov	r0, r18
    111e:	02 c0       	rjmp	.+4      	; 0x1124 <DIO_TogPinValue+0x82>
    1120:	88 0f       	add	r24, r24
    1122:	99 1f       	adc	r25, r25
    1124:	0a 94       	dec	r0
    1126:	e2 f7       	brpl	.-8      	; 0x1120 <DIO_TogPinValue+0x7e>
    1128:	84 27       	eor	r24, r20
    112a:	8c 93       	st	X, r24
    112c:	3d c0       	rjmp	.+122    	; 0x11a8 <DIO_TogPinValue+0x106>
				case PORTB :	 TOG_BIT(PORTB_register,u8_PinNumberCopy);	break;
    112e:	a8 e3       	ldi	r26, 0x38	; 56
    1130:	b0 e0       	ldi	r27, 0x00	; 0
    1132:	e8 e3       	ldi	r30, 0x38	; 56
    1134:	f0 e0       	ldi	r31, 0x00	; 0
    1136:	80 81       	ld	r24, Z
    1138:	48 2f       	mov	r20, r24
    113a:	8b 81       	ldd	r24, Y+3	; 0x03
    113c:	28 2f       	mov	r18, r24
    113e:	30 e0       	ldi	r19, 0x00	; 0
    1140:	81 e0       	ldi	r24, 0x01	; 1
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	02 2e       	mov	r0, r18
    1146:	02 c0       	rjmp	.+4      	; 0x114c <DIO_TogPinValue+0xaa>
    1148:	88 0f       	add	r24, r24
    114a:	99 1f       	adc	r25, r25
    114c:	0a 94       	dec	r0
    114e:	e2 f7       	brpl	.-8      	; 0x1148 <DIO_TogPinValue+0xa6>
    1150:	84 27       	eor	r24, r20
    1152:	8c 93       	st	X, r24
    1154:	29 c0       	rjmp	.+82     	; 0x11a8 <DIO_TogPinValue+0x106>
				case PORTC :	 TOG_BIT(PORTC_register,u8_PinNumberCopy);	break;
    1156:	a5 e3       	ldi	r26, 0x35	; 53
    1158:	b0 e0       	ldi	r27, 0x00	; 0
    115a:	e5 e3       	ldi	r30, 0x35	; 53
    115c:	f0 e0       	ldi	r31, 0x00	; 0
    115e:	80 81       	ld	r24, Z
    1160:	48 2f       	mov	r20, r24
    1162:	8b 81       	ldd	r24, Y+3	; 0x03
    1164:	28 2f       	mov	r18, r24
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	81 e0       	ldi	r24, 0x01	; 1
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	02 2e       	mov	r0, r18
    116e:	02 c0       	rjmp	.+4      	; 0x1174 <DIO_TogPinValue+0xd2>
    1170:	88 0f       	add	r24, r24
    1172:	99 1f       	adc	r25, r25
    1174:	0a 94       	dec	r0
    1176:	e2 f7       	brpl	.-8      	; 0x1170 <DIO_TogPinValue+0xce>
    1178:	84 27       	eor	r24, r20
    117a:	8c 93       	st	X, r24
    117c:	15 c0       	rjmp	.+42     	; 0x11a8 <DIO_TogPinValue+0x106>
				case PORTD :	 TOG_BIT(PORTD_register,u8_PinNumberCopy);	break;
    117e:	a2 e3       	ldi	r26, 0x32	; 50
    1180:	b0 e0       	ldi	r27, 0x00	; 0
    1182:	e2 e3       	ldi	r30, 0x32	; 50
    1184:	f0 e0       	ldi	r31, 0x00	; 0
    1186:	80 81       	ld	r24, Z
    1188:	48 2f       	mov	r20, r24
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	28 2f       	mov	r18, r24
    118e:	30 e0       	ldi	r19, 0x00	; 0
    1190:	81 e0       	ldi	r24, 0x01	; 1
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	02 2e       	mov	r0, r18
    1196:	02 c0       	rjmp	.+4      	; 0x119c <DIO_TogPinValue+0xfa>
    1198:	88 0f       	add	r24, r24
    119a:	99 1f       	adc	r25, r25
    119c:	0a 94       	dec	r0
    119e:	e2 f7       	brpl	.-8      	; 0x1198 <DIO_TogPinValue+0xf6>
    11a0:	84 27       	eor	r24, r20
    11a2:	8c 93       	st	X, r24
    11a4:	01 c0       	rjmp	.+2      	; 0x11a8 <DIO_TogPinValue+0x106>


	}
	else
	{
		u8_ErrorState = ErrorStateNOK ;
    11a6:	19 82       	std	Y+1, r1	; 0x01
	}
return u8_ErrorState ;
    11a8:	89 81       	ldd	r24, Y+1	; 0x01

}
    11aa:	0f 90       	pop	r0
    11ac:	0f 90       	pop	r0
    11ae:	0f 90       	pop	r0
    11b0:	0f 90       	pop	r0
    11b2:	0f 90       	pop	r0
    11b4:	cf 91       	pop	r28
    11b6:	df 91       	pop	r29
    11b8:	08 95       	ret

000011ba <DIO_SetPortDirection>:
 *PS : Note : NOISE on non-PULLED Input PINS */



u8 DIO_SetPortDirection(u8 u8_PortIDCopy,u8 u8_PortDirectionCopy)
{
    11ba:	df 93       	push	r29
    11bc:	cf 93       	push	r28
    11be:	00 d0       	rcall	.+0      	; 0x11c0 <DIO_SetPortDirection+0x6>
    11c0:	00 d0       	rcall	.+0      	; 0x11c2 <DIO_SetPortDirection+0x8>
    11c2:	0f 92       	push	r0
    11c4:	cd b7       	in	r28, 0x3d	; 61
    11c6:	de b7       	in	r29, 0x3e	; 62
    11c8:	8a 83       	std	Y+2, r24	; 0x02
    11ca:	6b 83       	std	Y+3, r22	; 0x03
	u8 u8_ErrorState;
	if ((u8_PortIDCopy >= PORTA) && (u8_PortIDCopy <= PORTD)&& (u8_PortDirectionCopy >= PORT_INPUT) && (u8_PortDirectionCopy <= PORT_OUTPUT))
    11cc:	8a 81       	ldd	r24, Y+2	; 0x02
    11ce:	84 30       	cpi	r24, 0x04	; 4
    11d0:	a8 f5       	brcc	.+106    	; 0x123c <DIO_SetPortDirection+0x82>
		{/*Error Check */
			u8_ErrorState = ErrorStateOK;
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	89 83       	std	Y+1, r24	; 0x01
		 /*Setting PORT Direction*/
			switch(u8_PortIDCopy)
    11d6:	8a 81       	ldd	r24, Y+2	; 0x02
    11d8:	28 2f       	mov	r18, r24
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	3d 83       	std	Y+5, r19	; 0x05
    11de:	2c 83       	std	Y+4, r18	; 0x04
    11e0:	8c 81       	ldd	r24, Y+4	; 0x04
    11e2:	9d 81       	ldd	r25, Y+5	; 0x05
    11e4:	81 30       	cpi	r24, 0x01	; 1
    11e6:	91 05       	cpc	r25, r1
    11e8:	d1 f0       	breq	.+52     	; 0x121e <DIO_SetPortDirection+0x64>
    11ea:	2c 81       	ldd	r18, Y+4	; 0x04
    11ec:	3d 81       	ldd	r19, Y+5	; 0x05
    11ee:	22 30       	cpi	r18, 0x02	; 2
    11f0:	31 05       	cpc	r19, r1
    11f2:	2c f4       	brge	.+10     	; 0x11fe <DIO_SetPortDirection+0x44>
    11f4:	8c 81       	ldd	r24, Y+4	; 0x04
    11f6:	9d 81       	ldd	r25, Y+5	; 0x05
    11f8:	00 97       	sbiw	r24, 0x00	; 0
    11fa:	61 f0       	breq	.+24     	; 0x1214 <DIO_SetPortDirection+0x5a>
    11fc:	20 c0       	rjmp	.+64     	; 0x123e <DIO_SetPortDirection+0x84>
    11fe:	2c 81       	ldd	r18, Y+4	; 0x04
    1200:	3d 81       	ldd	r19, Y+5	; 0x05
    1202:	22 30       	cpi	r18, 0x02	; 2
    1204:	31 05       	cpc	r19, r1
    1206:	81 f0       	breq	.+32     	; 0x1228 <DIO_SetPortDirection+0x6e>
    1208:	8c 81       	ldd	r24, Y+4	; 0x04
    120a:	9d 81       	ldd	r25, Y+5	; 0x05
    120c:	83 30       	cpi	r24, 0x03	; 3
    120e:	91 05       	cpc	r25, r1
    1210:	81 f0       	breq	.+32     	; 0x1232 <DIO_SetPortDirection+0x78>
    1212:	15 c0       	rjmp	.+42     	; 0x123e <DIO_SetPortDirection+0x84>
			{
			case PORTA :	DDRA_register = u8_PortDirectionCopy ; 	break;
    1214:	ea e3       	ldi	r30, 0x3A	; 58
    1216:	f0 e0       	ldi	r31, 0x00	; 0
    1218:	8b 81       	ldd	r24, Y+3	; 0x03
    121a:	80 83       	st	Z, r24
    121c:	10 c0       	rjmp	.+32     	; 0x123e <DIO_SetPortDirection+0x84>
			case PORTB :	DDRB_register = u8_PortDirectionCopy ;	break;
    121e:	e7 e3       	ldi	r30, 0x37	; 55
    1220:	f0 e0       	ldi	r31, 0x00	; 0
    1222:	8b 81       	ldd	r24, Y+3	; 0x03
    1224:	80 83       	st	Z, r24
    1226:	0b c0       	rjmp	.+22     	; 0x123e <DIO_SetPortDirection+0x84>
			case PORTC :	DDRC_register = u8_PortDirectionCopy ;	break;
    1228:	e4 e3       	ldi	r30, 0x34	; 52
    122a:	f0 e0       	ldi	r31, 0x00	; 0
    122c:	8b 81       	ldd	r24, Y+3	; 0x03
    122e:	80 83       	st	Z, r24
    1230:	06 c0       	rjmp	.+12     	; 0x123e <DIO_SetPortDirection+0x84>
			case PORTD : 	DDRD_register = u8_PortDirectionCopy ;	break;
    1232:	e1 e3       	ldi	r30, 0x31	; 49
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	8b 81       	ldd	r24, Y+3	; 0x03
    1238:	80 83       	st	Z, r24
    123a:	01 c0       	rjmp	.+2      	; 0x123e <DIO_SetPortDirection+0x84>
			}
		}
	else
	{
		u8_ErrorState = ErrorStateNOK;
    123c:	19 82       	std	Y+1, r1	; 0x01
	}

	return u8_ErrorState ;
    123e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1240:	0f 90       	pop	r0
    1242:	0f 90       	pop	r0
    1244:	0f 90       	pop	r0
    1246:	0f 90       	pop	r0
    1248:	0f 90       	pop	r0
    124a:	cf 91       	pop	r28
    124c:	df 91       	pop	r29
    124e:	08 95       	ret

00001250 <DIO_SetPortValue>:
 *to PORT_HIGH -->  0xFF - All port PINS are HIGH -
 *for any PORT from PORTA --OR--> 0 to PORTD --OR--> 3
 *Note : NOISE on non-PULLED Input PINS*/

u8 DIO_SetPortValue(u8 u8_PortIDCopy,u8 u8_PortValueCopy)
{
    1250:	df 93       	push	r29
    1252:	cf 93       	push	r28
    1254:	00 d0       	rcall	.+0      	; 0x1256 <DIO_SetPortValue+0x6>
    1256:	00 d0       	rcall	.+0      	; 0x1258 <DIO_SetPortValue+0x8>
    1258:	0f 92       	push	r0
    125a:	cd b7       	in	r28, 0x3d	; 61
    125c:	de b7       	in	r29, 0x3e	; 62
    125e:	8a 83       	std	Y+2, r24	; 0x02
    1260:	6b 83       	std	Y+3, r22	; 0x03
	u8 u8_ErrorState;
	if ((u8_PortIDCopy >= PORTA) && (u8_PortIDCopy <= PORTD)&& (u8_PortValueCopy >= PORT_LOW) && (u8_PortValueCopy <= PORT_HIGH))
    1262:	8a 81       	ldd	r24, Y+2	; 0x02
    1264:	84 30       	cpi	r24, 0x04	; 4
    1266:	a8 f5       	brcc	.+106    	; 0x12d2 <DIO_SetPortValue+0x82>
		{/*Error Check */
			u8_ErrorState = ErrorStateOK;
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	89 83       	std	Y+1, r24	; 0x01
		/* Setting PORT Value*/
			switch(u8_PortIDCopy)
    126c:	8a 81       	ldd	r24, Y+2	; 0x02
    126e:	28 2f       	mov	r18, r24
    1270:	30 e0       	ldi	r19, 0x00	; 0
    1272:	3d 83       	std	Y+5, r19	; 0x05
    1274:	2c 83       	std	Y+4, r18	; 0x04
    1276:	8c 81       	ldd	r24, Y+4	; 0x04
    1278:	9d 81       	ldd	r25, Y+5	; 0x05
    127a:	81 30       	cpi	r24, 0x01	; 1
    127c:	91 05       	cpc	r25, r1
    127e:	d1 f0       	breq	.+52     	; 0x12b4 <DIO_SetPortValue+0x64>
    1280:	2c 81       	ldd	r18, Y+4	; 0x04
    1282:	3d 81       	ldd	r19, Y+5	; 0x05
    1284:	22 30       	cpi	r18, 0x02	; 2
    1286:	31 05       	cpc	r19, r1
    1288:	2c f4       	brge	.+10     	; 0x1294 <DIO_SetPortValue+0x44>
    128a:	8c 81       	ldd	r24, Y+4	; 0x04
    128c:	9d 81       	ldd	r25, Y+5	; 0x05
    128e:	00 97       	sbiw	r24, 0x00	; 0
    1290:	61 f0       	breq	.+24     	; 0x12aa <DIO_SetPortValue+0x5a>
    1292:	20 c0       	rjmp	.+64     	; 0x12d4 <DIO_SetPortValue+0x84>
    1294:	2c 81       	ldd	r18, Y+4	; 0x04
    1296:	3d 81       	ldd	r19, Y+5	; 0x05
    1298:	22 30       	cpi	r18, 0x02	; 2
    129a:	31 05       	cpc	r19, r1
    129c:	81 f0       	breq	.+32     	; 0x12be <DIO_SetPortValue+0x6e>
    129e:	8c 81       	ldd	r24, Y+4	; 0x04
    12a0:	9d 81       	ldd	r25, Y+5	; 0x05
    12a2:	83 30       	cpi	r24, 0x03	; 3
    12a4:	91 05       	cpc	r25, r1
    12a6:	81 f0       	breq	.+32     	; 0x12c8 <DIO_SetPortValue+0x78>
    12a8:	15 c0       	rjmp	.+42     	; 0x12d4 <DIO_SetPortValue+0x84>
			{
			case PORTA :	PORTA_register = u8_PortValueCopy ; 	break;
    12aa:	eb e3       	ldi	r30, 0x3B	; 59
    12ac:	f0 e0       	ldi	r31, 0x00	; 0
    12ae:	8b 81       	ldd	r24, Y+3	; 0x03
    12b0:	80 83       	st	Z, r24
    12b2:	10 c0       	rjmp	.+32     	; 0x12d4 <DIO_SetPortValue+0x84>
			case PORTB :	PORTB_register = u8_PortValueCopy ;		break;
    12b4:	e8 e3       	ldi	r30, 0x38	; 56
    12b6:	f0 e0       	ldi	r31, 0x00	; 0
    12b8:	8b 81       	ldd	r24, Y+3	; 0x03
    12ba:	80 83       	st	Z, r24
    12bc:	0b c0       	rjmp	.+22     	; 0x12d4 <DIO_SetPortValue+0x84>
			case PORTC :	PORTC_register = u8_PortValueCopy ;		break;
    12be:	e5 e3       	ldi	r30, 0x35	; 53
    12c0:	f0 e0       	ldi	r31, 0x00	; 0
    12c2:	8b 81       	ldd	r24, Y+3	; 0x03
    12c4:	80 83       	st	Z, r24
    12c6:	06 c0       	rjmp	.+12     	; 0x12d4 <DIO_SetPortValue+0x84>
			case PORTD : 	PORTD_register = u8_PortValueCopy ;		break;
    12c8:	e2 e3       	ldi	r30, 0x32	; 50
    12ca:	f0 e0       	ldi	r31, 0x00	; 0
    12cc:	8b 81       	ldd	r24, Y+3	; 0x03
    12ce:	80 83       	st	Z, r24
    12d0:	01 c0       	rjmp	.+2      	; 0x12d4 <DIO_SetPortValue+0x84>
			}
		}
	else
	{
		u8_ErrorState = ErrorStateNOK;
    12d2:	19 82       	std	Y+1, r1	; 0x01
	}

	return u8_ErrorState ;
    12d4:	89 81       	ldd	r24, Y+1	; 0x01
}
    12d6:	0f 90       	pop	r0
    12d8:	0f 90       	pop	r0
    12da:	0f 90       	pop	r0
    12dc:	0f 90       	pop	r0
    12de:	0f 90       	pop	r0
    12e0:	cf 91       	pop	r28
    12e2:	df 91       	pop	r29
    12e4:	08 95       	ret

000012e6 <KPD_PinsInitialization>:

u8 PinsArr[RowNum][ColsNum] ={{'7','8','9','/'},{'4','5','6','*'},{'1','2','3','-'},{'0','<','>','+'}};


void KPD_PinsInitialization()
{	/*Colunms connected to PORTA and the first 4Pins are output*/
    12e6:	df 93       	push	r29
    12e8:	cf 93       	push	r28
    12ea:	cd b7       	in	r28, 0x3d	; 61
    12ec:	de b7       	in	r29, 0x3e	; 62
		DIO_SetPinDirection(ColPort,ColPin1,OUTPUT);
    12ee:	80 e0       	ldi	r24, 0x00	; 0
    12f0:	60 e0       	ldi	r22, 0x00	; 0
    12f2:	41 e0       	ldi	r20, 0x01	; 1
    12f4:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		DIO_SetPinDirection(ColPort,ColPin2,OUTPUT);
    12f8:	80 e0       	ldi	r24, 0x00	; 0
    12fa:	61 e0       	ldi	r22, 0x01	; 1
    12fc:	41 e0       	ldi	r20, 0x01	; 1
    12fe:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		DIO_SetPinDirection(ColPort,ColPin3,OUTPUT);
    1302:	80 e0       	ldi	r24, 0x00	; 0
    1304:	62 e0       	ldi	r22, 0x02	; 2
    1306:	41 e0       	ldi	r20, 0x01	; 1
    1308:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		DIO_SetPinDirection(ColPort,ColPin4,OUTPUT);
    130c:	80 e0       	ldi	r24, 0x00	; 0
    130e:	63 e0       	ldi	r22, 0x03	; 3
    1310:	41 e0       	ldi	r20, 0x01	; 1
    1312:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		/*Write D1 to the Columns*/
		DIO_SetPinValue(ColPort,ColPin1,HIGH);
    1316:	80 e0       	ldi	r24, 0x00	; 0
    1318:	60 e0       	ldi	r22, 0x00	; 0
    131a:	41 e0       	ldi	r20, 0x01	; 1
    131c:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
		DIO_SetPinValue(ColPort,ColPin2,HIGH);
    1320:	80 e0       	ldi	r24, 0x00	; 0
    1322:	61 e0       	ldi	r22, 0x01	; 1
    1324:	41 e0       	ldi	r20, 0x01	; 1
    1326:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
		DIO_SetPinValue(ColPort,ColPin3,HIGH);
    132a:	80 e0       	ldi	r24, 0x00	; 0
    132c:	62 e0       	ldi	r22, 0x02	; 2
    132e:	41 e0       	ldi	r20, 0x01	; 1
    1330:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
		DIO_SetPinValue(ColPort,ColPin4,HIGH);
    1334:	80 e0       	ldi	r24, 0x00	; 0
    1336:	63 e0       	ldi	r22, 0x03	; 3
    1338:	41 e0       	ldi	r20, 0x01	; 1
    133a:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
		/**********************************************************/
		/*Rows connected to PORTB and the first 4Pins are inputs*/
		DIO_SetPinDirection(RowPort,RowPin1,INPUT);
    133e:	81 e0       	ldi	r24, 0x01	; 1
    1340:	60 e0       	ldi	r22, 0x00	; 0
    1342:	40 e0       	ldi	r20, 0x00	; 0
    1344:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		DIO_SetPinDirection(RowPort,RowPin2,INPUT);
    1348:	81 e0       	ldi	r24, 0x01	; 1
    134a:	61 e0       	ldi	r22, 0x01	; 1
    134c:	40 e0       	ldi	r20, 0x00	; 0
    134e:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		DIO_SetPinDirection(RowPort,RowPin3,INPUT);
    1352:	81 e0       	ldi	r24, 0x01	; 1
    1354:	62 e0       	ldi	r22, 0x02	; 2
    1356:	40 e0       	ldi	r20, 0x00	; 0
    1358:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		DIO_SetPinDirection(RowPort,RowPin4,INPUT);
    135c:	81 e0       	ldi	r24, 0x01	; 1
    135e:	63 e0       	ldi	r22, 0x03	; 3
    1360:	40 e0       	ldi	r20, 0x00	; 0
    1362:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
		/*Pulling up to PORTB first 4 Pins*/
		DIO_SetPinValue(RowPort,RowPin1,HIGH);
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	60 e0       	ldi	r22, 0x00	; 0
    136a:	41 e0       	ldi	r20, 0x01	; 1
    136c:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
		DIO_SetPinValue(RowPort,RowPin2,HIGH);
    1370:	81 e0       	ldi	r24, 0x01	; 1
    1372:	61 e0       	ldi	r22, 0x01	; 1
    1374:	41 e0       	ldi	r20, 0x01	; 1
    1376:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
		DIO_SetPinValue(RowPort,RowPin3,HIGH);
    137a:	81 e0       	ldi	r24, 0x01	; 1
    137c:	62 e0       	ldi	r22, 0x02	; 2
    137e:	41 e0       	ldi	r20, 0x01	; 1
    1380:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
		DIO_SetPinValue(RowPort,RowPin4,HIGH);
    1384:	81 e0       	ldi	r24, 0x01	; 1
    1386:	63 e0       	ldi	r22, 0x03	; 3
    1388:	41 e0       	ldi	r20, 0x01	; 1
    138a:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>

}
    138e:	cf 91       	pop	r28
    1390:	df 91       	pop	r29
    1392:	08 95       	ret

00001394 <KPD_GetPressedKey>:

u8 KPD_GetPressedKey()
{
    1394:	df 93       	push	r29
    1396:	cf 93       	push	r28
    1398:	cd b7       	in	r28, 0x3d	; 61
    139a:	de b7       	in	r29, 0x3e	; 62
    139c:	62 97       	sbiw	r28, 0x12	; 18
    139e:	0f b6       	in	r0, 0x3f	; 63
    13a0:	f8 94       	cli
    13a2:	de bf       	out	0x3e, r29	; 62
    13a4:	0f be       	out	0x3f, r0	; 63
    13a6:	cd bf       	out	0x3d, r28	; 61
	u8 u8_ColIndex,u8_RowIndex;
	u8 u8_PinValue = 1;
    13a8:	81 e0       	ldi	r24, 0x01	; 1
    13aa:	8a 8b       	std	Y+18, r24	; 0x12
	//Last PressedKey Value remains saved until a new press occurs
	u8 u8_PressedKeyValue = '@';
    13ac:	80 e4       	ldi	r24, 0x40	; 64
    13ae:	8f 87       	std	Y+15, r24	; 0x0f
	for(u8_ColIndex =0;u8_ColIndex < ColsNum;u8_ColIndex++)
    13b0:	19 8a       	std	Y+17, r1	; 0x11
    13b2:	b2 c0       	rjmp	.+356    	; 0x1518 <KPD_GetPressedKey+0x184>
			{
				DIO_SetPinValue(ColPort, u8_ColIndex,LOW);
    13b4:	80 e0       	ldi	r24, 0x00	; 0
    13b6:	69 89       	ldd	r22, Y+17	; 0x11
    13b8:	40 e0       	ldi	r20, 0x00	; 0
    13ba:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
				for (u8_RowIndex = 0;u8_RowIndex < RowNum; u8_RowIndex ++)
    13be:	18 8a       	std	Y+16, r1	; 0x10
    13c0:	9f c0       	rjmp	.+318    	; 0x1500 <KPD_GetPressedKey+0x16c>
				{
					//DIO_GetPinValue(RowPort,u8_RowIndex,& u8_PinValue);

					DIO_GetPinValue(RowPort,u8_RowIndex,& u8_PinValue);
    13c2:	9e 01       	movw	r18, r28
    13c4:	2e 5e       	subi	r18, 0xEE	; 238
    13c6:	3f 4f       	sbci	r19, 0xFF	; 255
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	68 89       	ldd	r22, Y+16	; 0x10
    13cc:	a9 01       	movw	r20, r18
    13ce:	0e 94 bd 07 	call	0xf7a	; 0xf7a <DIO_GetPinValue>
					if (u8_PinValue == 0)
    13d2:	8a 89       	ldd	r24, Y+18	; 0x12
    13d4:	88 23       	and	r24, r24
    13d6:	09 f0       	breq	.+2      	; 0x13da <KPD_GetPressedKey+0x46>
    13d8:	90 c0       	rjmp	.+288    	; 0x14fa <KPD_GetPressedKey+0x166>
    13da:	08 c0       	rjmp	.+16     	; 0x13ec <KPD_GetPressedKey+0x58>
					{
						while(u8_PinValue == 0)
						{
							DIO_GetPinValue(RowPort,u8_RowIndex,& u8_PinValue);
    13dc:	9e 01       	movw	r18, r28
    13de:	2e 5e       	subi	r18, 0xEE	; 238
    13e0:	3f 4f       	sbci	r19, 0xFF	; 255
    13e2:	81 e0       	ldi	r24, 0x01	; 1
    13e4:	68 89       	ldd	r22, Y+16	; 0x10
    13e6:	a9 01       	movw	r20, r18
    13e8:	0e 94 bd 07 	call	0xf7a	; 0xf7a <DIO_GetPinValue>
					//DIO_GetPinValue(RowPort,u8_RowIndex,& u8_PinValue);

					DIO_GetPinValue(RowPort,u8_RowIndex,& u8_PinValue);
					if (u8_PinValue == 0)
					{
						while(u8_PinValue == 0)
    13ec:	8a 89       	ldd	r24, Y+18	; 0x12
    13ee:	88 23       	and	r24, r24
    13f0:	a9 f3       	breq	.-22     	; 0x13dc <KPD_GetPressedKey+0x48>
						{
							DIO_GetPinValue(RowPort,u8_RowIndex,& u8_PinValue);
						}
						(u8_PressedKeyValue) = PinsArr[u8_RowIndex][u8_ColIndex];
    13f2:	88 89       	ldd	r24, Y+16	; 0x10
    13f4:	48 2f       	mov	r20, r24
    13f6:	50 e0       	ldi	r21, 0x00	; 0
    13f8:	89 89       	ldd	r24, Y+17	; 0x11
    13fa:	28 2f       	mov	r18, r24
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	ca 01       	movw	r24, r20
    1400:	88 0f       	add	r24, r24
    1402:	99 1f       	adc	r25, r25
    1404:	88 0f       	add	r24, r24
    1406:	99 1f       	adc	r25, r25
    1408:	82 0f       	add	r24, r18
    140a:	93 1f       	adc	r25, r19
    140c:	fc 01       	movw	r30, r24
    140e:	ed 50       	subi	r30, 0x0D	; 13
    1410:	fe 4f       	sbci	r31, 0xFE	; 254
    1412:	80 81       	ld	r24, Z
    1414:	8f 87       	std	Y+15, r24	; 0x0f
    1416:	80 e0       	ldi	r24, 0x00	; 0
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	a0 ea       	ldi	r26, 0xA0	; 160
    141c:	b1 e4       	ldi	r27, 0x41	; 65
    141e:	8b 87       	std	Y+11, r24	; 0x0b
    1420:	9c 87       	std	Y+12, r25	; 0x0c
    1422:	ad 87       	std	Y+13, r26	; 0x0d
    1424:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1426:	6b 85       	ldd	r22, Y+11	; 0x0b
    1428:	7c 85       	ldd	r23, Y+12	; 0x0c
    142a:	8d 85       	ldd	r24, Y+13	; 0x0d
    142c:	9e 85       	ldd	r25, Y+14	; 0x0e
    142e:	20 e0       	ldi	r18, 0x00	; 0
    1430:	30 e0       	ldi	r19, 0x00	; 0
    1432:	4a ef       	ldi	r20, 0xFA	; 250
    1434:	54 e4       	ldi	r21, 0x44	; 68
    1436:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    143a:	dc 01       	movw	r26, r24
    143c:	cb 01       	movw	r24, r22
    143e:	8f 83       	std	Y+7, r24	; 0x07
    1440:	98 87       	std	Y+8, r25	; 0x08
    1442:	a9 87       	std	Y+9, r26	; 0x09
    1444:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1446:	6f 81       	ldd	r22, Y+7	; 0x07
    1448:	78 85       	ldd	r23, Y+8	; 0x08
    144a:	89 85       	ldd	r24, Y+9	; 0x09
    144c:	9a 85       	ldd	r25, Y+10	; 0x0a
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	40 e8       	ldi	r20, 0x80	; 128
    1454:	5f e3       	ldi	r21, 0x3F	; 63
    1456:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    145a:	88 23       	and	r24, r24
    145c:	2c f4       	brge	.+10     	; 0x1468 <KPD_GetPressedKey+0xd4>
		__ticks = 1;
    145e:	81 e0       	ldi	r24, 0x01	; 1
    1460:	90 e0       	ldi	r25, 0x00	; 0
    1462:	9e 83       	std	Y+6, r25	; 0x06
    1464:	8d 83       	std	Y+5, r24	; 0x05
    1466:	3f c0       	rjmp	.+126    	; 0x14e6 <KPD_GetPressedKey+0x152>
	else if (__tmp > 65535)
    1468:	6f 81       	ldd	r22, Y+7	; 0x07
    146a:	78 85       	ldd	r23, Y+8	; 0x08
    146c:	89 85       	ldd	r24, Y+9	; 0x09
    146e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1470:	20 e0       	ldi	r18, 0x00	; 0
    1472:	3f ef       	ldi	r19, 0xFF	; 255
    1474:	4f e7       	ldi	r20, 0x7F	; 127
    1476:	57 e4       	ldi	r21, 0x47	; 71
    1478:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    147c:	18 16       	cp	r1, r24
    147e:	4c f5       	brge	.+82     	; 0x14d2 <KPD_GetPressedKey+0x13e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1480:	6b 85       	ldd	r22, Y+11	; 0x0b
    1482:	7c 85       	ldd	r23, Y+12	; 0x0c
    1484:	8d 85       	ldd	r24, Y+13	; 0x0d
    1486:	9e 85       	ldd	r25, Y+14	; 0x0e
    1488:	20 e0       	ldi	r18, 0x00	; 0
    148a:	30 e0       	ldi	r19, 0x00	; 0
    148c:	40 e2       	ldi	r20, 0x20	; 32
    148e:	51 e4       	ldi	r21, 0x41	; 65
    1490:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1494:	dc 01       	movw	r26, r24
    1496:	cb 01       	movw	r24, r22
    1498:	bc 01       	movw	r22, r24
    149a:	cd 01       	movw	r24, r26
    149c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14a0:	dc 01       	movw	r26, r24
    14a2:	cb 01       	movw	r24, r22
    14a4:	9e 83       	std	Y+6, r25	; 0x06
    14a6:	8d 83       	std	Y+5, r24	; 0x05
    14a8:	0f c0       	rjmp	.+30     	; 0x14c8 <KPD_GetPressedKey+0x134>
    14aa:	88 ec       	ldi	r24, 0xC8	; 200
    14ac:	90 e0       	ldi	r25, 0x00	; 0
    14ae:	9c 83       	std	Y+4, r25	; 0x04
    14b0:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    14b2:	8b 81       	ldd	r24, Y+3	; 0x03
    14b4:	9c 81       	ldd	r25, Y+4	; 0x04
    14b6:	01 97       	sbiw	r24, 0x01	; 1
    14b8:	f1 f7       	brne	.-4      	; 0x14b6 <KPD_GetPressedKey+0x122>
    14ba:	9c 83       	std	Y+4, r25	; 0x04
    14bc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    14be:	8d 81       	ldd	r24, Y+5	; 0x05
    14c0:	9e 81       	ldd	r25, Y+6	; 0x06
    14c2:	01 97       	sbiw	r24, 0x01	; 1
    14c4:	9e 83       	std	Y+6, r25	; 0x06
    14c6:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    14c8:	8d 81       	ldd	r24, Y+5	; 0x05
    14ca:	9e 81       	ldd	r25, Y+6	; 0x06
    14cc:	00 97       	sbiw	r24, 0x00	; 0
    14ce:	69 f7       	brne	.-38     	; 0x14aa <KPD_GetPressedKey+0x116>
    14d0:	14 c0       	rjmp	.+40     	; 0x14fa <KPD_GetPressedKey+0x166>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    14d2:	6f 81       	ldd	r22, Y+7	; 0x07
    14d4:	78 85       	ldd	r23, Y+8	; 0x08
    14d6:	89 85       	ldd	r24, Y+9	; 0x09
    14d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    14da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    14de:	dc 01       	movw	r26, r24
    14e0:	cb 01       	movw	r24, r22
    14e2:	9e 83       	std	Y+6, r25	; 0x06
    14e4:	8d 83       	std	Y+5, r24	; 0x05
    14e6:	8d 81       	ldd	r24, Y+5	; 0x05
    14e8:	9e 81       	ldd	r25, Y+6	; 0x06
    14ea:	9a 83       	std	Y+2, r25	; 0x02
    14ec:	89 83       	std	Y+1, r24	; 0x01
    14ee:	89 81       	ldd	r24, Y+1	; 0x01
    14f0:	9a 81       	ldd	r25, Y+2	; 0x02
    14f2:	01 97       	sbiw	r24, 0x01	; 1
    14f4:	f1 f7       	brne	.-4      	; 0x14f2 <KPD_GetPressedKey+0x15e>
    14f6:	9a 83       	std	Y+2, r25	; 0x02
    14f8:	89 83       	std	Y+1, r24	; 0x01
	//Last PressedKey Value remains saved until a new press occurs
	u8 u8_PressedKeyValue = '@';
	for(u8_ColIndex =0;u8_ColIndex < ColsNum;u8_ColIndex++)
			{
				DIO_SetPinValue(ColPort, u8_ColIndex,LOW);
				for (u8_RowIndex = 0;u8_RowIndex < RowNum; u8_RowIndex ++)
    14fa:	88 89       	ldd	r24, Y+16	; 0x10
    14fc:	8f 5f       	subi	r24, 0xFF	; 255
    14fe:	88 8b       	std	Y+16, r24	; 0x10
    1500:	88 89       	ldd	r24, Y+16	; 0x10
    1502:	84 30       	cpi	r24, 0x04	; 4
    1504:	08 f4       	brcc	.+2      	; 0x1508 <KPD_GetPressedKey+0x174>
    1506:	5d cf       	rjmp	.-326    	; 0x13c2 <KPD_GetPressedKey+0x2e>
					else{
						//u8_PressedKeyValue = '@';
					}
				}
				//DIO_SetPortValue(ColPort, PORT_HIGH);
				DIO_SetPinValue(ColPort, u8_ColIndex,HIGH);
    1508:	80 e0       	ldi	r24, 0x00	; 0
    150a:	69 89       	ldd	r22, Y+17	; 0x11
    150c:	41 e0       	ldi	r20, 0x01	; 1
    150e:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
{
	u8 u8_ColIndex,u8_RowIndex;
	u8 u8_PinValue = 1;
	//Last PressedKey Value remains saved until a new press occurs
	u8 u8_PressedKeyValue = '@';
	for(u8_ColIndex =0;u8_ColIndex < ColsNum;u8_ColIndex++)
    1512:	89 89       	ldd	r24, Y+17	; 0x11
    1514:	8f 5f       	subi	r24, 0xFF	; 255
    1516:	89 8b       	std	Y+17, r24	; 0x11
    1518:	89 89       	ldd	r24, Y+17	; 0x11
    151a:	84 30       	cpi	r24, 0x04	; 4
    151c:	08 f4       	brcc	.+2      	; 0x1520 <KPD_GetPressedKey+0x18c>
    151e:	4a cf       	rjmp	.-364    	; 0x13b4 <KPD_GetPressedKey+0x20>
				//DIO_SetPortValue(ColPort, PORT_HIGH);
				DIO_SetPinValue(ColPort, u8_ColIndex,HIGH);
			}


return u8_PressedKeyValue ;
    1520:	8f 85       	ldd	r24, Y+15	; 0x0f
}
    1522:	62 96       	adiw	r28, 0x12	; 18
    1524:	0f b6       	in	r0, 0x3f	; 63
    1526:	f8 94       	cli
    1528:	de bf       	out	0x3e, r29	; 62
    152a:	0f be       	out	0x3f, r0	; 63
    152c:	cd bf       	out	0x3d, r28	; 61
    152e:	cf 91       	pop	r28
    1530:	df 91       	pop	r29
    1532:	08 95       	ret

00001534 <LCD_PinsInitialize>:
 * 8.LCD_Sep_DisResult: to seperate -u16 Max- number , convert it to CHAR and display these characters
 * NOTE :when using LCD_Sep_DisResult numbers must not start with 0 Ex : 500 not 0500
 * 9.LCD_SepResult: Like Func 8 but without displaying on LCD 16X2 module*/

u8 LCD_PinsInitialize()
{
    1534:	df 93       	push	r29
    1536:	cf 93       	push	r28
    1538:	0f 92       	push	r0
    153a:	cd b7       	in	r28, 0x3d	; 61
    153c:	de b7       	in	r29, 0x3e	; 62
	u8 ErrorState;

	if ((ControlPort >= PORTA) && (ControlPort <= PORTD) && (DataPort >= PORTA) && (DataPort <= PORTD) && (EN >= PIN0) && (EN <= PIN7)&& (RS >= PIN0) && (RS <= PIN7)&& (RW >= PIN0) && (RW <= PIN7))
		{
			ErrorState = ErrorStateOK;
    153e:	81 e0       	ldi	r24, 0x01	; 1
    1540:	89 83       	std	Y+1, r24	; 0x01

			DIO_SetPinDirection(ControlPort,EN,OUTPUT);
    1542:	83 e0       	ldi	r24, 0x03	; 3
    1544:	67 e0       	ldi	r22, 0x07	; 7
    1546:	41 e0       	ldi	r20, 0x01	; 1
    1548:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
			DIO_SetPinDirection(ControlPort,RS,OUTPUT);
    154c:	83 e0       	ldi	r24, 0x03	; 3
    154e:	65 e0       	ldi	r22, 0x05	; 5
    1550:	41 e0       	ldi	r20, 0x01	; 1
    1552:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
			DIO_SetPinDirection(ControlPort,RW,OUTPUT);
    1556:	83 e0       	ldi	r24, 0x03	; 3
    1558:	66 e0       	ldi	r22, 0x06	; 6
    155a:	41 e0       	ldi	r20, 0x01	; 1
    155c:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>

			DIO_SetPortDirection(DataPort,PORT_OUTPUT);
    1560:	82 e0       	ldi	r24, 0x02	; 2
    1562:	6f ef       	ldi	r22, 0xFF	; 255
    1564:	0e 94 dd 08 	call	0x11ba	; 0x11ba <DIO_SetPortDirection>





	return ErrorState;
    1568:	89 81       	ldd	r24, Y+1	; 0x01

}
    156a:	0f 90       	pop	r0
    156c:	cf 91       	pop	r28
    156e:	df 91       	pop	r29
    1570:	08 95       	ret

00001572 <LCD_Initialize>:



void LCD_Initialize (void)
{
    1572:	0f 93       	push	r16
    1574:	1f 93       	push	r17
    1576:	df 93       	push	r29
    1578:	cf 93       	push	r28
    157a:	cd b7       	in	r28, 0x3d	; 61
    157c:	de b7       	in	r29, 0x3e	; 62
    157e:	c6 54       	subi	r28, 0x46	; 70
    1580:	d0 40       	sbci	r29, 0x00	; 0
    1582:	0f b6       	in	r0, 0x3f	; 63
    1584:	f8 94       	cli
    1586:	de bf       	out	0x3e, r29	; 62
    1588:	0f be       	out	0x3f, r0	; 63
    158a:	cd bf       	out	0x3d, r28	; 61
    158c:	fe 01       	movw	r30, r28
    158e:	ed 5b       	subi	r30, 0xBD	; 189
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	80 e0       	ldi	r24, 0x00	; 0
    1594:	90 e0       	ldi	r25, 0x00	; 0
    1596:	a0 e2       	ldi	r26, 0x20	; 32
    1598:	b2 e4       	ldi	r27, 0x42	; 66
    159a:	80 83       	st	Z, r24
    159c:	91 83       	std	Z+1, r25	; 0x01
    159e:	a2 83       	std	Z+2, r26	; 0x02
    15a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    15a2:	8e 01       	movw	r16, r28
    15a4:	01 5c       	subi	r16, 0xC1	; 193
    15a6:	1f 4f       	sbci	r17, 0xFF	; 255
    15a8:	fe 01       	movw	r30, r28
    15aa:	ed 5b       	subi	r30, 0xBD	; 189
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	60 81       	ld	r22, Z
    15b0:	71 81       	ldd	r23, Z+1	; 0x01
    15b2:	82 81       	ldd	r24, Z+2	; 0x02
    15b4:	93 81       	ldd	r25, Z+3	; 0x03
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	4a ef       	ldi	r20, 0xFA	; 250
    15bc:	54 e4       	ldi	r21, 0x44	; 68
    15be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15c2:	dc 01       	movw	r26, r24
    15c4:	cb 01       	movw	r24, r22
    15c6:	f8 01       	movw	r30, r16
    15c8:	80 83       	st	Z, r24
    15ca:	91 83       	std	Z+1, r25	; 0x01
    15cc:	a2 83       	std	Z+2, r26	; 0x02
    15ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    15d0:	fe 01       	movw	r30, r28
    15d2:	ff 96       	adiw	r30, 0x3f	; 63
    15d4:	60 81       	ld	r22, Z
    15d6:	71 81       	ldd	r23, Z+1	; 0x01
    15d8:	82 81       	ldd	r24, Z+2	; 0x02
    15da:	93 81       	ldd	r25, Z+3	; 0x03
    15dc:	20 e0       	ldi	r18, 0x00	; 0
    15de:	30 e0       	ldi	r19, 0x00	; 0
    15e0:	40 e8       	ldi	r20, 0x80	; 128
    15e2:	5f e3       	ldi	r21, 0x3F	; 63
    15e4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    15e8:	88 23       	and	r24, r24
    15ea:	2c f4       	brge	.+10     	; 0x15f6 <LCD_Initialize+0x84>
		__ticks = 1;
    15ec:	81 e0       	ldi	r24, 0x01	; 1
    15ee:	90 e0       	ldi	r25, 0x00	; 0
    15f0:	9e af       	std	Y+62, r25	; 0x3e
    15f2:	8d af       	std	Y+61, r24	; 0x3d
    15f4:	46 c0       	rjmp	.+140    	; 0x1682 <LCD_Initialize+0x110>
	else if (__tmp > 65535)
    15f6:	fe 01       	movw	r30, r28
    15f8:	ff 96       	adiw	r30, 0x3f	; 63
    15fa:	60 81       	ld	r22, Z
    15fc:	71 81       	ldd	r23, Z+1	; 0x01
    15fe:	82 81       	ldd	r24, Z+2	; 0x02
    1600:	93 81       	ldd	r25, Z+3	; 0x03
    1602:	20 e0       	ldi	r18, 0x00	; 0
    1604:	3f ef       	ldi	r19, 0xFF	; 255
    1606:	4f e7       	ldi	r20, 0x7F	; 127
    1608:	57 e4       	ldi	r21, 0x47	; 71
    160a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    160e:	18 16       	cp	r1, r24
    1610:	64 f5       	brge	.+88     	; 0x166a <LCD_Initialize+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1612:	fe 01       	movw	r30, r28
    1614:	ed 5b       	subi	r30, 0xBD	; 189
    1616:	ff 4f       	sbci	r31, 0xFF	; 255
    1618:	60 81       	ld	r22, Z
    161a:	71 81       	ldd	r23, Z+1	; 0x01
    161c:	82 81       	ldd	r24, Z+2	; 0x02
    161e:	93 81       	ldd	r25, Z+3	; 0x03
    1620:	20 e0       	ldi	r18, 0x00	; 0
    1622:	30 e0       	ldi	r19, 0x00	; 0
    1624:	40 e2       	ldi	r20, 0x20	; 32
    1626:	51 e4       	ldi	r21, 0x41	; 65
    1628:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    162c:	dc 01       	movw	r26, r24
    162e:	cb 01       	movw	r24, r22
    1630:	bc 01       	movw	r22, r24
    1632:	cd 01       	movw	r24, r26
    1634:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1638:	dc 01       	movw	r26, r24
    163a:	cb 01       	movw	r24, r22
    163c:	9e af       	std	Y+62, r25	; 0x3e
    163e:	8d af       	std	Y+61, r24	; 0x3d
    1640:	0f c0       	rjmp	.+30     	; 0x1660 <LCD_Initialize+0xee>
    1642:	88 ec       	ldi	r24, 0xC8	; 200
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	9c af       	std	Y+60, r25	; 0x3c
    1648:	8b af       	std	Y+59, r24	; 0x3b
    164a:	8b ad       	ldd	r24, Y+59	; 0x3b
    164c:	9c ad       	ldd	r25, Y+60	; 0x3c
    164e:	01 97       	sbiw	r24, 0x01	; 1
    1650:	f1 f7       	brne	.-4      	; 0x164e <LCD_Initialize+0xdc>
    1652:	9c af       	std	Y+60, r25	; 0x3c
    1654:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1656:	8d ad       	ldd	r24, Y+61	; 0x3d
    1658:	9e ad       	ldd	r25, Y+62	; 0x3e
    165a:	01 97       	sbiw	r24, 0x01	; 1
    165c:	9e af       	std	Y+62, r25	; 0x3e
    165e:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1660:	8d ad       	ldd	r24, Y+61	; 0x3d
    1662:	9e ad       	ldd	r25, Y+62	; 0x3e
    1664:	00 97       	sbiw	r24, 0x00	; 0
    1666:	69 f7       	brne	.-38     	; 0x1642 <LCD_Initialize+0xd0>
    1668:	16 c0       	rjmp	.+44     	; 0x1696 <LCD_Initialize+0x124>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    166a:	fe 01       	movw	r30, r28
    166c:	ff 96       	adiw	r30, 0x3f	; 63
    166e:	60 81       	ld	r22, Z
    1670:	71 81       	ldd	r23, Z+1	; 0x01
    1672:	82 81       	ldd	r24, Z+2	; 0x02
    1674:	93 81       	ldd	r25, Z+3	; 0x03
    1676:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    167a:	dc 01       	movw	r26, r24
    167c:	cb 01       	movw	r24, r22
    167e:	9e af       	std	Y+62, r25	; 0x3e
    1680:	8d af       	std	Y+61, r24	; 0x3d
    1682:	8d ad       	ldd	r24, Y+61	; 0x3d
    1684:	9e ad       	ldd	r25, Y+62	; 0x3e
    1686:	9a af       	std	Y+58, r25	; 0x3a
    1688:	89 af       	std	Y+57, r24	; 0x39
    168a:	89 ad       	ldd	r24, Y+57	; 0x39
    168c:	9a ad       	ldd	r25, Y+58	; 0x3a
    168e:	01 97       	sbiw	r24, 0x01	; 1
    1690:	f1 f7       	brne	.-4      	; 0x168e <LCD_Initialize+0x11c>
    1692:	9a af       	std	Y+58, r25	; 0x3a
    1694:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(40);
	LCD_WriteCmd(FUNCTION_SET);
    1696:	88 e3       	ldi	r24, 0x38	; 56
    1698:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
    169c:	80 e0       	ldi	r24, 0x00	; 0
    169e:	90 e0       	ldi	r25, 0x00	; 0
    16a0:	a0 e8       	ldi	r26, 0x80	; 128
    16a2:	bf e3       	ldi	r27, 0x3F	; 63
    16a4:	8d ab       	std	Y+53, r24	; 0x35
    16a6:	9e ab       	std	Y+54, r25	; 0x36
    16a8:	af ab       	std	Y+55, r26	; 0x37
    16aa:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    16ac:	6d a9       	ldd	r22, Y+53	; 0x35
    16ae:	7e a9       	ldd	r23, Y+54	; 0x36
    16b0:	8f a9       	ldd	r24, Y+55	; 0x37
    16b2:	98 ad       	ldd	r25, Y+56	; 0x38
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	4a ef       	ldi	r20, 0xFA	; 250
    16ba:	54 e4       	ldi	r21, 0x44	; 68
    16bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	89 ab       	std	Y+49, r24	; 0x31
    16c6:	9a ab       	std	Y+50, r25	; 0x32
    16c8:	ab ab       	std	Y+51, r26	; 0x33
    16ca:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    16cc:	69 a9       	ldd	r22, Y+49	; 0x31
    16ce:	7a a9       	ldd	r23, Y+50	; 0x32
    16d0:	8b a9       	ldd	r24, Y+51	; 0x33
    16d2:	9c a9       	ldd	r25, Y+52	; 0x34
    16d4:	20 e0       	ldi	r18, 0x00	; 0
    16d6:	30 e0       	ldi	r19, 0x00	; 0
    16d8:	40 e8       	ldi	r20, 0x80	; 128
    16da:	5f e3       	ldi	r21, 0x3F	; 63
    16dc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16e0:	88 23       	and	r24, r24
    16e2:	2c f4       	brge	.+10     	; 0x16ee <LCD_Initialize+0x17c>
		__ticks = 1;
    16e4:	81 e0       	ldi	r24, 0x01	; 1
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	98 ab       	std	Y+48, r25	; 0x30
    16ea:	8f a7       	std	Y+47, r24	; 0x2f
    16ec:	3f c0       	rjmp	.+126    	; 0x176c <LCD_Initialize+0x1fa>
	else if (__tmp > 65535)
    16ee:	69 a9       	ldd	r22, Y+49	; 0x31
    16f0:	7a a9       	ldd	r23, Y+50	; 0x32
    16f2:	8b a9       	ldd	r24, Y+51	; 0x33
    16f4:	9c a9       	ldd	r25, Y+52	; 0x34
    16f6:	20 e0       	ldi	r18, 0x00	; 0
    16f8:	3f ef       	ldi	r19, 0xFF	; 255
    16fa:	4f e7       	ldi	r20, 0x7F	; 127
    16fc:	57 e4       	ldi	r21, 0x47	; 71
    16fe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1702:	18 16       	cp	r1, r24
    1704:	4c f5       	brge	.+82     	; 0x1758 <LCD_Initialize+0x1e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1706:	6d a9       	ldd	r22, Y+53	; 0x35
    1708:	7e a9       	ldd	r23, Y+54	; 0x36
    170a:	8f a9       	ldd	r24, Y+55	; 0x37
    170c:	98 ad       	ldd	r25, Y+56	; 0x38
    170e:	20 e0       	ldi	r18, 0x00	; 0
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	40 e2       	ldi	r20, 0x20	; 32
    1714:	51 e4       	ldi	r21, 0x41	; 65
    1716:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    171a:	dc 01       	movw	r26, r24
    171c:	cb 01       	movw	r24, r22
    171e:	bc 01       	movw	r22, r24
    1720:	cd 01       	movw	r24, r26
    1722:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1726:	dc 01       	movw	r26, r24
    1728:	cb 01       	movw	r24, r22
    172a:	98 ab       	std	Y+48, r25	; 0x30
    172c:	8f a7       	std	Y+47, r24	; 0x2f
    172e:	0f c0       	rjmp	.+30     	; 0x174e <LCD_Initialize+0x1dc>
    1730:	88 ec       	ldi	r24, 0xC8	; 200
    1732:	90 e0       	ldi	r25, 0x00	; 0
    1734:	9e a7       	std	Y+46, r25	; 0x2e
    1736:	8d a7       	std	Y+45, r24	; 0x2d
    1738:	8d a5       	ldd	r24, Y+45	; 0x2d
    173a:	9e a5       	ldd	r25, Y+46	; 0x2e
    173c:	01 97       	sbiw	r24, 0x01	; 1
    173e:	f1 f7       	brne	.-4      	; 0x173c <LCD_Initialize+0x1ca>
    1740:	9e a7       	std	Y+46, r25	; 0x2e
    1742:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1744:	8f a5       	ldd	r24, Y+47	; 0x2f
    1746:	98 a9       	ldd	r25, Y+48	; 0x30
    1748:	01 97       	sbiw	r24, 0x01	; 1
    174a:	98 ab       	std	Y+48, r25	; 0x30
    174c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    174e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1750:	98 a9       	ldd	r25, Y+48	; 0x30
    1752:	00 97       	sbiw	r24, 0x00	; 0
    1754:	69 f7       	brne	.-38     	; 0x1730 <LCD_Initialize+0x1be>
    1756:	14 c0       	rjmp	.+40     	; 0x1780 <LCD_Initialize+0x20e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1758:	69 a9       	ldd	r22, Y+49	; 0x31
    175a:	7a a9       	ldd	r23, Y+50	; 0x32
    175c:	8b a9       	ldd	r24, Y+51	; 0x33
    175e:	9c a9       	ldd	r25, Y+52	; 0x34
    1760:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1764:	dc 01       	movw	r26, r24
    1766:	cb 01       	movw	r24, r22
    1768:	98 ab       	std	Y+48, r25	; 0x30
    176a:	8f a7       	std	Y+47, r24	; 0x2f
    176c:	8f a5       	ldd	r24, Y+47	; 0x2f
    176e:	98 a9       	ldd	r25, Y+48	; 0x30
    1770:	9c a7       	std	Y+44, r25	; 0x2c
    1772:	8b a7       	std	Y+43, r24	; 0x2b
    1774:	8b a5       	ldd	r24, Y+43	; 0x2b
    1776:	9c a5       	ldd	r25, Y+44	; 0x2c
    1778:	01 97       	sbiw	r24, 0x01	; 1
    177a:	f1 f7       	brne	.-4      	; 0x1778 <LCD_Initialize+0x206>
    177c:	9c a7       	std	Y+44, r25	; 0x2c
    177e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1);
	LCD_WriteCmd(DISPLAY_CONTROL_ON);
    1780:	8c e0       	ldi	r24, 0x0C	; 12
    1782:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
    1786:	80 e0       	ldi	r24, 0x00	; 0
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	a0 e8       	ldi	r26, 0x80	; 128
    178c:	bf e3       	ldi	r27, 0x3F	; 63
    178e:	8f a3       	std	Y+39, r24	; 0x27
    1790:	98 a7       	std	Y+40, r25	; 0x28
    1792:	a9 a7       	std	Y+41, r26	; 0x29
    1794:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1796:	6f a1       	ldd	r22, Y+39	; 0x27
    1798:	78 a5       	ldd	r23, Y+40	; 0x28
    179a:	89 a5       	ldd	r24, Y+41	; 0x29
    179c:	9a a5       	ldd	r25, Y+42	; 0x2a
    179e:	20 e0       	ldi	r18, 0x00	; 0
    17a0:	30 e0       	ldi	r19, 0x00	; 0
    17a2:	4a ef       	ldi	r20, 0xFA	; 250
    17a4:	54 e4       	ldi	r21, 0x44	; 68
    17a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17aa:	dc 01       	movw	r26, r24
    17ac:	cb 01       	movw	r24, r22
    17ae:	8b a3       	std	Y+35, r24	; 0x23
    17b0:	9c a3       	std	Y+36, r25	; 0x24
    17b2:	ad a3       	std	Y+37, r26	; 0x25
    17b4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    17b6:	6b a1       	ldd	r22, Y+35	; 0x23
    17b8:	7c a1       	ldd	r23, Y+36	; 0x24
    17ba:	8d a1       	ldd	r24, Y+37	; 0x25
    17bc:	9e a1       	ldd	r25, Y+38	; 0x26
    17be:	20 e0       	ldi	r18, 0x00	; 0
    17c0:	30 e0       	ldi	r19, 0x00	; 0
    17c2:	40 e8       	ldi	r20, 0x80	; 128
    17c4:	5f e3       	ldi	r21, 0x3F	; 63
    17c6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17ca:	88 23       	and	r24, r24
    17cc:	2c f4       	brge	.+10     	; 0x17d8 <LCD_Initialize+0x266>
		__ticks = 1;
    17ce:	81 e0       	ldi	r24, 0x01	; 1
    17d0:	90 e0       	ldi	r25, 0x00	; 0
    17d2:	9a a3       	std	Y+34, r25	; 0x22
    17d4:	89 a3       	std	Y+33, r24	; 0x21
    17d6:	3f c0       	rjmp	.+126    	; 0x1856 <LCD_Initialize+0x2e4>
	else if (__tmp > 65535)
    17d8:	6b a1       	ldd	r22, Y+35	; 0x23
    17da:	7c a1       	ldd	r23, Y+36	; 0x24
    17dc:	8d a1       	ldd	r24, Y+37	; 0x25
    17de:	9e a1       	ldd	r25, Y+38	; 0x26
    17e0:	20 e0       	ldi	r18, 0x00	; 0
    17e2:	3f ef       	ldi	r19, 0xFF	; 255
    17e4:	4f e7       	ldi	r20, 0x7F	; 127
    17e6:	57 e4       	ldi	r21, 0x47	; 71
    17e8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    17ec:	18 16       	cp	r1, r24
    17ee:	4c f5       	brge	.+82     	; 0x1842 <LCD_Initialize+0x2d0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    17f0:	6f a1       	ldd	r22, Y+39	; 0x27
    17f2:	78 a5       	ldd	r23, Y+40	; 0x28
    17f4:	89 a5       	ldd	r24, Y+41	; 0x29
    17f6:	9a a5       	ldd	r25, Y+42	; 0x2a
    17f8:	20 e0       	ldi	r18, 0x00	; 0
    17fa:	30 e0       	ldi	r19, 0x00	; 0
    17fc:	40 e2       	ldi	r20, 0x20	; 32
    17fe:	51 e4       	ldi	r21, 0x41	; 65
    1800:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1804:	dc 01       	movw	r26, r24
    1806:	cb 01       	movw	r24, r22
    1808:	bc 01       	movw	r22, r24
    180a:	cd 01       	movw	r24, r26
    180c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1810:	dc 01       	movw	r26, r24
    1812:	cb 01       	movw	r24, r22
    1814:	9a a3       	std	Y+34, r25	; 0x22
    1816:	89 a3       	std	Y+33, r24	; 0x21
    1818:	0f c0       	rjmp	.+30     	; 0x1838 <LCD_Initialize+0x2c6>
    181a:	88 ec       	ldi	r24, 0xC8	; 200
    181c:	90 e0       	ldi	r25, 0x00	; 0
    181e:	98 a3       	std	Y+32, r25	; 0x20
    1820:	8f 8f       	std	Y+31, r24	; 0x1f
    1822:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1824:	98 a1       	ldd	r25, Y+32	; 0x20
    1826:	01 97       	sbiw	r24, 0x01	; 1
    1828:	f1 f7       	brne	.-4      	; 0x1826 <LCD_Initialize+0x2b4>
    182a:	98 a3       	std	Y+32, r25	; 0x20
    182c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    182e:	89 a1       	ldd	r24, Y+33	; 0x21
    1830:	9a a1       	ldd	r25, Y+34	; 0x22
    1832:	01 97       	sbiw	r24, 0x01	; 1
    1834:	9a a3       	std	Y+34, r25	; 0x22
    1836:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1838:	89 a1       	ldd	r24, Y+33	; 0x21
    183a:	9a a1       	ldd	r25, Y+34	; 0x22
    183c:	00 97       	sbiw	r24, 0x00	; 0
    183e:	69 f7       	brne	.-38     	; 0x181a <LCD_Initialize+0x2a8>
    1840:	14 c0       	rjmp	.+40     	; 0x186a <LCD_Initialize+0x2f8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1842:	6b a1       	ldd	r22, Y+35	; 0x23
    1844:	7c a1       	ldd	r23, Y+36	; 0x24
    1846:	8d a1       	ldd	r24, Y+37	; 0x25
    1848:	9e a1       	ldd	r25, Y+38	; 0x26
    184a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    184e:	dc 01       	movw	r26, r24
    1850:	cb 01       	movw	r24, r22
    1852:	9a a3       	std	Y+34, r25	; 0x22
    1854:	89 a3       	std	Y+33, r24	; 0x21
    1856:	89 a1       	ldd	r24, Y+33	; 0x21
    1858:	9a a1       	ldd	r25, Y+34	; 0x22
    185a:	9e 8f       	std	Y+30, r25	; 0x1e
    185c:	8d 8f       	std	Y+29, r24	; 0x1d
    185e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1860:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1862:	01 97       	sbiw	r24, 0x01	; 1
    1864:	f1 f7       	brne	.-4      	; 0x1862 <LCD_Initialize+0x2f0>
    1866:	9e 8f       	std	Y+30, r25	; 0x1e
    1868:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1);
	LCD_WriteCmd(DISPLAY_CLEAR);
    186a:	81 e0       	ldi	r24, 0x01	; 1
    186c:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
    1870:	80 e0       	ldi	r24, 0x00	; 0
    1872:	90 e0       	ldi	r25, 0x00	; 0
    1874:	a0 e4       	ldi	r26, 0x40	; 64
    1876:	b0 e4       	ldi	r27, 0x40	; 64
    1878:	89 8f       	std	Y+25, r24	; 0x19
    187a:	9a 8f       	std	Y+26, r25	; 0x1a
    187c:	ab 8f       	std	Y+27, r26	; 0x1b
    187e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1880:	69 8d       	ldd	r22, Y+25	; 0x19
    1882:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1884:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1886:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1888:	20 e0       	ldi	r18, 0x00	; 0
    188a:	30 e0       	ldi	r19, 0x00	; 0
    188c:	4a ef       	ldi	r20, 0xFA	; 250
    188e:	54 e4       	ldi	r21, 0x44	; 68
    1890:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1894:	dc 01       	movw	r26, r24
    1896:	cb 01       	movw	r24, r22
    1898:	8d 8b       	std	Y+21, r24	; 0x15
    189a:	9e 8b       	std	Y+22, r25	; 0x16
    189c:	af 8b       	std	Y+23, r26	; 0x17
    189e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    18a0:	6d 89       	ldd	r22, Y+21	; 0x15
    18a2:	7e 89       	ldd	r23, Y+22	; 0x16
    18a4:	8f 89       	ldd	r24, Y+23	; 0x17
    18a6:	98 8d       	ldd	r25, Y+24	; 0x18
    18a8:	20 e0       	ldi	r18, 0x00	; 0
    18aa:	30 e0       	ldi	r19, 0x00	; 0
    18ac:	40 e8       	ldi	r20, 0x80	; 128
    18ae:	5f e3       	ldi	r21, 0x3F	; 63
    18b0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    18b4:	88 23       	and	r24, r24
    18b6:	2c f4       	brge	.+10     	; 0x18c2 <LCD_Initialize+0x350>
		__ticks = 1;
    18b8:	81 e0       	ldi	r24, 0x01	; 1
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	9c 8b       	std	Y+20, r25	; 0x14
    18be:	8b 8b       	std	Y+19, r24	; 0x13
    18c0:	3f c0       	rjmp	.+126    	; 0x1940 <LCD_Initialize+0x3ce>
	else if (__tmp > 65535)
    18c2:	6d 89       	ldd	r22, Y+21	; 0x15
    18c4:	7e 89       	ldd	r23, Y+22	; 0x16
    18c6:	8f 89       	ldd	r24, Y+23	; 0x17
    18c8:	98 8d       	ldd	r25, Y+24	; 0x18
    18ca:	20 e0       	ldi	r18, 0x00	; 0
    18cc:	3f ef       	ldi	r19, 0xFF	; 255
    18ce:	4f e7       	ldi	r20, 0x7F	; 127
    18d0:	57 e4       	ldi	r21, 0x47	; 71
    18d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18d6:	18 16       	cp	r1, r24
    18d8:	4c f5       	brge	.+82     	; 0x192c <LCD_Initialize+0x3ba>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18da:	69 8d       	ldd	r22, Y+25	; 0x19
    18dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    18de:	8b 8d       	ldd	r24, Y+27	; 0x1b
    18e0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    18e2:	20 e0       	ldi	r18, 0x00	; 0
    18e4:	30 e0       	ldi	r19, 0x00	; 0
    18e6:	40 e2       	ldi	r20, 0x20	; 32
    18e8:	51 e4       	ldi	r21, 0x41	; 65
    18ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18ee:	dc 01       	movw	r26, r24
    18f0:	cb 01       	movw	r24, r22
    18f2:	bc 01       	movw	r22, r24
    18f4:	cd 01       	movw	r24, r26
    18f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18fa:	dc 01       	movw	r26, r24
    18fc:	cb 01       	movw	r24, r22
    18fe:	9c 8b       	std	Y+20, r25	; 0x14
    1900:	8b 8b       	std	Y+19, r24	; 0x13
    1902:	0f c0       	rjmp	.+30     	; 0x1922 <LCD_Initialize+0x3b0>
    1904:	88 ec       	ldi	r24, 0xC8	; 200
    1906:	90 e0       	ldi	r25, 0x00	; 0
    1908:	9a 8b       	std	Y+18, r25	; 0x12
    190a:	89 8b       	std	Y+17, r24	; 0x11
    190c:	89 89       	ldd	r24, Y+17	; 0x11
    190e:	9a 89       	ldd	r25, Y+18	; 0x12
    1910:	01 97       	sbiw	r24, 0x01	; 1
    1912:	f1 f7       	brne	.-4      	; 0x1910 <LCD_Initialize+0x39e>
    1914:	9a 8b       	std	Y+18, r25	; 0x12
    1916:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1918:	8b 89       	ldd	r24, Y+19	; 0x13
    191a:	9c 89       	ldd	r25, Y+20	; 0x14
    191c:	01 97       	sbiw	r24, 0x01	; 1
    191e:	9c 8b       	std	Y+20, r25	; 0x14
    1920:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1922:	8b 89       	ldd	r24, Y+19	; 0x13
    1924:	9c 89       	ldd	r25, Y+20	; 0x14
    1926:	00 97       	sbiw	r24, 0x00	; 0
    1928:	69 f7       	brne	.-38     	; 0x1904 <LCD_Initialize+0x392>
    192a:	14 c0       	rjmp	.+40     	; 0x1954 <LCD_Initialize+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    192c:	6d 89       	ldd	r22, Y+21	; 0x15
    192e:	7e 89       	ldd	r23, Y+22	; 0x16
    1930:	8f 89       	ldd	r24, Y+23	; 0x17
    1932:	98 8d       	ldd	r25, Y+24	; 0x18
    1934:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1938:	dc 01       	movw	r26, r24
    193a:	cb 01       	movw	r24, r22
    193c:	9c 8b       	std	Y+20, r25	; 0x14
    193e:	8b 8b       	std	Y+19, r24	; 0x13
    1940:	8b 89       	ldd	r24, Y+19	; 0x13
    1942:	9c 89       	ldd	r25, Y+20	; 0x14
    1944:	98 8b       	std	Y+16, r25	; 0x10
    1946:	8f 87       	std	Y+15, r24	; 0x0f
    1948:	8f 85       	ldd	r24, Y+15	; 0x0f
    194a:	98 89       	ldd	r25, Y+16	; 0x10
    194c:	01 97       	sbiw	r24, 0x01	; 1
    194e:	f1 f7       	brne	.-4      	; 0x194c <LCD_Initialize+0x3da>
    1950:	98 8b       	std	Y+16, r25	; 0x10
    1952:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(3);
	LCD_WriteCmd(ENTRY_MODE);
    1954:	86 e0       	ldi	r24, 0x06	; 6
    1956:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
    195a:	80 e0       	ldi	r24, 0x00	; 0
    195c:	90 e0       	ldi	r25, 0x00	; 0
    195e:	a0 e8       	ldi	r26, 0x80	; 128
    1960:	bf e3       	ldi	r27, 0x3F	; 63
    1962:	8b 87       	std	Y+11, r24	; 0x0b
    1964:	9c 87       	std	Y+12, r25	; 0x0c
    1966:	ad 87       	std	Y+13, r26	; 0x0d
    1968:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    196a:	6b 85       	ldd	r22, Y+11	; 0x0b
    196c:	7c 85       	ldd	r23, Y+12	; 0x0c
    196e:	8d 85       	ldd	r24, Y+13	; 0x0d
    1970:	9e 85       	ldd	r25, Y+14	; 0x0e
    1972:	20 e0       	ldi	r18, 0x00	; 0
    1974:	30 e0       	ldi	r19, 0x00	; 0
    1976:	4a ef       	ldi	r20, 0xFA	; 250
    1978:	54 e4       	ldi	r21, 0x44	; 68
    197a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    197e:	dc 01       	movw	r26, r24
    1980:	cb 01       	movw	r24, r22
    1982:	8f 83       	std	Y+7, r24	; 0x07
    1984:	98 87       	std	Y+8, r25	; 0x08
    1986:	a9 87       	std	Y+9, r26	; 0x09
    1988:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    198a:	6f 81       	ldd	r22, Y+7	; 0x07
    198c:	78 85       	ldd	r23, Y+8	; 0x08
    198e:	89 85       	ldd	r24, Y+9	; 0x09
    1990:	9a 85       	ldd	r25, Y+10	; 0x0a
    1992:	20 e0       	ldi	r18, 0x00	; 0
    1994:	30 e0       	ldi	r19, 0x00	; 0
    1996:	40 e8       	ldi	r20, 0x80	; 128
    1998:	5f e3       	ldi	r21, 0x3F	; 63
    199a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    199e:	88 23       	and	r24, r24
    19a0:	2c f4       	brge	.+10     	; 0x19ac <LCD_Initialize+0x43a>
		__ticks = 1;
    19a2:	81 e0       	ldi	r24, 0x01	; 1
    19a4:	90 e0       	ldi	r25, 0x00	; 0
    19a6:	9e 83       	std	Y+6, r25	; 0x06
    19a8:	8d 83       	std	Y+5, r24	; 0x05
    19aa:	3f c0       	rjmp	.+126    	; 0x1a2a <LCD_Initialize+0x4b8>
	else if (__tmp > 65535)
    19ac:	6f 81       	ldd	r22, Y+7	; 0x07
    19ae:	78 85       	ldd	r23, Y+8	; 0x08
    19b0:	89 85       	ldd	r24, Y+9	; 0x09
    19b2:	9a 85       	ldd	r25, Y+10	; 0x0a
    19b4:	20 e0       	ldi	r18, 0x00	; 0
    19b6:	3f ef       	ldi	r19, 0xFF	; 255
    19b8:	4f e7       	ldi	r20, 0x7F	; 127
    19ba:	57 e4       	ldi	r21, 0x47	; 71
    19bc:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19c0:	18 16       	cp	r1, r24
    19c2:	4c f5       	brge	.+82     	; 0x1a16 <LCD_Initialize+0x4a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19c4:	6b 85       	ldd	r22, Y+11	; 0x0b
    19c6:	7c 85       	ldd	r23, Y+12	; 0x0c
    19c8:	8d 85       	ldd	r24, Y+13	; 0x0d
    19ca:	9e 85       	ldd	r25, Y+14	; 0x0e
    19cc:	20 e0       	ldi	r18, 0x00	; 0
    19ce:	30 e0       	ldi	r19, 0x00	; 0
    19d0:	40 e2       	ldi	r20, 0x20	; 32
    19d2:	51 e4       	ldi	r21, 0x41	; 65
    19d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19d8:	dc 01       	movw	r26, r24
    19da:	cb 01       	movw	r24, r22
    19dc:	bc 01       	movw	r22, r24
    19de:	cd 01       	movw	r24, r26
    19e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19e4:	dc 01       	movw	r26, r24
    19e6:	cb 01       	movw	r24, r22
    19e8:	9e 83       	std	Y+6, r25	; 0x06
    19ea:	8d 83       	std	Y+5, r24	; 0x05
    19ec:	0f c0       	rjmp	.+30     	; 0x1a0c <LCD_Initialize+0x49a>
    19ee:	88 ec       	ldi	r24, 0xC8	; 200
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	9c 83       	std	Y+4, r25	; 0x04
    19f4:	8b 83       	std	Y+3, r24	; 0x03
    19f6:	8b 81       	ldd	r24, Y+3	; 0x03
    19f8:	9c 81       	ldd	r25, Y+4	; 0x04
    19fa:	01 97       	sbiw	r24, 0x01	; 1
    19fc:	f1 f7       	brne	.-4      	; 0x19fa <LCD_Initialize+0x488>
    19fe:	9c 83       	std	Y+4, r25	; 0x04
    1a00:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a02:	8d 81       	ldd	r24, Y+5	; 0x05
    1a04:	9e 81       	ldd	r25, Y+6	; 0x06
    1a06:	01 97       	sbiw	r24, 0x01	; 1
    1a08:	9e 83       	std	Y+6, r25	; 0x06
    1a0a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a0c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a0e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a10:	00 97       	sbiw	r24, 0x00	; 0
    1a12:	69 f7       	brne	.-38     	; 0x19ee <LCD_Initialize+0x47c>
    1a14:	14 c0       	rjmp	.+40     	; 0x1a3e <LCD_Initialize+0x4cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a16:	6f 81       	ldd	r22, Y+7	; 0x07
    1a18:	78 85       	ldd	r23, Y+8	; 0x08
    1a1a:	89 85       	ldd	r24, Y+9	; 0x09
    1a1c:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a22:	dc 01       	movw	r26, r24
    1a24:	cb 01       	movw	r24, r22
    1a26:	9e 83       	std	Y+6, r25	; 0x06
    1a28:	8d 83       	std	Y+5, r24	; 0x05
    1a2a:	8d 81       	ldd	r24, Y+5	; 0x05
    1a2c:	9e 81       	ldd	r25, Y+6	; 0x06
    1a2e:	9a 83       	std	Y+2, r25	; 0x02
    1a30:	89 83       	std	Y+1, r24	; 0x01
    1a32:	89 81       	ldd	r24, Y+1	; 0x01
    1a34:	9a 81       	ldd	r25, Y+2	; 0x02
    1a36:	01 97       	sbiw	r24, 0x01	; 1
    1a38:	f1 f7       	brne	.-4      	; 0x1a36 <LCD_Initialize+0x4c4>
    1a3a:	9a 83       	std	Y+2, r25	; 0x02
    1a3c:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(1);



}
    1a3e:	ca 5b       	subi	r28, 0xBA	; 186
    1a40:	df 4f       	sbci	r29, 0xFF	; 255
    1a42:	0f b6       	in	r0, 0x3f	; 63
    1a44:	f8 94       	cli
    1a46:	de bf       	out	0x3e, r29	; 62
    1a48:	0f be       	out	0x3f, r0	; 63
    1a4a:	cd bf       	out	0x3d, r28	; 61
    1a4c:	cf 91       	pop	r28
    1a4e:	df 91       	pop	r29
    1a50:	1f 91       	pop	r17
    1a52:	0f 91       	pop	r16
    1a54:	08 95       	ret

00001a56 <LCD_WriteCmd>:


void LCD_WriteCmd(u8 u8_CmdCopy)
{
    1a56:	df 93       	push	r29
    1a58:	cf 93       	push	r28
    1a5a:	cd b7       	in	r28, 0x3d	; 61
    1a5c:	de b7       	in	r29, 0x3e	; 62
    1a5e:	2f 97       	sbiw	r28, 0x0f	; 15
    1a60:	0f b6       	in	r0, 0x3f	; 63
    1a62:	f8 94       	cli
    1a64:	de bf       	out	0x3e, r29	; 62
    1a66:	0f be       	out	0x3f, r0	; 63
    1a68:	cd bf       	out	0x3d, r28	; 61
    1a6a:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_SetPinValue(ControlPort,EN,LOW);
    1a6c:	83 e0       	ldi	r24, 0x03	; 3
    1a6e:	67 e0       	ldi	r22, 0x07	; 7
    1a70:	40 e0       	ldi	r20, 0x00	; 0
    1a72:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
	DIO_SetPinValue(ControlPort,RS,LOW);
    1a76:	83 e0       	ldi	r24, 0x03	; 3
    1a78:	65 e0       	ldi	r22, 0x05	; 5
    1a7a:	40 e0       	ldi	r20, 0x00	; 0
    1a7c:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
	DIO_SetPinValue(ControlPort,RW,LOW);
    1a80:	83 e0       	ldi	r24, 0x03	; 3
    1a82:	66 e0       	ldi	r22, 0x06	; 6
    1a84:	40 e0       	ldi	r20, 0x00	; 0
    1a86:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>

	DIO_SetPortValue(DataPort,u8_CmdCopy);
    1a8a:	82 e0       	ldi	r24, 0x02	; 2
    1a8c:	6f 85       	ldd	r22, Y+15	; 0x0f
    1a8e:	0e 94 28 09 	call	0x1250	; 0x1250 <DIO_SetPortValue>

	DIO_SetPinValue(ControlPort,EN,HIGH);
    1a92:	83 e0       	ldi	r24, 0x03	; 3
    1a94:	67 e0       	ldi	r22, 0x07	; 7
    1a96:	41 e0       	ldi	r20, 0x01	; 1
    1a98:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
    1a9c:	80 e0       	ldi	r24, 0x00	; 0
    1a9e:	90 e0       	ldi	r25, 0x00	; 0
    1aa0:	a0 e8       	ldi	r26, 0x80	; 128
    1aa2:	bf e3       	ldi	r27, 0x3F	; 63
    1aa4:	8b 87       	std	Y+11, r24	; 0x0b
    1aa6:	9c 87       	std	Y+12, r25	; 0x0c
    1aa8:	ad 87       	std	Y+13, r26	; 0x0d
    1aaa:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1aac:	6b 85       	ldd	r22, Y+11	; 0x0b
    1aae:	7c 85       	ldd	r23, Y+12	; 0x0c
    1ab0:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ab2:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ab4:	20 e0       	ldi	r18, 0x00	; 0
    1ab6:	30 e0       	ldi	r19, 0x00	; 0
    1ab8:	4a ef       	ldi	r20, 0xFA	; 250
    1aba:	54 e4       	ldi	r21, 0x44	; 68
    1abc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ac0:	dc 01       	movw	r26, r24
    1ac2:	cb 01       	movw	r24, r22
    1ac4:	8f 83       	std	Y+7, r24	; 0x07
    1ac6:	98 87       	std	Y+8, r25	; 0x08
    1ac8:	a9 87       	std	Y+9, r26	; 0x09
    1aca:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1acc:	6f 81       	ldd	r22, Y+7	; 0x07
    1ace:	78 85       	ldd	r23, Y+8	; 0x08
    1ad0:	89 85       	ldd	r24, Y+9	; 0x09
    1ad2:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ad4:	20 e0       	ldi	r18, 0x00	; 0
    1ad6:	30 e0       	ldi	r19, 0x00	; 0
    1ad8:	40 e8       	ldi	r20, 0x80	; 128
    1ada:	5f e3       	ldi	r21, 0x3F	; 63
    1adc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ae0:	88 23       	and	r24, r24
    1ae2:	2c f4       	brge	.+10     	; 0x1aee <LCD_WriteCmd+0x98>
		__ticks = 1;
    1ae4:	81 e0       	ldi	r24, 0x01	; 1
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	9e 83       	std	Y+6, r25	; 0x06
    1aea:	8d 83       	std	Y+5, r24	; 0x05
    1aec:	3f c0       	rjmp	.+126    	; 0x1b6c <LCD_WriteCmd+0x116>
	else if (__tmp > 65535)
    1aee:	6f 81       	ldd	r22, Y+7	; 0x07
    1af0:	78 85       	ldd	r23, Y+8	; 0x08
    1af2:	89 85       	ldd	r24, Y+9	; 0x09
    1af4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1af6:	20 e0       	ldi	r18, 0x00	; 0
    1af8:	3f ef       	ldi	r19, 0xFF	; 255
    1afa:	4f e7       	ldi	r20, 0x7F	; 127
    1afc:	57 e4       	ldi	r21, 0x47	; 71
    1afe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b02:	18 16       	cp	r1, r24
    1b04:	4c f5       	brge	.+82     	; 0x1b58 <LCD_WriteCmd+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b06:	6b 85       	ldd	r22, Y+11	; 0x0b
    1b08:	7c 85       	ldd	r23, Y+12	; 0x0c
    1b0a:	8d 85       	ldd	r24, Y+13	; 0x0d
    1b0c:	9e 85       	ldd	r25, Y+14	; 0x0e
    1b0e:	20 e0       	ldi	r18, 0x00	; 0
    1b10:	30 e0       	ldi	r19, 0x00	; 0
    1b12:	40 e2       	ldi	r20, 0x20	; 32
    1b14:	51 e4       	ldi	r21, 0x41	; 65
    1b16:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b1a:	dc 01       	movw	r26, r24
    1b1c:	cb 01       	movw	r24, r22
    1b1e:	bc 01       	movw	r22, r24
    1b20:	cd 01       	movw	r24, r26
    1b22:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b26:	dc 01       	movw	r26, r24
    1b28:	cb 01       	movw	r24, r22
    1b2a:	9e 83       	std	Y+6, r25	; 0x06
    1b2c:	8d 83       	std	Y+5, r24	; 0x05
    1b2e:	0f c0       	rjmp	.+30     	; 0x1b4e <LCD_WriteCmd+0xf8>
    1b30:	88 ec       	ldi	r24, 0xC8	; 200
    1b32:	90 e0       	ldi	r25, 0x00	; 0
    1b34:	9c 83       	std	Y+4, r25	; 0x04
    1b36:	8b 83       	std	Y+3, r24	; 0x03
    1b38:	8b 81       	ldd	r24, Y+3	; 0x03
    1b3a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b3c:	01 97       	sbiw	r24, 0x01	; 1
    1b3e:	f1 f7       	brne	.-4      	; 0x1b3c <LCD_WriteCmd+0xe6>
    1b40:	9c 83       	std	Y+4, r25	; 0x04
    1b42:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b44:	8d 81       	ldd	r24, Y+5	; 0x05
    1b46:	9e 81       	ldd	r25, Y+6	; 0x06
    1b48:	01 97       	sbiw	r24, 0x01	; 1
    1b4a:	9e 83       	std	Y+6, r25	; 0x06
    1b4c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b4e:	8d 81       	ldd	r24, Y+5	; 0x05
    1b50:	9e 81       	ldd	r25, Y+6	; 0x06
    1b52:	00 97       	sbiw	r24, 0x00	; 0
    1b54:	69 f7       	brne	.-38     	; 0x1b30 <LCD_WriteCmd+0xda>
    1b56:	14 c0       	rjmp	.+40     	; 0x1b80 <LCD_WriteCmd+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b58:	6f 81       	ldd	r22, Y+7	; 0x07
    1b5a:	78 85       	ldd	r23, Y+8	; 0x08
    1b5c:	89 85       	ldd	r24, Y+9	; 0x09
    1b5e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b60:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b64:	dc 01       	movw	r26, r24
    1b66:	cb 01       	movw	r24, r22
    1b68:	9e 83       	std	Y+6, r25	; 0x06
    1b6a:	8d 83       	std	Y+5, r24	; 0x05
    1b6c:	8d 81       	ldd	r24, Y+5	; 0x05
    1b6e:	9e 81       	ldd	r25, Y+6	; 0x06
    1b70:	9a 83       	std	Y+2, r25	; 0x02
    1b72:	89 83       	std	Y+1, r24	; 0x01
    1b74:	89 81       	ldd	r24, Y+1	; 0x01
    1b76:	9a 81       	ldd	r25, Y+2	; 0x02
    1b78:	01 97       	sbiw	r24, 0x01	; 1
    1b7a:	f1 f7       	brne	.-4      	; 0x1b78 <LCD_WriteCmd+0x122>
    1b7c:	9a 83       	std	Y+2, r25	; 0x02
    1b7e:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_SetPinValue(ControlPort,EN,LOW);
    1b80:	83 e0       	ldi	r24, 0x03	; 3
    1b82:	67 e0       	ldi	r22, 0x07	; 7
    1b84:	40 e0       	ldi	r20, 0x00	; 0
    1b86:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>


}
    1b8a:	2f 96       	adiw	r28, 0x0f	; 15
    1b8c:	0f b6       	in	r0, 0x3f	; 63
    1b8e:	f8 94       	cli
    1b90:	de bf       	out	0x3e, r29	; 62
    1b92:	0f be       	out	0x3f, r0	; 63
    1b94:	cd bf       	out	0x3d, r28	; 61
    1b96:	cf 91       	pop	r28
    1b98:	df 91       	pop	r29
    1b9a:	08 95       	ret

00001b9c <LCD_WriteChar>:



void LCD_WriteChar(u8 u8_DataCopy)
{
    1b9c:	df 93       	push	r29
    1b9e:	cf 93       	push	r28
    1ba0:	cd b7       	in	r28, 0x3d	; 61
    1ba2:	de b7       	in	r29, 0x3e	; 62
    1ba4:	2f 97       	sbiw	r28, 0x0f	; 15
    1ba6:	0f b6       	in	r0, 0x3f	; 63
    1ba8:	f8 94       	cli
    1baa:	de bf       	out	0x3e, r29	; 62
    1bac:	0f be       	out	0x3f, r0	; 63
    1bae:	cd bf       	out	0x3d, r28	; 61
    1bb0:	8f 87       	std	Y+15, r24	; 0x0f
	DIO_SetPinValue(ControlPort,EN,LOW);
    1bb2:	83 e0       	ldi	r24, 0x03	; 3
    1bb4:	67 e0       	ldi	r22, 0x07	; 7
    1bb6:	40 e0       	ldi	r20, 0x00	; 0
    1bb8:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
	DIO_SetPinValue(ControlPort,RS,HIGH);
    1bbc:	83 e0       	ldi	r24, 0x03	; 3
    1bbe:	65 e0       	ldi	r22, 0x05	; 5
    1bc0:	41 e0       	ldi	r20, 0x01	; 1
    1bc2:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
	DIO_SetPinValue(ControlPort,RW,LOW);
    1bc6:	83 e0       	ldi	r24, 0x03	; 3
    1bc8:	66 e0       	ldi	r22, 0x06	; 6
    1bca:	40 e0       	ldi	r20, 0x00	; 0
    1bcc:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>

	DIO_SetPortValue(DataPort,u8_DataCopy);
    1bd0:	82 e0       	ldi	r24, 0x02	; 2
    1bd2:	6f 85       	ldd	r22, Y+15	; 0x0f
    1bd4:	0e 94 28 09 	call	0x1250	; 0x1250 <DIO_SetPortValue>

	DIO_SetPinValue(ControlPort,EN,HIGH);
    1bd8:	83 e0       	ldi	r24, 0x03	; 3
    1bda:	67 e0       	ldi	r22, 0x07	; 7
    1bdc:	41 e0       	ldi	r20, 0x01	; 1
    1bde:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
    1be2:	80 e0       	ldi	r24, 0x00	; 0
    1be4:	90 e0       	ldi	r25, 0x00	; 0
    1be6:	a0 e8       	ldi	r26, 0x80	; 128
    1be8:	bf e3       	ldi	r27, 0x3F	; 63
    1bea:	8b 87       	std	Y+11, r24	; 0x0b
    1bec:	9c 87       	std	Y+12, r25	; 0x0c
    1bee:	ad 87       	std	Y+13, r26	; 0x0d
    1bf0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bf2:	6b 85       	ldd	r22, Y+11	; 0x0b
    1bf4:	7c 85       	ldd	r23, Y+12	; 0x0c
    1bf6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1bf8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1bfa:	20 e0       	ldi	r18, 0x00	; 0
    1bfc:	30 e0       	ldi	r19, 0x00	; 0
    1bfe:	4a ef       	ldi	r20, 0xFA	; 250
    1c00:	54 e4       	ldi	r21, 0x44	; 68
    1c02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c06:	dc 01       	movw	r26, r24
    1c08:	cb 01       	movw	r24, r22
    1c0a:	8f 83       	std	Y+7, r24	; 0x07
    1c0c:	98 87       	std	Y+8, r25	; 0x08
    1c0e:	a9 87       	std	Y+9, r26	; 0x09
    1c10:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1c12:	6f 81       	ldd	r22, Y+7	; 0x07
    1c14:	78 85       	ldd	r23, Y+8	; 0x08
    1c16:	89 85       	ldd	r24, Y+9	; 0x09
    1c18:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c1a:	20 e0       	ldi	r18, 0x00	; 0
    1c1c:	30 e0       	ldi	r19, 0x00	; 0
    1c1e:	40 e8       	ldi	r20, 0x80	; 128
    1c20:	5f e3       	ldi	r21, 0x3F	; 63
    1c22:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c26:	88 23       	and	r24, r24
    1c28:	2c f4       	brge	.+10     	; 0x1c34 <LCD_WriteChar+0x98>
		__ticks = 1;
    1c2a:	81 e0       	ldi	r24, 0x01	; 1
    1c2c:	90 e0       	ldi	r25, 0x00	; 0
    1c2e:	9e 83       	std	Y+6, r25	; 0x06
    1c30:	8d 83       	std	Y+5, r24	; 0x05
    1c32:	3f c0       	rjmp	.+126    	; 0x1cb2 <LCD_WriteChar+0x116>
	else if (__tmp > 65535)
    1c34:	6f 81       	ldd	r22, Y+7	; 0x07
    1c36:	78 85       	ldd	r23, Y+8	; 0x08
    1c38:	89 85       	ldd	r24, Y+9	; 0x09
    1c3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    1c3c:	20 e0       	ldi	r18, 0x00	; 0
    1c3e:	3f ef       	ldi	r19, 0xFF	; 255
    1c40:	4f e7       	ldi	r20, 0x7F	; 127
    1c42:	57 e4       	ldi	r21, 0x47	; 71
    1c44:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c48:	18 16       	cp	r1, r24
    1c4a:	4c f5       	brge	.+82     	; 0x1c9e <LCD_WriteChar+0x102>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    1c4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    1c50:	8d 85       	ldd	r24, Y+13	; 0x0d
    1c52:	9e 85       	ldd	r25, Y+14	; 0x0e
    1c54:	20 e0       	ldi	r18, 0x00	; 0
    1c56:	30 e0       	ldi	r19, 0x00	; 0
    1c58:	40 e2       	ldi	r20, 0x20	; 32
    1c5a:	51 e4       	ldi	r21, 0x41	; 65
    1c5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c60:	dc 01       	movw	r26, r24
    1c62:	cb 01       	movw	r24, r22
    1c64:	bc 01       	movw	r22, r24
    1c66:	cd 01       	movw	r24, r26
    1c68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c6c:	dc 01       	movw	r26, r24
    1c6e:	cb 01       	movw	r24, r22
    1c70:	9e 83       	std	Y+6, r25	; 0x06
    1c72:	8d 83       	std	Y+5, r24	; 0x05
    1c74:	0f c0       	rjmp	.+30     	; 0x1c94 <LCD_WriteChar+0xf8>
    1c76:	88 ec       	ldi	r24, 0xC8	; 200
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	9c 83       	std	Y+4, r25	; 0x04
    1c7c:	8b 83       	std	Y+3, r24	; 0x03
    1c7e:	8b 81       	ldd	r24, Y+3	; 0x03
    1c80:	9c 81       	ldd	r25, Y+4	; 0x04
    1c82:	01 97       	sbiw	r24, 0x01	; 1
    1c84:	f1 f7       	brne	.-4      	; 0x1c82 <LCD_WriteChar+0xe6>
    1c86:	9c 83       	std	Y+4, r25	; 0x04
    1c88:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c8a:	8d 81       	ldd	r24, Y+5	; 0x05
    1c8c:	9e 81       	ldd	r25, Y+6	; 0x06
    1c8e:	01 97       	sbiw	r24, 0x01	; 1
    1c90:	9e 83       	std	Y+6, r25	; 0x06
    1c92:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c94:	8d 81       	ldd	r24, Y+5	; 0x05
    1c96:	9e 81       	ldd	r25, Y+6	; 0x06
    1c98:	00 97       	sbiw	r24, 0x00	; 0
    1c9a:	69 f7       	brne	.-38     	; 0x1c76 <LCD_WriteChar+0xda>
    1c9c:	14 c0       	rjmp	.+40     	; 0x1cc6 <LCD_WriteChar+0x12a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c9e:	6f 81       	ldd	r22, Y+7	; 0x07
    1ca0:	78 85       	ldd	r23, Y+8	; 0x08
    1ca2:	89 85       	ldd	r24, Y+9	; 0x09
    1ca4:	9a 85       	ldd	r25, Y+10	; 0x0a
    1ca6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1caa:	dc 01       	movw	r26, r24
    1cac:	cb 01       	movw	r24, r22
    1cae:	9e 83       	std	Y+6, r25	; 0x06
    1cb0:	8d 83       	std	Y+5, r24	; 0x05
    1cb2:	8d 81       	ldd	r24, Y+5	; 0x05
    1cb4:	9e 81       	ldd	r25, Y+6	; 0x06
    1cb6:	9a 83       	std	Y+2, r25	; 0x02
    1cb8:	89 83       	std	Y+1, r24	; 0x01
    1cba:	89 81       	ldd	r24, Y+1	; 0x01
    1cbc:	9a 81       	ldd	r25, Y+2	; 0x02
    1cbe:	01 97       	sbiw	r24, 0x01	; 1
    1cc0:	f1 f7       	brne	.-4      	; 0x1cbe <LCD_WriteChar+0x122>
    1cc2:	9a 83       	std	Y+2, r25	; 0x02
    1cc4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_SetPinValue(ControlPort,EN,LOW);
    1cc6:	83 e0       	ldi	r24, 0x03	; 3
    1cc8:	67 e0       	ldi	r22, 0x07	; 7
    1cca:	40 e0       	ldi	r20, 0x00	; 0
    1ccc:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>


}
    1cd0:	2f 96       	adiw	r28, 0x0f	; 15
    1cd2:	0f b6       	in	r0, 0x3f	; 63
    1cd4:	f8 94       	cli
    1cd6:	de bf       	out	0x3e, r29	; 62
    1cd8:	0f be       	out	0x3f, r0	; 63
    1cda:	cd bf       	out	0x3d, r28	; 61
    1cdc:	cf 91       	pop	r28
    1cde:	df 91       	pop	r29
    1ce0:	08 95       	ret

00001ce2 <LCD_WriteString>:




void LCD_WriteString(u8 * u8_StringCopy)
{
    1ce2:	0f 93       	push	r16
    1ce4:	1f 93       	push	r17
    1ce6:	df 93       	push	r29
    1ce8:	cf 93       	push	r28
    1cea:	00 d0       	rcall	.+0      	; 0x1cec <LCD_WriteString+0xa>
    1cec:	0f 92       	push	r0
    1cee:	cd b7       	in	r28, 0x3d	; 61
    1cf0:	de b7       	in	r29, 0x3e	; 62
    1cf2:	9b 83       	std	Y+3, r25	; 0x03
    1cf4:	8a 83       	std	Y+2, r24	; 0x02
	u8 index;


	for (index = 0 ;index < ((u16)strlen (u8_StringCopy));index++)
    1cf6:	19 82       	std	Y+1, r1	; 0x01
    1cf8:	0e c0       	rjmp	.+28     	; 0x1d16 <LCD_WriteString+0x34>
	{

		LCD_WriteChar(u8_StringCopy[index]);
    1cfa:	89 81       	ldd	r24, Y+1	; 0x01
    1cfc:	28 2f       	mov	r18, r24
    1cfe:	30 e0       	ldi	r19, 0x00	; 0
    1d00:	8a 81       	ldd	r24, Y+2	; 0x02
    1d02:	9b 81       	ldd	r25, Y+3	; 0x03
    1d04:	fc 01       	movw	r30, r24
    1d06:	e2 0f       	add	r30, r18
    1d08:	f3 1f       	adc	r31, r19
    1d0a:	80 81       	ld	r24, Z
    1d0c:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <LCD_WriteChar>
void LCD_WriteString(u8 * u8_StringCopy)
{
	u8 index;


	for (index = 0 ;index < ((u16)strlen (u8_StringCopy));index++)
    1d10:	89 81       	ldd	r24, Y+1	; 0x01
    1d12:	8f 5f       	subi	r24, 0xFF	; 255
    1d14:	89 83       	std	Y+1, r24	; 0x01
    1d16:	89 81       	ldd	r24, Y+1	; 0x01
    1d18:	08 2f       	mov	r16, r24
    1d1a:	10 e0       	ldi	r17, 0x00	; 0
    1d1c:	8a 81       	ldd	r24, Y+2	; 0x02
    1d1e:	9b 81       	ldd	r25, Y+3	; 0x03
    1d20:	0e 94 3d 2a 	call	0x547a	; 0x547a <strlen>
    1d24:	08 17       	cp	r16, r24
    1d26:	19 07       	cpc	r17, r25
    1d28:	40 f3       	brcs	.-48     	; 0x1cfa <LCD_WriteString+0x18>


	}


}
    1d2a:	0f 90       	pop	r0
    1d2c:	0f 90       	pop	r0
    1d2e:	0f 90       	pop	r0
    1d30:	cf 91       	pop	r28
    1d32:	df 91       	pop	r29
    1d34:	1f 91       	pop	r17
    1d36:	0f 91       	pop	r16
    1d38:	08 95       	ret

00001d3a <LCD_WriteArrofChar>:



void LCD_WriteArrofChar(u8 * u8_ArrofChar ,u8 u8_ArrayLength)
{
    1d3a:	df 93       	push	r29
    1d3c:	cf 93       	push	r28
    1d3e:	00 d0       	rcall	.+0      	; 0x1d40 <LCD_WriteArrofChar+0x6>
    1d40:	00 d0       	rcall	.+0      	; 0x1d42 <LCD_WriteArrofChar+0x8>
    1d42:	cd b7       	in	r28, 0x3d	; 61
    1d44:	de b7       	in	r29, 0x3e	; 62
    1d46:	9b 83       	std	Y+3, r25	; 0x03
    1d48:	8a 83       	std	Y+2, r24	; 0x02
    1d4a:	6c 83       	std	Y+4, r22	; 0x04
	u8 index;


	for (index = 0 ;index < u8_ArrayLength;index++)
    1d4c:	19 82       	std	Y+1, r1	; 0x01
    1d4e:	0e c0       	rjmp	.+28     	; 0x1d6c <LCD_WriteArrofChar+0x32>
	{

		LCD_WriteChar(u8_ArrofChar[index]);
    1d50:	89 81       	ldd	r24, Y+1	; 0x01
    1d52:	28 2f       	mov	r18, r24
    1d54:	30 e0       	ldi	r19, 0x00	; 0
    1d56:	8a 81       	ldd	r24, Y+2	; 0x02
    1d58:	9b 81       	ldd	r25, Y+3	; 0x03
    1d5a:	fc 01       	movw	r30, r24
    1d5c:	e2 0f       	add	r30, r18
    1d5e:	f3 1f       	adc	r31, r19
    1d60:	80 81       	ld	r24, Z
    1d62:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <LCD_WriteChar>
void LCD_WriteArrofChar(u8 * u8_ArrofChar ,u8 u8_ArrayLength)
{
	u8 index;


	for (index = 0 ;index < u8_ArrayLength;index++)
    1d66:	89 81       	ldd	r24, Y+1	; 0x01
    1d68:	8f 5f       	subi	r24, 0xFF	; 255
    1d6a:	89 83       	std	Y+1, r24	; 0x01
    1d6c:	99 81       	ldd	r25, Y+1	; 0x01
    1d6e:	8c 81       	ldd	r24, Y+4	; 0x04
    1d70:	98 17       	cp	r25, r24
    1d72:	70 f3       	brcs	.-36     	; 0x1d50 <LCD_WriteArrofChar+0x16>


	}


}
    1d74:	0f 90       	pop	r0
    1d76:	0f 90       	pop	r0
    1d78:	0f 90       	pop	r0
    1d7a:	0f 90       	pop	r0
    1d7c:	cf 91       	pop	r28
    1d7e:	df 91       	pop	r29
    1d80:	08 95       	ret

00001d82 <LCD_GoToXY>:



u8 LCD_GoToXY(u8 u8_XValue,u8 u8_YValue)
{
    1d82:	df 93       	push	r29
    1d84:	cf 93       	push	r28
    1d86:	00 d0       	rcall	.+0      	; 0x1d88 <LCD_GoToXY+0x6>
    1d88:	00 d0       	rcall	.+0      	; 0x1d8a <LCD_GoToXY+0x8>
    1d8a:	0f 92       	push	r0
    1d8c:	cd b7       	in	r28, 0x3d	; 61
    1d8e:	de b7       	in	r29, 0x3e	; 62
    1d90:	8a 83       	std	Y+2, r24	; 0x02
    1d92:	6b 83       	std	Y+3, r22	; 0x03
	u8 ErrorState;

	if ((u8_XValue >= 0) && (u8_XValue <= 15) && (u8_YValue >= 0) && (u8_YValue <= 1))
    1d94:	8a 81       	ldd	r24, Y+2	; 0x02
    1d96:	80 31       	cpi	r24, 0x10	; 16
    1d98:	f0 f4       	brcc	.+60     	; 0x1dd6 <LCD_GoToXY+0x54>
    1d9a:	8b 81       	ldd	r24, Y+3	; 0x03
    1d9c:	82 30       	cpi	r24, 0x02	; 2
    1d9e:	d8 f4       	brcc	.+54     	; 0x1dd6 <LCD_GoToXY+0x54>
	{
		ErrorState = ErrorStateOK ;
    1da0:	81 e0       	ldi	r24, 0x01	; 1
    1da2:	89 83       	std	Y+1, r24	; 0x01
		switch (u8_YValue)
    1da4:	8b 81       	ldd	r24, Y+3	; 0x03
    1da6:	28 2f       	mov	r18, r24
    1da8:	30 e0       	ldi	r19, 0x00	; 0
    1daa:	3d 83       	std	Y+5, r19	; 0x05
    1dac:	2c 83       	std	Y+4, r18	; 0x04
    1dae:	8c 81       	ldd	r24, Y+4	; 0x04
    1db0:	9d 81       	ldd	r25, Y+5	; 0x05
    1db2:	00 97       	sbiw	r24, 0x00	; 0
    1db4:	31 f0       	breq	.+12     	; 0x1dc2 <LCD_GoToXY+0x40>
    1db6:	2c 81       	ldd	r18, Y+4	; 0x04
    1db8:	3d 81       	ldd	r19, Y+5	; 0x05
    1dba:	21 30       	cpi	r18, 0x01	; 1
    1dbc:	31 05       	cpc	r19, r1
    1dbe:	31 f0       	breq	.+12     	; 0x1dcc <LCD_GoToXY+0x4a>
    1dc0:	0b c0       	rjmp	.+22     	; 0x1dd8 <LCD_GoToXY+0x56>
		{
			case 0 :LCD_WriteCmd(128 + u8_XValue); 	break;
    1dc2:	8a 81       	ldd	r24, Y+2	; 0x02
    1dc4:	80 58       	subi	r24, 0x80	; 128
    1dc6:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
    1dca:	06 c0       	rjmp	.+12     	; 0x1dd8 <LCD_GoToXY+0x56>
			case 1 :LCD_WriteCmd(192 + u8_XValue); 	break;
    1dcc:	8a 81       	ldd	r24, Y+2	; 0x02
    1dce:	80 54       	subi	r24, 0x40	; 64
    1dd0:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
    1dd4:	01 c0       	rjmp	.+2      	; 0x1dd8 <LCD_GoToXY+0x56>
		}
	}
	else
	{
		ErrorState = ErrorStateNOK ;
    1dd6:	19 82       	std	Y+1, r1	; 0x01
	}

	return ErrorState ;
    1dd8:	89 81       	ldd	r24, Y+1	; 0x01

}
    1dda:	0f 90       	pop	r0
    1ddc:	0f 90       	pop	r0
    1dde:	0f 90       	pop	r0
    1de0:	0f 90       	pop	r0
    1de2:	0f 90       	pop	r0
    1de4:	cf 91       	pop	r28
    1de6:	df 91       	pop	r29
    1de8:	08 95       	ret

00001dea <LCD_Sep_DisResult>:


void LCD_Sep_DisResult(u16 u16_result)
{
    1dea:	df 93       	push	r29
    1dec:	cf 93       	push	r28
    1dee:	cd b7       	in	r28, 0x3d	; 61
    1df0:	de b7       	in	r29, 0x3e	; 62
    1df2:	28 97       	sbiw	r28, 0x08	; 8
    1df4:	0f b6       	in	r0, 0x3f	; 63
    1df6:	f8 94       	cli
    1df8:	de bf       	out	0x3e, r29	; 62
    1dfa:	0f be       	out	0x3f, r0	; 63
    1dfc:	cd bf       	out	0x3d, r28	; 61
    1dfe:	98 87       	std	Y+8, r25	; 0x08
    1e00:	8f 83       	std	Y+7, r24	; 0x07
	u8 ResArr[5],index = 0 ;
    1e02:	19 82       	std	Y+1, r1	; 0x01


		ResArr[0] =(u8) (u16_result /(u16)10000);
    1e04:	8f 81       	ldd	r24, Y+7	; 0x07
    1e06:	98 85       	ldd	r25, Y+8	; 0x08
    1e08:	20 e1       	ldi	r18, 0x10	; 16
    1e0a:	37 e2       	ldi	r19, 0x27	; 39
    1e0c:	b9 01       	movw	r22, r18
    1e0e:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    1e12:	cb 01       	movw	r24, r22
    1e14:	8a 83       	std	Y+2, r24	; 0x02
		u16_result = u16_result -( (u16) ResArr[0] * (u16) 10000) ;
    1e16:	8a 81       	ldd	r24, Y+2	; 0x02
    1e18:	28 2f       	mov	r18, r24
    1e1a:	30 e0       	ldi	r19, 0x00	; 0
    1e1c:	80 e1       	ldi	r24, 0x10	; 16
    1e1e:	97 e2       	ldi	r25, 0x27	; 39
    1e20:	a9 01       	movw	r20, r18
    1e22:	48 9f       	mul	r20, r24
    1e24:	90 01       	movw	r18, r0
    1e26:	49 9f       	mul	r20, r25
    1e28:	30 0d       	add	r19, r0
    1e2a:	58 9f       	mul	r21, r24
    1e2c:	30 0d       	add	r19, r0
    1e2e:	11 24       	eor	r1, r1
    1e30:	8f 81       	ldd	r24, Y+7	; 0x07
    1e32:	98 85       	ldd	r25, Y+8	; 0x08
    1e34:	82 1b       	sub	r24, r18
    1e36:	93 0b       	sbc	r25, r19
    1e38:	98 87       	std	Y+8, r25	; 0x08
    1e3a:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[1] = (u8)(u16_result /(u16)1000);
    1e3c:	8f 81       	ldd	r24, Y+7	; 0x07
    1e3e:	98 85       	ldd	r25, Y+8	; 0x08
    1e40:	28 ee       	ldi	r18, 0xE8	; 232
    1e42:	33 e0       	ldi	r19, 0x03	; 3
    1e44:	b9 01       	movw	r22, r18
    1e46:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    1e4a:	cb 01       	movw	r24, r22
    1e4c:	8b 83       	std	Y+3, r24	; 0x03
		u16_result = u16_result - ((u16)ResArr[1] * (u16) 1000) ;
    1e4e:	8b 81       	ldd	r24, Y+3	; 0x03
    1e50:	28 2f       	mov	r18, r24
    1e52:	30 e0       	ldi	r19, 0x00	; 0
    1e54:	88 ee       	ldi	r24, 0xE8	; 232
    1e56:	93 e0       	ldi	r25, 0x03	; 3
    1e58:	a9 01       	movw	r20, r18
    1e5a:	48 9f       	mul	r20, r24
    1e5c:	90 01       	movw	r18, r0
    1e5e:	49 9f       	mul	r20, r25
    1e60:	30 0d       	add	r19, r0
    1e62:	58 9f       	mul	r21, r24
    1e64:	30 0d       	add	r19, r0
    1e66:	11 24       	eor	r1, r1
    1e68:	8f 81       	ldd	r24, Y+7	; 0x07
    1e6a:	98 85       	ldd	r25, Y+8	; 0x08
    1e6c:	82 1b       	sub	r24, r18
    1e6e:	93 0b       	sbc	r25, r19
    1e70:	98 87       	std	Y+8, r25	; 0x08
    1e72:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[2]  = (u8)(u16_result /(u16)100 ) ;
    1e74:	8f 81       	ldd	r24, Y+7	; 0x07
    1e76:	98 85       	ldd	r25, Y+8	; 0x08
    1e78:	24 e6       	ldi	r18, 0x64	; 100
    1e7a:	30 e0       	ldi	r19, 0x00	; 0
    1e7c:	b9 01       	movw	r22, r18
    1e7e:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    1e82:	cb 01       	movw	r24, r22
    1e84:	8c 83       	std	Y+4, r24	; 0x04
		u16_result = u16_result - ((u16)ResArr[2] * (u16) 100) ;
    1e86:	8c 81       	ldd	r24, Y+4	; 0x04
    1e88:	28 2f       	mov	r18, r24
    1e8a:	30 e0       	ldi	r19, 0x00	; 0
    1e8c:	84 e6       	ldi	r24, 0x64	; 100
    1e8e:	90 e0       	ldi	r25, 0x00	; 0
    1e90:	a9 01       	movw	r20, r18
    1e92:	48 9f       	mul	r20, r24
    1e94:	90 01       	movw	r18, r0
    1e96:	49 9f       	mul	r20, r25
    1e98:	30 0d       	add	r19, r0
    1e9a:	58 9f       	mul	r21, r24
    1e9c:	30 0d       	add	r19, r0
    1e9e:	11 24       	eor	r1, r1
    1ea0:	8f 81       	ldd	r24, Y+7	; 0x07
    1ea2:	98 85       	ldd	r25, Y+8	; 0x08
    1ea4:	82 1b       	sub	r24, r18
    1ea6:	93 0b       	sbc	r25, r19
    1ea8:	98 87       	std	Y+8, r25	; 0x08
    1eaa:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[3] = (u8)(u16_result /(u16)10) ;
    1eac:	8f 81       	ldd	r24, Y+7	; 0x07
    1eae:	98 85       	ldd	r25, Y+8	; 0x08
    1eb0:	2a e0       	ldi	r18, 0x0A	; 10
    1eb2:	30 e0       	ldi	r19, 0x00	; 0
    1eb4:	b9 01       	movw	r22, r18
    1eb6:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    1eba:	cb 01       	movw	r24, r22
    1ebc:	8d 83       	std	Y+5, r24	; 0x05
		u16_result = u16_result -((u16)ResArr[3] * (u16)10);
    1ebe:	8d 81       	ldd	r24, Y+5	; 0x05
    1ec0:	88 2f       	mov	r24, r24
    1ec2:	90 e0       	ldi	r25, 0x00	; 0
    1ec4:	9c 01       	movw	r18, r24
    1ec6:	22 0f       	add	r18, r18
    1ec8:	33 1f       	adc	r19, r19
    1eca:	c9 01       	movw	r24, r18
    1ecc:	88 0f       	add	r24, r24
    1ece:	99 1f       	adc	r25, r25
    1ed0:	88 0f       	add	r24, r24
    1ed2:	99 1f       	adc	r25, r25
    1ed4:	28 0f       	add	r18, r24
    1ed6:	39 1f       	adc	r19, r25
    1ed8:	8f 81       	ldd	r24, Y+7	; 0x07
    1eda:	98 85       	ldd	r25, Y+8	; 0x08
    1edc:	82 1b       	sub	r24, r18
    1ede:	93 0b       	sbc	r25, r19
    1ee0:	98 87       	std	Y+8, r25	; 0x08
    1ee2:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[4] = (u8)u16_result ;
    1ee4:	8f 81       	ldd	r24, Y+7	; 0x07
    1ee6:	8e 83       	std	Y+6, r24	; 0x06


		/*converting INT to CHAR*/
		for (index =0 ;index < 5;index++)
    1ee8:	19 82       	std	Y+1, r1	; 0x01
    1eea:	17 c0       	rjmp	.+46     	; 0x1f1a <LCD_Sep_DisResult+0x130>
			{
				ResArr[index] += '0';
    1eec:	89 81       	ldd	r24, Y+1	; 0x01
    1eee:	48 2f       	mov	r20, r24
    1ef0:	50 e0       	ldi	r21, 0x00	; 0
    1ef2:	89 81       	ldd	r24, Y+1	; 0x01
    1ef4:	28 2f       	mov	r18, r24
    1ef6:	30 e0       	ldi	r19, 0x00	; 0
    1ef8:	ce 01       	movw	r24, r28
    1efa:	02 96       	adiw	r24, 0x02	; 2
    1efc:	fc 01       	movw	r30, r24
    1efe:	e2 0f       	add	r30, r18
    1f00:	f3 1f       	adc	r31, r19
    1f02:	80 81       	ld	r24, Z
    1f04:	28 2f       	mov	r18, r24
    1f06:	20 5d       	subi	r18, 0xD0	; 208
    1f08:	ce 01       	movw	r24, r28
    1f0a:	02 96       	adiw	r24, 0x02	; 2
    1f0c:	fc 01       	movw	r30, r24
    1f0e:	e4 0f       	add	r30, r20
    1f10:	f5 1f       	adc	r31, r21
    1f12:	20 83       	st	Z, r18

		ResArr[4] = (u8)u16_result ;


		/*converting INT to CHAR*/
		for (index =0 ;index < 5;index++)
    1f14:	89 81       	ldd	r24, Y+1	; 0x01
    1f16:	8f 5f       	subi	r24, 0xFF	; 255
    1f18:	89 83       	std	Y+1, r24	; 0x01
    1f1a:	89 81       	ldd	r24, Y+1	; 0x01
    1f1c:	85 30       	cpi	r24, 0x05	; 5
    1f1e:	30 f3       	brcs	.-52     	; 0x1eec <LCD_Sep_DisResult+0x102>
				ResArr[index] += '0';
			}



		LCD_WriteArrofChar((ResArr ),(5));
    1f20:	ce 01       	movw	r24, r28
    1f22:	02 96       	adiw	r24, 0x02	; 2
    1f24:	65 e0       	ldi	r22, 0x05	; 5
    1f26:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LCD_WriteArrofChar>





}
    1f2a:	28 96       	adiw	r28, 0x08	; 8
    1f2c:	0f b6       	in	r0, 0x3f	; 63
    1f2e:	f8 94       	cli
    1f30:	de bf       	out	0x3e, r29	; 62
    1f32:	0f be       	out	0x3f, r0	; 63
    1f34:	cd bf       	out	0x3d, r28	; 61
    1f36:	cf 91       	pop	r28
    1f38:	df 91       	pop	r29
    1f3a:	08 95       	ret

00001f3c <LCD_SepResult>:


void LCD_SepResult(u16 u16_result,u8 *ResSepArr)
{
    1f3c:	df 93       	push	r29
    1f3e:	cf 93       	push	r28
    1f40:	cd b7       	in	r28, 0x3d	; 61
    1f42:	de b7       	in	r29, 0x3e	; 62
    1f44:	2a 97       	sbiw	r28, 0x0a	; 10
    1f46:	0f b6       	in	r0, 0x3f	; 63
    1f48:	f8 94       	cli
    1f4a:	de bf       	out	0x3e, r29	; 62
    1f4c:	0f be       	out	0x3f, r0	; 63
    1f4e:	cd bf       	out	0x3d, r28	; 61
    1f50:	98 87       	std	Y+8, r25	; 0x08
    1f52:	8f 83       	std	Y+7, r24	; 0x07
    1f54:	7a 87       	std	Y+10, r23	; 0x0a
    1f56:	69 87       	std	Y+9, r22	; 0x09
	u8 ResArr[5],index = 0 ;
    1f58:	19 82       	std	Y+1, r1	; 0x01


		ResArr[0] =(u8) (u16_result /(u16)10000);
    1f5a:	8f 81       	ldd	r24, Y+7	; 0x07
    1f5c:	98 85       	ldd	r25, Y+8	; 0x08
    1f5e:	20 e1       	ldi	r18, 0x10	; 16
    1f60:	37 e2       	ldi	r19, 0x27	; 39
    1f62:	b9 01       	movw	r22, r18
    1f64:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    1f68:	cb 01       	movw	r24, r22
    1f6a:	8a 83       	std	Y+2, r24	; 0x02
		u16_result = u16_result -( (u16) ResArr[0] * (u16) 10000) ;
    1f6c:	8a 81       	ldd	r24, Y+2	; 0x02
    1f6e:	28 2f       	mov	r18, r24
    1f70:	30 e0       	ldi	r19, 0x00	; 0
    1f72:	80 e1       	ldi	r24, 0x10	; 16
    1f74:	97 e2       	ldi	r25, 0x27	; 39
    1f76:	a9 01       	movw	r20, r18
    1f78:	48 9f       	mul	r20, r24
    1f7a:	90 01       	movw	r18, r0
    1f7c:	49 9f       	mul	r20, r25
    1f7e:	30 0d       	add	r19, r0
    1f80:	58 9f       	mul	r21, r24
    1f82:	30 0d       	add	r19, r0
    1f84:	11 24       	eor	r1, r1
    1f86:	8f 81       	ldd	r24, Y+7	; 0x07
    1f88:	98 85       	ldd	r25, Y+8	; 0x08
    1f8a:	82 1b       	sub	r24, r18
    1f8c:	93 0b       	sbc	r25, r19
    1f8e:	98 87       	std	Y+8, r25	; 0x08
    1f90:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[1] = (u8)(u16_result /(u16)1000);
    1f92:	8f 81       	ldd	r24, Y+7	; 0x07
    1f94:	98 85       	ldd	r25, Y+8	; 0x08
    1f96:	28 ee       	ldi	r18, 0xE8	; 232
    1f98:	33 e0       	ldi	r19, 0x03	; 3
    1f9a:	b9 01       	movw	r22, r18
    1f9c:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    1fa0:	cb 01       	movw	r24, r22
    1fa2:	8b 83       	std	Y+3, r24	; 0x03
		u16_result = u16_result - ((u16)ResArr[1] * (u16) 1000) ;
    1fa4:	8b 81       	ldd	r24, Y+3	; 0x03
    1fa6:	28 2f       	mov	r18, r24
    1fa8:	30 e0       	ldi	r19, 0x00	; 0
    1faa:	88 ee       	ldi	r24, 0xE8	; 232
    1fac:	93 e0       	ldi	r25, 0x03	; 3
    1fae:	a9 01       	movw	r20, r18
    1fb0:	48 9f       	mul	r20, r24
    1fb2:	90 01       	movw	r18, r0
    1fb4:	49 9f       	mul	r20, r25
    1fb6:	30 0d       	add	r19, r0
    1fb8:	58 9f       	mul	r21, r24
    1fba:	30 0d       	add	r19, r0
    1fbc:	11 24       	eor	r1, r1
    1fbe:	8f 81       	ldd	r24, Y+7	; 0x07
    1fc0:	98 85       	ldd	r25, Y+8	; 0x08
    1fc2:	82 1b       	sub	r24, r18
    1fc4:	93 0b       	sbc	r25, r19
    1fc6:	98 87       	std	Y+8, r25	; 0x08
    1fc8:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[2]  = (u8)(u16_result /(u16)100 ) ;
    1fca:	8f 81       	ldd	r24, Y+7	; 0x07
    1fcc:	98 85       	ldd	r25, Y+8	; 0x08
    1fce:	24 e6       	ldi	r18, 0x64	; 100
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	b9 01       	movw	r22, r18
    1fd4:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    1fd8:	cb 01       	movw	r24, r22
    1fda:	8c 83       	std	Y+4, r24	; 0x04
		u16_result = u16_result - ((u16)ResArr[2] * (u16) 100) ;
    1fdc:	8c 81       	ldd	r24, Y+4	; 0x04
    1fde:	28 2f       	mov	r18, r24
    1fe0:	30 e0       	ldi	r19, 0x00	; 0
    1fe2:	84 e6       	ldi	r24, 0x64	; 100
    1fe4:	90 e0       	ldi	r25, 0x00	; 0
    1fe6:	a9 01       	movw	r20, r18
    1fe8:	48 9f       	mul	r20, r24
    1fea:	90 01       	movw	r18, r0
    1fec:	49 9f       	mul	r20, r25
    1fee:	30 0d       	add	r19, r0
    1ff0:	58 9f       	mul	r21, r24
    1ff2:	30 0d       	add	r19, r0
    1ff4:	11 24       	eor	r1, r1
    1ff6:	8f 81       	ldd	r24, Y+7	; 0x07
    1ff8:	98 85       	ldd	r25, Y+8	; 0x08
    1ffa:	82 1b       	sub	r24, r18
    1ffc:	93 0b       	sbc	r25, r19
    1ffe:	98 87       	std	Y+8, r25	; 0x08
    2000:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[3] = (u8)(u16_result /(u16)10) ;
    2002:	8f 81       	ldd	r24, Y+7	; 0x07
    2004:	98 85       	ldd	r25, Y+8	; 0x08
    2006:	2a e0       	ldi	r18, 0x0A	; 10
    2008:	30 e0       	ldi	r19, 0x00	; 0
    200a:	b9 01       	movw	r22, r18
    200c:	0e 94 f2 29 	call	0x53e4	; 0x53e4 <__udivmodhi4>
    2010:	cb 01       	movw	r24, r22
    2012:	8d 83       	std	Y+5, r24	; 0x05
		u16_result = u16_result -((u16)ResArr[3] * (u16)10);
    2014:	8d 81       	ldd	r24, Y+5	; 0x05
    2016:	88 2f       	mov	r24, r24
    2018:	90 e0       	ldi	r25, 0x00	; 0
    201a:	9c 01       	movw	r18, r24
    201c:	22 0f       	add	r18, r18
    201e:	33 1f       	adc	r19, r19
    2020:	c9 01       	movw	r24, r18
    2022:	88 0f       	add	r24, r24
    2024:	99 1f       	adc	r25, r25
    2026:	88 0f       	add	r24, r24
    2028:	99 1f       	adc	r25, r25
    202a:	28 0f       	add	r18, r24
    202c:	39 1f       	adc	r19, r25
    202e:	8f 81       	ldd	r24, Y+7	; 0x07
    2030:	98 85       	ldd	r25, Y+8	; 0x08
    2032:	82 1b       	sub	r24, r18
    2034:	93 0b       	sbc	r25, r19
    2036:	98 87       	std	Y+8, r25	; 0x08
    2038:	8f 83       	std	Y+7, r24	; 0x07

		ResArr[4] = (u8)u16_result ;
    203a:	8f 81       	ldd	r24, Y+7	; 0x07
    203c:	8e 83       	std	Y+6, r24	; 0x06



		/*converting INT to CHAR*/
		for (index =0 ;index < 5;index++)
    203e:	19 82       	std	Y+1, r1	; 0x01
    2040:	17 c0       	rjmp	.+46     	; 0x2070 <LCD_SepResult+0x134>
			{
				ResArr[index] += '0';
    2042:	89 81       	ldd	r24, Y+1	; 0x01
    2044:	48 2f       	mov	r20, r24
    2046:	50 e0       	ldi	r21, 0x00	; 0
    2048:	89 81       	ldd	r24, Y+1	; 0x01
    204a:	28 2f       	mov	r18, r24
    204c:	30 e0       	ldi	r19, 0x00	; 0
    204e:	ce 01       	movw	r24, r28
    2050:	02 96       	adiw	r24, 0x02	; 2
    2052:	fc 01       	movw	r30, r24
    2054:	e2 0f       	add	r30, r18
    2056:	f3 1f       	adc	r31, r19
    2058:	80 81       	ld	r24, Z
    205a:	28 2f       	mov	r18, r24
    205c:	20 5d       	subi	r18, 0xD0	; 208
    205e:	ce 01       	movw	r24, r28
    2060:	02 96       	adiw	r24, 0x02	; 2
    2062:	fc 01       	movw	r30, r24
    2064:	e4 0f       	add	r30, r20
    2066:	f5 1f       	adc	r31, r21
    2068:	20 83       	st	Z, r18
		ResArr[4] = (u8)u16_result ;



		/*converting INT to CHAR*/
		for (index =0 ;index < 5;index++)
    206a:	89 81       	ldd	r24, Y+1	; 0x01
    206c:	8f 5f       	subi	r24, 0xFF	; 255
    206e:	89 83       	std	Y+1, r24	; 0x01
    2070:	89 81       	ldd	r24, Y+1	; 0x01
    2072:	85 30       	cpi	r24, 0x05	; 5
    2074:	30 f3       	brcs	.-52     	; 0x2042 <LCD_SepResult+0x106>
			{
				ResArr[index] += '0';
			}

		for (index =0;index < 5;index++)
    2076:	19 82       	std	Y+1, r1	; 0x01
    2078:	15 c0       	rjmp	.+42     	; 0x20a4 <LCD_SepResult+0x168>
		ResSepArr[index] = ResArr[index] ;
    207a:	89 81       	ldd	r24, Y+1	; 0x01
    207c:	28 2f       	mov	r18, r24
    207e:	30 e0       	ldi	r19, 0x00	; 0
    2080:	89 85       	ldd	r24, Y+9	; 0x09
    2082:	9a 85       	ldd	r25, Y+10	; 0x0a
    2084:	dc 01       	movw	r26, r24
    2086:	a2 0f       	add	r26, r18
    2088:	b3 1f       	adc	r27, r19
    208a:	89 81       	ldd	r24, Y+1	; 0x01
    208c:	28 2f       	mov	r18, r24
    208e:	30 e0       	ldi	r19, 0x00	; 0
    2090:	ce 01       	movw	r24, r28
    2092:	02 96       	adiw	r24, 0x02	; 2
    2094:	fc 01       	movw	r30, r24
    2096:	e2 0f       	add	r30, r18
    2098:	f3 1f       	adc	r31, r19
    209a:	80 81       	ld	r24, Z
    209c:	8c 93       	st	X, r24
		for (index =0 ;index < 5;index++)
			{
				ResArr[index] += '0';
			}

		for (index =0;index < 5;index++)
    209e:	89 81       	ldd	r24, Y+1	; 0x01
    20a0:	8f 5f       	subi	r24, 0xFF	; 255
    20a2:	89 83       	std	Y+1, r24	; 0x01
    20a4:	89 81       	ldd	r24, Y+1	; 0x01
    20a6:	85 30       	cpi	r24, 0x05	; 5
    20a8:	40 f3       	brcs	.-48     	; 0x207a <LCD_SepResult+0x13e>
		ResSepArr[index] = ResArr[index] ;


}
    20aa:	2a 96       	adiw	r28, 0x0a	; 10
    20ac:	0f b6       	in	r0, 0x3f	; 63
    20ae:	f8 94       	cli
    20b0:	de bf       	out	0x3e, r29	; 62
    20b2:	0f be       	out	0x3f, r0	; 63
    20b4:	cd bf       	out	0x3d, r28	; 61
    20b6:	cf 91       	pop	r28
    20b8:	df 91       	pop	r29
    20ba:	08 95       	ret

000020bc <UART_INIT>:
#include"UART_REG.h"
#include"UART_INT.h"
#include"UART_CONFG.h"

void UART_INIT(void)
{
    20bc:	df 93       	push	r29
    20be:	cf 93       	push	r28
    20c0:	cd b7       	in	r28, 0x3d	; 61
    20c2:	de b7       	in	r29, 0x3e	; 62

	/*UART Initialization*/

	//PD0 -- > RXD ,, PD1 -- > TXD >>>> UART will overwrite the GPIO functions for the PINS
		/*SETTING BUAD RATE --> 9600 at Fosc = 8MHz*/
		UBRRH_register = (u8)(UBRR >> 8) ;
    20c4:	e0 e4       	ldi	r30, 0x40	; 64
    20c6:	f0 e0       	ldi	r31, 0x00	; 0
    20c8:	10 82       	st	Z, r1
		UBRRL_register = (u8)UBRR ;
    20ca:	e9 e2       	ldi	r30, 0x29	; 41
    20cc:	f0 e0       	ldi	r31, 0x00	; 0
    20ce:	83 e3       	ldi	r24, 0x33	; 51
    20d0:	80 83       	st	Z, r24

		//UCSRC_register = 0b10000110;//CS --> 8bits,Async
		UCSRC_register = (u8)1 << 7 |UART_MODE_SELECT << 6|UART_PARITY_MODE << 4|UART_STOP_BIT_MODE <<3 |UART_CHAR_SIZE << 1|(u8)0;
    20d2:	e0 e4       	ldi	r30, 0x40	; 64
    20d4:	f0 e0       	ldi	r31, 0x00	; 0
    20d6:	86 e8       	ldi	r24, 0x86	; 134
    20d8:	80 83       	st	Z, r24
		//UCSRB_register = 0b00011000;//No Interrupt ,RX & TX is enabled
		UCSRB_register = UART_RX_COMPLETE_INT_STATE << 7|UART_TX_COMPLETE_INT_STATE << 6|UART_UDR_EMPTY_INT_STATE << 5|UART_RX_STATE << 4|UART_TX_STATE << 3|(u8)0;
    20da:	ea e2       	ldi	r30, 0x2A	; 42
    20dc:	f0 e0       	ldi	r31, 0x00	; 0
    20de:	88 e1       	ldi	r24, 0x18	; 24
    20e0:	80 83       	st	Z, r24


}
    20e2:	cf 91       	pop	r28
    20e4:	df 91       	pop	r29
    20e6:	08 95       	ret

000020e8 <UART_SEND_CHAR_POLLING>:

void UART_SEND_CHAR_POLLING(u8 u8_SentData)
{
    20e8:	df 93       	push	r29
    20ea:	cf 93       	push	r28
    20ec:	0f 92       	push	r0
    20ee:	cd b7       	in	r28, 0x3d	; 61
    20f0:	de b7       	in	r29, 0x3e	; 62
    20f2:	89 83       	std	Y+1, r24	; 0x01

	while(GET_BIT(UCSRA_register,UDRE) == 0 );//wait until TX Buffer is empty
    20f4:	eb e2       	ldi	r30, 0x2B	; 43
    20f6:	f0 e0       	ldi	r31, 0x00	; 0
    20f8:	80 81       	ld	r24, Z
    20fa:	82 95       	swap	r24
    20fc:	86 95       	lsr	r24
    20fe:	87 70       	andi	r24, 0x07	; 7
    2100:	88 2f       	mov	r24, r24
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	81 70       	andi	r24, 0x01	; 1
    2106:	90 70       	andi	r25, 0x00	; 0
    2108:	00 97       	sbiw	r24, 0x00	; 0
    210a:	a1 f3       	breq	.-24     	; 0x20f4 <UART_SEND_CHAR_POLLING+0xc>
	UDR_register = u8_SentData ;
    210c:	ec e2       	ldi	r30, 0x2C	; 44
    210e:	f0 e0       	ldi	r31, 0x00	; 0
    2110:	89 81       	ldd	r24, Y+1	; 0x01
    2112:	80 83       	st	Z, r24

}
    2114:	0f 90       	pop	r0
    2116:	cf 91       	pop	r28
    2118:	df 91       	pop	r29
    211a:	08 95       	ret

0000211c <UART_RECEIVE_CHAR_POLLING>:

void UART_RECEIVE_CHAR_POLLING(u8 * u8_ReceivedData)
{
    211c:	df 93       	push	r29
    211e:	cf 93       	push	r28
    2120:	00 d0       	rcall	.+0      	; 0x2122 <UART_RECEIVE_CHAR_POLLING+0x6>
    2122:	cd b7       	in	r28, 0x3d	; 61
    2124:	de b7       	in	r29, 0x3e	; 62
    2126:	9a 83       	std	Y+2, r25	; 0x02
    2128:	89 83       	std	Y+1, r24	; 0x01
	while(GET_BIT(UCSRA_register,RXC) == 0);//wait until RX buffer has unread data and then read it
    212a:	eb e2       	ldi	r30, 0x2B	; 43
    212c:	f0 e0       	ldi	r31, 0x00	; 0
    212e:	80 81       	ld	r24, Z
    2130:	88 23       	and	r24, r24
    2132:	dc f7       	brge	.-10     	; 0x212a <UART_RECEIVE_CHAR_POLLING+0xe>
	*(u8_ReceivedData) = UDR_register;
    2134:	ec e2       	ldi	r30, 0x2C	; 44
    2136:	f0 e0       	ldi	r31, 0x00	; 0
    2138:	80 81       	ld	r24, Z
    213a:	e9 81       	ldd	r30, Y+1	; 0x01
    213c:	fa 81       	ldd	r31, Y+2	; 0x02
    213e:	80 83       	st	Z, r24


}
    2140:	0f 90       	pop	r0
    2142:	0f 90       	pop	r0
    2144:	cf 91       	pop	r28
    2146:	df 91       	pop	r29
    2148:	08 95       	ret

0000214a <main>:
u8 Saved_PASS[4] = {'1','2','3','4'};
u8 GET_PASS_CHECK(void);
void READ_DISPLAY_TEMP(void);
/*Not Working Yet*/
void main (void)
{
    214a:	0f 93       	push	r16
    214c:	1f 93       	push	r17
    214e:	df 93       	push	r29
    2150:	cf 93       	push	r28
    2152:	cd b7       	in	r28, 0x3d	; 61
    2154:	de b7       	in	r29, 0x3e	; 62
    2156:	c9 5f       	subi	r28, 0xF9	; 249
    2158:	d2 40       	sbci	r29, 0x02	; 2
    215a:	0f b6       	in	r0, 0x3f	; 63
    215c:	f8 94       	cli
    215e:	de bf       	out	0x3e, r29	; 62
    2160:	0f be       	out	0x3f, r0	; 63
    2162:	cd bf       	out	0x3d, r28	; 61
	u8 ReceivedChar = 0;
    2164:	fe 01       	movw	r30, r28
    2166:	ed 50       	subi	r30, 0x0D	; 13
    2168:	ff 4f       	sbci	r31, 0xFF	; 255
    216a:	10 82       	st	Z, r1



	u8 KeyPressed = '@';
    216c:	fe 01       	movw	r30, r28
    216e:	ee 50       	subi	r30, 0x0E	; 14
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	80 e4       	ldi	r24, 0x40	; 64
    2174:	80 83       	st	Z, r24


	u8 PASS_flag = 0;
    2176:	fe 01       	movw	r30, r28
    2178:	ef 50       	subi	r30, 0x0F	; 15
    217a:	ff 4f       	sbci	r31, 0xFF	; 255
    217c:	10 82       	st	Z, r1
	u8 WRONG_PASS_flag = 0;
    217e:	fe 01       	movw	r30, r28
    2180:	e0 51       	subi	r30, 0x10	; 16
    2182:	ff 4f       	sbci	r31, 0xFF	; 255
    2184:	10 82       	st	Z, r1
	u8 Repeat_MENU_flag = 0;
    2186:	fe 01       	movw	r30, r28
    2188:	e1 51       	subi	r30, 0x11	; 17
    218a:	ff 4f       	sbci	r31, 0xFF	; 255
    218c:	10 82       	st	Z, r1
	u8 RESET_PIN = 1 ;
    218e:	fe 01       	movw	r30, r28
    2190:	ec 50       	subi	r30, 0x0C	; 12
    2192:	ff 4f       	sbci	r31, 0xFF	; 255
    2194:	81 e0       	ldi	r24, 0x01	; 1
    2196:	80 83       	st	Z, r24


	u8 TEMP_BUTTON_MSG[15]="4 to SHOW TEMP";
    2198:	ce 01       	movw	r24, r28
    219a:	8b 50       	subi	r24, 0x0B	; 11
    219c:	9f 4f       	sbci	r25, 0xFF	; 255
    219e:	c3 59       	subi	r28, 0x93	; 147
    21a0:	dd 4f       	sbci	r29, 0xFD	; 253
    21a2:	99 83       	std	Y+1, r25	; 0x01
    21a4:	88 83       	st	Y, r24
    21a6:	cd 56       	subi	r28, 0x6D	; 109
    21a8:	d2 40       	sbci	r29, 0x02	; 2
    21aa:	80 e6       	ldi	r24, 0x60	; 96
    21ac:	90 e0       	ldi	r25, 0x00	; 0
    21ae:	c1 59       	subi	r28, 0x91	; 145
    21b0:	dd 4f       	sbci	r29, 0xFD	; 253
    21b2:	99 83       	std	Y+1, r25	; 0x01
    21b4:	88 83       	st	Y, r24
    21b6:	cf 56       	subi	r28, 0x6F	; 111
    21b8:	d2 40       	sbci	r29, 0x02	; 2
    21ba:	9f e0       	ldi	r25, 0x0F	; 15
    21bc:	cf 58       	subi	r28, 0x8F	; 143
    21be:	dd 4f       	sbci	r29, 0xFD	; 253
    21c0:	98 83       	st	Y, r25
    21c2:	c1 57       	subi	r28, 0x71	; 113
    21c4:	d2 40       	sbci	r29, 0x02	; 2
    21c6:	c1 59       	subi	r28, 0x91	; 145
    21c8:	dd 4f       	sbci	r29, 0xFD	; 253
    21ca:	e8 81       	ld	r30, Y
    21cc:	f9 81       	ldd	r31, Y+1	; 0x01
    21ce:	cf 56       	subi	r28, 0x6F	; 111
    21d0:	d2 40       	sbci	r29, 0x02	; 2
    21d2:	00 80       	ld	r0, Z
    21d4:	c1 59       	subi	r28, 0x91	; 145
    21d6:	dd 4f       	sbci	r29, 0xFD	; 253
    21d8:	88 81       	ld	r24, Y
    21da:	99 81       	ldd	r25, Y+1	; 0x01
    21dc:	cf 56       	subi	r28, 0x6F	; 111
    21de:	d2 40       	sbci	r29, 0x02	; 2
    21e0:	01 96       	adiw	r24, 0x01	; 1
    21e2:	c1 59       	subi	r28, 0x91	; 145
    21e4:	dd 4f       	sbci	r29, 0xFD	; 253
    21e6:	99 83       	std	Y+1, r25	; 0x01
    21e8:	88 83       	st	Y, r24
    21ea:	cf 56       	subi	r28, 0x6F	; 111
    21ec:	d2 40       	sbci	r29, 0x02	; 2
    21ee:	c3 59       	subi	r28, 0x93	; 147
    21f0:	dd 4f       	sbci	r29, 0xFD	; 253
    21f2:	e8 81       	ld	r30, Y
    21f4:	f9 81       	ldd	r31, Y+1	; 0x01
    21f6:	cd 56       	subi	r28, 0x6D	; 109
    21f8:	d2 40       	sbci	r29, 0x02	; 2
    21fa:	00 82       	st	Z, r0
    21fc:	c3 59       	subi	r28, 0x93	; 147
    21fe:	dd 4f       	sbci	r29, 0xFD	; 253
    2200:	88 81       	ld	r24, Y
    2202:	99 81       	ldd	r25, Y+1	; 0x01
    2204:	cd 56       	subi	r28, 0x6D	; 109
    2206:	d2 40       	sbci	r29, 0x02	; 2
    2208:	01 96       	adiw	r24, 0x01	; 1
    220a:	c3 59       	subi	r28, 0x93	; 147
    220c:	dd 4f       	sbci	r29, 0xFD	; 253
    220e:	99 83       	std	Y+1, r25	; 0x01
    2210:	88 83       	st	Y, r24
    2212:	cd 56       	subi	r28, 0x6D	; 109
    2214:	d2 40       	sbci	r29, 0x02	; 2
    2216:	cf 58       	subi	r28, 0x8F	; 143
    2218:	dd 4f       	sbci	r29, 0xFD	; 253
    221a:	98 81       	ld	r25, Y
    221c:	c1 57       	subi	r28, 0x71	; 113
    221e:	d2 40       	sbci	r29, 0x02	; 2
    2220:	91 50       	subi	r25, 0x01	; 1
    2222:	cf 58       	subi	r28, 0x8F	; 143
    2224:	dd 4f       	sbci	r29, 0xFD	; 253
    2226:	98 83       	st	Y, r25
    2228:	c1 57       	subi	r28, 0x71	; 113
    222a:	d2 40       	sbci	r29, 0x02	; 2
    222c:	cf 58       	subi	r28, 0x8F	; 143
    222e:	dd 4f       	sbci	r29, 0xFD	; 253
    2230:	e8 81       	ld	r30, Y
    2232:	c1 57       	subi	r28, 0x71	; 113
    2234:	d2 40       	sbci	r29, 0x02	; 2
    2236:	ee 23       	and	r30, r30
    2238:	31 f6       	brne	.-116    	; 0x21c6 <main+0x7c>
	u8 C_PASS_MSG[13]="CORRECT PASS";
    223a:	ce 01       	movw	r24, r28
    223c:	8c 5f       	subi	r24, 0xFC	; 252
    223e:	9e 4f       	sbci	r25, 0xFE	; 254
    2240:	ce 58       	subi	r28, 0x8E	; 142
    2242:	dd 4f       	sbci	r29, 0xFD	; 253
    2244:	99 83       	std	Y+1, r25	; 0x01
    2246:	88 83       	st	Y, r24
    2248:	c2 57       	subi	r28, 0x72	; 114
    224a:	d2 40       	sbci	r29, 0x02	; 2
    224c:	8f e6       	ldi	r24, 0x6F	; 111
    224e:	90 e0       	ldi	r25, 0x00	; 0
    2250:	cc 58       	subi	r28, 0x8C	; 140
    2252:	dd 4f       	sbci	r29, 0xFD	; 253
    2254:	99 83       	std	Y+1, r25	; 0x01
    2256:	88 83       	st	Y, r24
    2258:	c4 57       	subi	r28, 0x74	; 116
    225a:	d2 40       	sbci	r29, 0x02	; 2
    225c:	9d e0       	ldi	r25, 0x0D	; 13
    225e:	ca 58       	subi	r28, 0x8A	; 138
    2260:	dd 4f       	sbci	r29, 0xFD	; 253
    2262:	98 83       	st	Y, r25
    2264:	c6 57       	subi	r28, 0x76	; 118
    2266:	d2 40       	sbci	r29, 0x02	; 2
    2268:	cc 58       	subi	r28, 0x8C	; 140
    226a:	dd 4f       	sbci	r29, 0xFD	; 253
    226c:	e8 81       	ld	r30, Y
    226e:	f9 81       	ldd	r31, Y+1	; 0x01
    2270:	c4 57       	subi	r28, 0x74	; 116
    2272:	d2 40       	sbci	r29, 0x02	; 2
    2274:	00 80       	ld	r0, Z
    2276:	cc 58       	subi	r28, 0x8C	; 140
    2278:	dd 4f       	sbci	r29, 0xFD	; 253
    227a:	88 81       	ld	r24, Y
    227c:	99 81       	ldd	r25, Y+1	; 0x01
    227e:	c4 57       	subi	r28, 0x74	; 116
    2280:	d2 40       	sbci	r29, 0x02	; 2
    2282:	01 96       	adiw	r24, 0x01	; 1
    2284:	cc 58       	subi	r28, 0x8C	; 140
    2286:	dd 4f       	sbci	r29, 0xFD	; 253
    2288:	99 83       	std	Y+1, r25	; 0x01
    228a:	88 83       	st	Y, r24
    228c:	c4 57       	subi	r28, 0x74	; 116
    228e:	d2 40       	sbci	r29, 0x02	; 2
    2290:	ce 58       	subi	r28, 0x8E	; 142
    2292:	dd 4f       	sbci	r29, 0xFD	; 253
    2294:	e8 81       	ld	r30, Y
    2296:	f9 81       	ldd	r31, Y+1	; 0x01
    2298:	c2 57       	subi	r28, 0x72	; 114
    229a:	d2 40       	sbci	r29, 0x02	; 2
    229c:	00 82       	st	Z, r0
    229e:	ce 58       	subi	r28, 0x8E	; 142
    22a0:	dd 4f       	sbci	r29, 0xFD	; 253
    22a2:	88 81       	ld	r24, Y
    22a4:	99 81       	ldd	r25, Y+1	; 0x01
    22a6:	c2 57       	subi	r28, 0x72	; 114
    22a8:	d2 40       	sbci	r29, 0x02	; 2
    22aa:	01 96       	adiw	r24, 0x01	; 1
    22ac:	ce 58       	subi	r28, 0x8E	; 142
    22ae:	dd 4f       	sbci	r29, 0xFD	; 253
    22b0:	99 83       	std	Y+1, r25	; 0x01
    22b2:	88 83       	st	Y, r24
    22b4:	c2 57       	subi	r28, 0x72	; 114
    22b6:	d2 40       	sbci	r29, 0x02	; 2
    22b8:	ca 58       	subi	r28, 0x8A	; 138
    22ba:	dd 4f       	sbci	r29, 0xFD	; 253
    22bc:	98 81       	ld	r25, Y
    22be:	c6 57       	subi	r28, 0x76	; 118
    22c0:	d2 40       	sbci	r29, 0x02	; 2
    22c2:	91 50       	subi	r25, 0x01	; 1
    22c4:	ca 58       	subi	r28, 0x8A	; 138
    22c6:	dd 4f       	sbci	r29, 0xFD	; 253
    22c8:	98 83       	st	Y, r25
    22ca:	c6 57       	subi	r28, 0x76	; 118
    22cc:	d2 40       	sbci	r29, 0x02	; 2
    22ce:	ca 58       	subi	r28, 0x8A	; 138
    22d0:	dd 4f       	sbci	r29, 0xFD	; 253
    22d2:	e8 81       	ld	r30, Y
    22d4:	c6 57       	subi	r28, 0x76	; 118
    22d6:	d2 40       	sbci	r29, 0x02	; 2
    22d8:	ee 23       	and	r30, r30
    22da:	31 f6       	brne	.-116    	; 0x2268 <main+0x11e>
	u8 W_PASS_MSG[11]="WRONG PASS";
    22dc:	ce 01       	movw	r24, r28
    22de:	8f 5e       	subi	r24, 0xEF	; 239
    22e0:	9e 4f       	sbci	r25, 0xFE	; 254
    22e2:	c9 58       	subi	r28, 0x89	; 137
    22e4:	dd 4f       	sbci	r29, 0xFD	; 253
    22e6:	99 83       	std	Y+1, r25	; 0x01
    22e8:	88 83       	st	Y, r24
    22ea:	c7 57       	subi	r28, 0x77	; 119
    22ec:	d2 40       	sbci	r29, 0x02	; 2
    22ee:	8c e7       	ldi	r24, 0x7C	; 124
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	c7 58       	subi	r28, 0x87	; 135
    22f4:	dd 4f       	sbci	r29, 0xFD	; 253
    22f6:	99 83       	std	Y+1, r25	; 0x01
    22f8:	88 83       	st	Y, r24
    22fa:	c9 57       	subi	r28, 0x79	; 121
    22fc:	d2 40       	sbci	r29, 0x02	; 2
    22fe:	9b e0       	ldi	r25, 0x0B	; 11
    2300:	c5 58       	subi	r28, 0x85	; 133
    2302:	dd 4f       	sbci	r29, 0xFD	; 253
    2304:	98 83       	st	Y, r25
    2306:	cb 57       	subi	r28, 0x7B	; 123
    2308:	d2 40       	sbci	r29, 0x02	; 2
    230a:	c7 58       	subi	r28, 0x87	; 135
    230c:	dd 4f       	sbci	r29, 0xFD	; 253
    230e:	e8 81       	ld	r30, Y
    2310:	f9 81       	ldd	r31, Y+1	; 0x01
    2312:	c9 57       	subi	r28, 0x79	; 121
    2314:	d2 40       	sbci	r29, 0x02	; 2
    2316:	00 80       	ld	r0, Z
    2318:	c7 58       	subi	r28, 0x87	; 135
    231a:	dd 4f       	sbci	r29, 0xFD	; 253
    231c:	88 81       	ld	r24, Y
    231e:	99 81       	ldd	r25, Y+1	; 0x01
    2320:	c9 57       	subi	r28, 0x79	; 121
    2322:	d2 40       	sbci	r29, 0x02	; 2
    2324:	01 96       	adiw	r24, 0x01	; 1
    2326:	c7 58       	subi	r28, 0x87	; 135
    2328:	dd 4f       	sbci	r29, 0xFD	; 253
    232a:	99 83       	std	Y+1, r25	; 0x01
    232c:	88 83       	st	Y, r24
    232e:	c9 57       	subi	r28, 0x79	; 121
    2330:	d2 40       	sbci	r29, 0x02	; 2
    2332:	c9 58       	subi	r28, 0x89	; 137
    2334:	dd 4f       	sbci	r29, 0xFD	; 253
    2336:	e8 81       	ld	r30, Y
    2338:	f9 81       	ldd	r31, Y+1	; 0x01
    233a:	c7 57       	subi	r28, 0x77	; 119
    233c:	d2 40       	sbci	r29, 0x02	; 2
    233e:	00 82       	st	Z, r0
    2340:	c9 58       	subi	r28, 0x89	; 137
    2342:	dd 4f       	sbci	r29, 0xFD	; 253
    2344:	88 81       	ld	r24, Y
    2346:	99 81       	ldd	r25, Y+1	; 0x01
    2348:	c7 57       	subi	r28, 0x77	; 119
    234a:	d2 40       	sbci	r29, 0x02	; 2
    234c:	01 96       	adiw	r24, 0x01	; 1
    234e:	c9 58       	subi	r28, 0x89	; 137
    2350:	dd 4f       	sbci	r29, 0xFD	; 253
    2352:	99 83       	std	Y+1, r25	; 0x01
    2354:	88 83       	st	Y, r24
    2356:	c7 57       	subi	r28, 0x77	; 119
    2358:	d2 40       	sbci	r29, 0x02	; 2
    235a:	c5 58       	subi	r28, 0x85	; 133
    235c:	dd 4f       	sbci	r29, 0xFD	; 253
    235e:	98 81       	ld	r25, Y
    2360:	cb 57       	subi	r28, 0x7B	; 123
    2362:	d2 40       	sbci	r29, 0x02	; 2
    2364:	91 50       	subi	r25, 0x01	; 1
    2366:	c5 58       	subi	r28, 0x85	; 133
    2368:	dd 4f       	sbci	r29, 0xFD	; 253
    236a:	98 83       	st	Y, r25
    236c:	cb 57       	subi	r28, 0x7B	; 123
    236e:	d2 40       	sbci	r29, 0x02	; 2
    2370:	c5 58       	subi	r28, 0x85	; 133
    2372:	dd 4f       	sbci	r29, 0xFD	; 253
    2374:	e8 81       	ld	r30, Y
    2376:	cb 57       	subi	r28, 0x7B	; 123
    2378:	d2 40       	sbci	r29, 0x02	; 2
    237a:	ee 23       	and	r30, r30
    237c:	31 f6       	brne	.-116    	; 0x230a <main+0x1c0>
	u8 TRY_MSG[11]="TRY AGAIN";
    237e:	ce 01       	movw	r24, r28
    2380:	84 5e       	subi	r24, 0xE4	; 228
    2382:	9e 4f       	sbci	r25, 0xFE	; 254
    2384:	c4 58       	subi	r28, 0x84	; 132
    2386:	dd 4f       	sbci	r29, 0xFD	; 253
    2388:	99 83       	std	Y+1, r25	; 0x01
    238a:	88 83       	st	Y, r24
    238c:	cc 57       	subi	r28, 0x7C	; 124
    238e:	d2 40       	sbci	r29, 0x02	; 2
    2390:	c4 58       	subi	r28, 0x84	; 132
    2392:	dd 4f       	sbci	r29, 0xFD	; 253
    2394:	e8 81       	ld	r30, Y
    2396:	f9 81       	ldd	r31, Y+1	; 0x01
    2398:	cc 57       	subi	r28, 0x7C	; 124
    239a:	d2 40       	sbci	r29, 0x02	; 2
    239c:	c2 58       	subi	r28, 0x82	; 130
    239e:	dd 4f       	sbci	r29, 0xFD	; 253
    23a0:	f9 83       	std	Y+1, r31	; 0x01
    23a2:	e8 83       	st	Y, r30
    23a4:	ce 57       	subi	r28, 0x7E	; 126
    23a6:	d2 40       	sbci	r29, 0x02	; 2
    23a8:	87 e8       	ldi	r24, 0x87	; 135
    23aa:	90 e0       	ldi	r25, 0x00	; 0
    23ac:	c0 58       	subi	r28, 0x80	; 128
    23ae:	dd 4f       	sbci	r29, 0xFD	; 253
    23b0:	99 83       	std	Y+1, r25	; 0x01
    23b2:	88 83       	st	Y, r24
    23b4:	c0 58       	subi	r28, 0x80	; 128
    23b6:	d2 40       	sbci	r29, 0x02	; 2
    23b8:	9a e0       	ldi	r25, 0x0A	; 10
    23ba:	ce 57       	subi	r28, 0x7E	; 126
    23bc:	dd 4f       	sbci	r29, 0xFD	; 253
    23be:	98 83       	st	Y, r25
    23c0:	c2 58       	subi	r28, 0x82	; 130
    23c2:	d2 40       	sbci	r29, 0x02	; 2
    23c4:	c0 58       	subi	r28, 0x80	; 128
    23c6:	dd 4f       	sbci	r29, 0xFD	; 253
    23c8:	e8 81       	ld	r30, Y
    23ca:	f9 81       	ldd	r31, Y+1	; 0x01
    23cc:	c0 58       	subi	r28, 0x80	; 128
    23ce:	d2 40       	sbci	r29, 0x02	; 2
    23d0:	00 80       	ld	r0, Z
    23d2:	c0 58       	subi	r28, 0x80	; 128
    23d4:	dd 4f       	sbci	r29, 0xFD	; 253
    23d6:	88 81       	ld	r24, Y
    23d8:	99 81       	ldd	r25, Y+1	; 0x01
    23da:	c0 58       	subi	r28, 0x80	; 128
    23dc:	d2 40       	sbci	r29, 0x02	; 2
    23de:	01 96       	adiw	r24, 0x01	; 1
    23e0:	c0 58       	subi	r28, 0x80	; 128
    23e2:	dd 4f       	sbci	r29, 0xFD	; 253
    23e4:	99 83       	std	Y+1, r25	; 0x01
    23e6:	88 83       	st	Y, r24
    23e8:	c0 58       	subi	r28, 0x80	; 128
    23ea:	d2 40       	sbci	r29, 0x02	; 2
    23ec:	c2 58       	subi	r28, 0x82	; 130
    23ee:	dd 4f       	sbci	r29, 0xFD	; 253
    23f0:	e8 81       	ld	r30, Y
    23f2:	f9 81       	ldd	r31, Y+1	; 0x01
    23f4:	ce 57       	subi	r28, 0x7E	; 126
    23f6:	d2 40       	sbci	r29, 0x02	; 2
    23f8:	00 82       	st	Z, r0
    23fa:	c2 58       	subi	r28, 0x82	; 130
    23fc:	dd 4f       	sbci	r29, 0xFD	; 253
    23fe:	88 81       	ld	r24, Y
    2400:	99 81       	ldd	r25, Y+1	; 0x01
    2402:	ce 57       	subi	r28, 0x7E	; 126
    2404:	d2 40       	sbci	r29, 0x02	; 2
    2406:	01 96       	adiw	r24, 0x01	; 1
    2408:	c2 58       	subi	r28, 0x82	; 130
    240a:	dd 4f       	sbci	r29, 0xFD	; 253
    240c:	99 83       	std	Y+1, r25	; 0x01
    240e:	88 83       	st	Y, r24
    2410:	ce 57       	subi	r28, 0x7E	; 126
    2412:	d2 40       	sbci	r29, 0x02	; 2
    2414:	ce 57       	subi	r28, 0x7E	; 126
    2416:	dd 4f       	sbci	r29, 0xFD	; 253
    2418:	98 81       	ld	r25, Y
    241a:	c2 58       	subi	r28, 0x82	; 130
    241c:	d2 40       	sbci	r29, 0x02	; 2
    241e:	91 50       	subi	r25, 0x01	; 1
    2420:	ce 57       	subi	r28, 0x7E	; 126
    2422:	dd 4f       	sbci	r29, 0xFD	; 253
    2424:	98 83       	st	Y, r25
    2426:	c2 58       	subi	r28, 0x82	; 130
    2428:	d2 40       	sbci	r29, 0x02	; 2
    242a:	ce 57       	subi	r28, 0x7E	; 126
    242c:	dd 4f       	sbci	r29, 0xFD	; 253
    242e:	e8 81       	ld	r30, Y
    2430:	c2 58       	subi	r28, 0x82	; 130
    2432:	d2 40       	sbci	r29, 0x02	; 2
    2434:	ee 23       	and	r30, r30
    2436:	31 f6       	brne	.-116    	; 0x23c4 <main+0x27a>
    2438:	c4 58       	subi	r28, 0x84	; 132
    243a:	dd 4f       	sbci	r29, 0xFD	; 253
    243c:	e8 81       	ld	r30, Y
    243e:	f9 81       	ldd	r31, Y+1	; 0x01
    2440:	cc 57       	subi	r28, 0x7C	; 124
    2442:	d2 40       	sbci	r29, 0x02	; 2
    2444:	12 86       	std	Z+10, r1	; 0x0a
	u8 WRONG_ENTRY_MSG[12]= "WRONG ENTRY";
    2446:	ce 01       	movw	r24, r28
    2448:	89 5d       	subi	r24, 0xD9	; 217
    244a:	9e 4f       	sbci	r25, 0xFE	; 254
    244c:	cd 57       	subi	r28, 0x7D	; 125
    244e:	dd 4f       	sbci	r29, 0xFD	; 253
    2450:	99 83       	std	Y+1, r25	; 0x01
    2452:	88 83       	st	Y, r24
    2454:	c3 58       	subi	r28, 0x83	; 131
    2456:	d2 40       	sbci	r29, 0x02	; 2
    2458:	82 e9       	ldi	r24, 0x92	; 146
    245a:	90 e0       	ldi	r25, 0x00	; 0
    245c:	cb 57       	subi	r28, 0x7B	; 123
    245e:	dd 4f       	sbci	r29, 0xFD	; 253
    2460:	99 83       	std	Y+1, r25	; 0x01
    2462:	88 83       	st	Y, r24
    2464:	c5 58       	subi	r28, 0x85	; 133
    2466:	d2 40       	sbci	r29, 0x02	; 2
    2468:	9c e0       	ldi	r25, 0x0C	; 12
    246a:	c9 57       	subi	r28, 0x79	; 121
    246c:	dd 4f       	sbci	r29, 0xFD	; 253
    246e:	98 83       	st	Y, r25
    2470:	c7 58       	subi	r28, 0x87	; 135
    2472:	d2 40       	sbci	r29, 0x02	; 2
    2474:	cb 57       	subi	r28, 0x7B	; 123
    2476:	dd 4f       	sbci	r29, 0xFD	; 253
    2478:	e8 81       	ld	r30, Y
    247a:	f9 81       	ldd	r31, Y+1	; 0x01
    247c:	c5 58       	subi	r28, 0x85	; 133
    247e:	d2 40       	sbci	r29, 0x02	; 2
    2480:	00 80       	ld	r0, Z
    2482:	cb 57       	subi	r28, 0x7B	; 123
    2484:	dd 4f       	sbci	r29, 0xFD	; 253
    2486:	88 81       	ld	r24, Y
    2488:	99 81       	ldd	r25, Y+1	; 0x01
    248a:	c5 58       	subi	r28, 0x85	; 133
    248c:	d2 40       	sbci	r29, 0x02	; 2
    248e:	01 96       	adiw	r24, 0x01	; 1
    2490:	cb 57       	subi	r28, 0x7B	; 123
    2492:	dd 4f       	sbci	r29, 0xFD	; 253
    2494:	99 83       	std	Y+1, r25	; 0x01
    2496:	88 83       	st	Y, r24
    2498:	c5 58       	subi	r28, 0x85	; 133
    249a:	d2 40       	sbci	r29, 0x02	; 2
    249c:	cd 57       	subi	r28, 0x7D	; 125
    249e:	dd 4f       	sbci	r29, 0xFD	; 253
    24a0:	e8 81       	ld	r30, Y
    24a2:	f9 81       	ldd	r31, Y+1	; 0x01
    24a4:	c3 58       	subi	r28, 0x83	; 131
    24a6:	d2 40       	sbci	r29, 0x02	; 2
    24a8:	00 82       	st	Z, r0
    24aa:	cd 57       	subi	r28, 0x7D	; 125
    24ac:	dd 4f       	sbci	r29, 0xFD	; 253
    24ae:	88 81       	ld	r24, Y
    24b0:	99 81       	ldd	r25, Y+1	; 0x01
    24b2:	c3 58       	subi	r28, 0x83	; 131
    24b4:	d2 40       	sbci	r29, 0x02	; 2
    24b6:	01 96       	adiw	r24, 0x01	; 1
    24b8:	cd 57       	subi	r28, 0x7D	; 125
    24ba:	dd 4f       	sbci	r29, 0xFD	; 253
    24bc:	99 83       	std	Y+1, r25	; 0x01
    24be:	88 83       	st	Y, r24
    24c0:	c3 58       	subi	r28, 0x83	; 131
    24c2:	d2 40       	sbci	r29, 0x02	; 2
    24c4:	c9 57       	subi	r28, 0x79	; 121
    24c6:	dd 4f       	sbci	r29, 0xFD	; 253
    24c8:	98 81       	ld	r25, Y
    24ca:	c7 58       	subi	r28, 0x87	; 135
    24cc:	d2 40       	sbci	r29, 0x02	; 2
    24ce:	91 50       	subi	r25, 0x01	; 1
    24d0:	c9 57       	subi	r28, 0x79	; 121
    24d2:	dd 4f       	sbci	r29, 0xFD	; 253
    24d4:	98 83       	st	Y, r25
    24d6:	c7 58       	subi	r28, 0x87	; 135
    24d8:	d2 40       	sbci	r29, 0x02	; 2
    24da:	c9 57       	subi	r28, 0x79	; 121
    24dc:	dd 4f       	sbci	r29, 0xFD	; 253
    24de:	e8 81       	ld	r30, Y
    24e0:	c7 58       	subi	r28, 0x87	; 135
    24e2:	d2 40       	sbci	r29, 0x02	; 2
    24e4:	ee 23       	and	r30, r30
    24e6:	31 f6       	brne	.-116    	; 0x2474 <main+0x32a>
	u8 FAN_SPEED_MSG[17]="+,- FOR FAN SPEED";
    24e8:	ce 01       	movw	r24, r28
    24ea:	8d 5c       	subi	r24, 0xCD	; 205
    24ec:	9e 4f       	sbci	r25, 0xFE	; 254
    24ee:	c8 57       	subi	r28, 0x78	; 120
    24f0:	dd 4f       	sbci	r29, 0xFD	; 253
    24f2:	99 83       	std	Y+1, r25	; 0x01
    24f4:	88 83       	st	Y, r24
    24f6:	c8 58       	subi	r28, 0x88	; 136
    24f8:	d2 40       	sbci	r29, 0x02	; 2
    24fa:	8e e9       	ldi	r24, 0x9E	; 158
    24fc:	90 e0       	ldi	r25, 0x00	; 0
    24fe:	c6 57       	subi	r28, 0x76	; 118
    2500:	dd 4f       	sbci	r29, 0xFD	; 253
    2502:	99 83       	std	Y+1, r25	; 0x01
    2504:	88 83       	st	Y, r24
    2506:	ca 58       	subi	r28, 0x8A	; 138
    2508:	d2 40       	sbci	r29, 0x02	; 2
    250a:	91 e1       	ldi	r25, 0x11	; 17
    250c:	c4 57       	subi	r28, 0x74	; 116
    250e:	dd 4f       	sbci	r29, 0xFD	; 253
    2510:	98 83       	st	Y, r25
    2512:	cc 58       	subi	r28, 0x8C	; 140
    2514:	d2 40       	sbci	r29, 0x02	; 2
    2516:	c6 57       	subi	r28, 0x76	; 118
    2518:	dd 4f       	sbci	r29, 0xFD	; 253
    251a:	e8 81       	ld	r30, Y
    251c:	f9 81       	ldd	r31, Y+1	; 0x01
    251e:	ca 58       	subi	r28, 0x8A	; 138
    2520:	d2 40       	sbci	r29, 0x02	; 2
    2522:	00 80       	ld	r0, Z
    2524:	c6 57       	subi	r28, 0x76	; 118
    2526:	dd 4f       	sbci	r29, 0xFD	; 253
    2528:	88 81       	ld	r24, Y
    252a:	99 81       	ldd	r25, Y+1	; 0x01
    252c:	ca 58       	subi	r28, 0x8A	; 138
    252e:	d2 40       	sbci	r29, 0x02	; 2
    2530:	01 96       	adiw	r24, 0x01	; 1
    2532:	c6 57       	subi	r28, 0x76	; 118
    2534:	dd 4f       	sbci	r29, 0xFD	; 253
    2536:	99 83       	std	Y+1, r25	; 0x01
    2538:	88 83       	st	Y, r24
    253a:	ca 58       	subi	r28, 0x8A	; 138
    253c:	d2 40       	sbci	r29, 0x02	; 2
    253e:	c8 57       	subi	r28, 0x78	; 120
    2540:	dd 4f       	sbci	r29, 0xFD	; 253
    2542:	e8 81       	ld	r30, Y
    2544:	f9 81       	ldd	r31, Y+1	; 0x01
    2546:	c8 58       	subi	r28, 0x88	; 136
    2548:	d2 40       	sbci	r29, 0x02	; 2
    254a:	00 82       	st	Z, r0
    254c:	c8 57       	subi	r28, 0x78	; 120
    254e:	dd 4f       	sbci	r29, 0xFD	; 253
    2550:	88 81       	ld	r24, Y
    2552:	99 81       	ldd	r25, Y+1	; 0x01
    2554:	c8 58       	subi	r28, 0x88	; 136
    2556:	d2 40       	sbci	r29, 0x02	; 2
    2558:	01 96       	adiw	r24, 0x01	; 1
    255a:	c8 57       	subi	r28, 0x78	; 120
    255c:	dd 4f       	sbci	r29, 0xFD	; 253
    255e:	99 83       	std	Y+1, r25	; 0x01
    2560:	88 83       	st	Y, r24
    2562:	c8 58       	subi	r28, 0x88	; 136
    2564:	d2 40       	sbci	r29, 0x02	; 2
    2566:	c4 57       	subi	r28, 0x74	; 116
    2568:	dd 4f       	sbci	r29, 0xFD	; 253
    256a:	98 81       	ld	r25, Y
    256c:	cc 58       	subi	r28, 0x8C	; 140
    256e:	d2 40       	sbci	r29, 0x02	; 2
    2570:	91 50       	subi	r25, 0x01	; 1
    2572:	c4 57       	subi	r28, 0x74	; 116
    2574:	dd 4f       	sbci	r29, 0xFD	; 253
    2576:	98 83       	st	Y, r25
    2578:	cc 58       	subi	r28, 0x8C	; 140
    257a:	d2 40       	sbci	r29, 0x02	; 2
    257c:	c4 57       	subi	r28, 0x74	; 116
    257e:	dd 4f       	sbci	r29, 0xFD	; 253
    2580:	e8 81       	ld	r30, Y
    2582:	cc 58       	subi	r28, 0x8C	; 140
    2584:	d2 40       	sbci	r29, 0x02	; 2
    2586:	ee 23       	and	r30, r30
    2588:	31 f6       	brne	.-116    	; 0x2516 <main+0x3cc>
	u8 I_FAN_SPEED_MSG[13]="FAN SPEED ++";
    258a:	ce 01       	movw	r24, r28
    258c:	8c 5b       	subi	r24, 0xBC	; 188
    258e:	9e 4f       	sbci	r25, 0xFE	; 254
    2590:	c3 57       	subi	r28, 0x73	; 115
    2592:	dd 4f       	sbci	r29, 0xFD	; 253
    2594:	99 83       	std	Y+1, r25	; 0x01
    2596:	88 83       	st	Y, r24
    2598:	cd 58       	subi	r28, 0x8D	; 141
    259a:	d2 40       	sbci	r29, 0x02	; 2
    259c:	80 eb       	ldi	r24, 0xB0	; 176
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	c1 57       	subi	r28, 0x71	; 113
    25a2:	dd 4f       	sbci	r29, 0xFD	; 253
    25a4:	99 83       	std	Y+1, r25	; 0x01
    25a6:	88 83       	st	Y, r24
    25a8:	cf 58       	subi	r28, 0x8F	; 143
    25aa:	d2 40       	sbci	r29, 0x02	; 2
    25ac:	9d e0       	ldi	r25, 0x0D	; 13
    25ae:	cf 56       	subi	r28, 0x6F	; 111
    25b0:	dd 4f       	sbci	r29, 0xFD	; 253
    25b2:	98 83       	st	Y, r25
    25b4:	c1 59       	subi	r28, 0x91	; 145
    25b6:	d2 40       	sbci	r29, 0x02	; 2
    25b8:	c1 57       	subi	r28, 0x71	; 113
    25ba:	dd 4f       	sbci	r29, 0xFD	; 253
    25bc:	e8 81       	ld	r30, Y
    25be:	f9 81       	ldd	r31, Y+1	; 0x01
    25c0:	cf 58       	subi	r28, 0x8F	; 143
    25c2:	d2 40       	sbci	r29, 0x02	; 2
    25c4:	00 80       	ld	r0, Z
    25c6:	c1 57       	subi	r28, 0x71	; 113
    25c8:	dd 4f       	sbci	r29, 0xFD	; 253
    25ca:	88 81       	ld	r24, Y
    25cc:	99 81       	ldd	r25, Y+1	; 0x01
    25ce:	cf 58       	subi	r28, 0x8F	; 143
    25d0:	d2 40       	sbci	r29, 0x02	; 2
    25d2:	01 96       	adiw	r24, 0x01	; 1
    25d4:	c1 57       	subi	r28, 0x71	; 113
    25d6:	dd 4f       	sbci	r29, 0xFD	; 253
    25d8:	99 83       	std	Y+1, r25	; 0x01
    25da:	88 83       	st	Y, r24
    25dc:	cf 58       	subi	r28, 0x8F	; 143
    25de:	d2 40       	sbci	r29, 0x02	; 2
    25e0:	c3 57       	subi	r28, 0x73	; 115
    25e2:	dd 4f       	sbci	r29, 0xFD	; 253
    25e4:	e8 81       	ld	r30, Y
    25e6:	f9 81       	ldd	r31, Y+1	; 0x01
    25e8:	cd 58       	subi	r28, 0x8D	; 141
    25ea:	d2 40       	sbci	r29, 0x02	; 2
    25ec:	00 82       	st	Z, r0
    25ee:	c3 57       	subi	r28, 0x73	; 115
    25f0:	dd 4f       	sbci	r29, 0xFD	; 253
    25f2:	88 81       	ld	r24, Y
    25f4:	99 81       	ldd	r25, Y+1	; 0x01
    25f6:	cd 58       	subi	r28, 0x8D	; 141
    25f8:	d2 40       	sbci	r29, 0x02	; 2
    25fa:	01 96       	adiw	r24, 0x01	; 1
    25fc:	c3 57       	subi	r28, 0x73	; 115
    25fe:	dd 4f       	sbci	r29, 0xFD	; 253
    2600:	99 83       	std	Y+1, r25	; 0x01
    2602:	88 83       	st	Y, r24
    2604:	cd 58       	subi	r28, 0x8D	; 141
    2606:	d2 40       	sbci	r29, 0x02	; 2
    2608:	cf 56       	subi	r28, 0x6F	; 111
    260a:	dd 4f       	sbci	r29, 0xFD	; 253
    260c:	98 81       	ld	r25, Y
    260e:	c1 59       	subi	r28, 0x91	; 145
    2610:	d2 40       	sbci	r29, 0x02	; 2
    2612:	91 50       	subi	r25, 0x01	; 1
    2614:	cf 56       	subi	r28, 0x6F	; 111
    2616:	dd 4f       	sbci	r29, 0xFD	; 253
    2618:	98 83       	st	Y, r25
    261a:	c1 59       	subi	r28, 0x91	; 145
    261c:	d2 40       	sbci	r29, 0x02	; 2
    261e:	cf 56       	subi	r28, 0x6F	; 111
    2620:	dd 4f       	sbci	r29, 0xFD	; 253
    2622:	e8 81       	ld	r30, Y
    2624:	c1 59       	subi	r28, 0x91	; 145
    2626:	d2 40       	sbci	r29, 0x02	; 2
    2628:	ee 23       	and	r30, r30
    262a:	31 f6       	brne	.-116    	; 0x25b8 <main+0x46e>
	u8 D_FAN_SPEED_MSG[13]="FAN SPEED --";
    262c:	ce 01       	movw	r24, r28
    262e:	8f 5a       	subi	r24, 0xAF	; 175
    2630:	9e 4f       	sbci	r25, 0xFE	; 254
    2632:	ce 56       	subi	r28, 0x6E	; 110
    2634:	dd 4f       	sbci	r29, 0xFD	; 253
    2636:	99 83       	std	Y+1, r25	; 0x01
    2638:	88 83       	st	Y, r24
    263a:	c2 59       	subi	r28, 0x92	; 146
    263c:	d2 40       	sbci	r29, 0x02	; 2
    263e:	8d eb       	ldi	r24, 0xBD	; 189
    2640:	90 e0       	ldi	r25, 0x00	; 0
    2642:	cc 56       	subi	r28, 0x6C	; 108
    2644:	dd 4f       	sbci	r29, 0xFD	; 253
    2646:	99 83       	std	Y+1, r25	; 0x01
    2648:	88 83       	st	Y, r24
    264a:	c4 59       	subi	r28, 0x94	; 148
    264c:	d2 40       	sbci	r29, 0x02	; 2
    264e:	9d e0       	ldi	r25, 0x0D	; 13
    2650:	ca 56       	subi	r28, 0x6A	; 106
    2652:	dd 4f       	sbci	r29, 0xFD	; 253
    2654:	98 83       	st	Y, r25
    2656:	c6 59       	subi	r28, 0x96	; 150
    2658:	d2 40       	sbci	r29, 0x02	; 2
    265a:	cc 56       	subi	r28, 0x6C	; 108
    265c:	dd 4f       	sbci	r29, 0xFD	; 253
    265e:	e8 81       	ld	r30, Y
    2660:	f9 81       	ldd	r31, Y+1	; 0x01
    2662:	c4 59       	subi	r28, 0x94	; 148
    2664:	d2 40       	sbci	r29, 0x02	; 2
    2666:	00 80       	ld	r0, Z
    2668:	cc 56       	subi	r28, 0x6C	; 108
    266a:	dd 4f       	sbci	r29, 0xFD	; 253
    266c:	88 81       	ld	r24, Y
    266e:	99 81       	ldd	r25, Y+1	; 0x01
    2670:	c4 59       	subi	r28, 0x94	; 148
    2672:	d2 40       	sbci	r29, 0x02	; 2
    2674:	01 96       	adiw	r24, 0x01	; 1
    2676:	cc 56       	subi	r28, 0x6C	; 108
    2678:	dd 4f       	sbci	r29, 0xFD	; 253
    267a:	99 83       	std	Y+1, r25	; 0x01
    267c:	88 83       	st	Y, r24
    267e:	c4 59       	subi	r28, 0x94	; 148
    2680:	d2 40       	sbci	r29, 0x02	; 2
    2682:	ce 56       	subi	r28, 0x6E	; 110
    2684:	dd 4f       	sbci	r29, 0xFD	; 253
    2686:	e8 81       	ld	r30, Y
    2688:	f9 81       	ldd	r31, Y+1	; 0x01
    268a:	c2 59       	subi	r28, 0x92	; 146
    268c:	d2 40       	sbci	r29, 0x02	; 2
    268e:	00 82       	st	Z, r0
    2690:	ce 56       	subi	r28, 0x6E	; 110
    2692:	dd 4f       	sbci	r29, 0xFD	; 253
    2694:	88 81       	ld	r24, Y
    2696:	99 81       	ldd	r25, Y+1	; 0x01
    2698:	c2 59       	subi	r28, 0x92	; 146
    269a:	d2 40       	sbci	r29, 0x02	; 2
    269c:	01 96       	adiw	r24, 0x01	; 1
    269e:	ce 56       	subi	r28, 0x6E	; 110
    26a0:	dd 4f       	sbci	r29, 0xFD	; 253
    26a2:	99 83       	std	Y+1, r25	; 0x01
    26a4:	88 83       	st	Y, r24
    26a6:	c2 59       	subi	r28, 0x92	; 146
    26a8:	d2 40       	sbci	r29, 0x02	; 2
    26aa:	ca 56       	subi	r28, 0x6A	; 106
    26ac:	dd 4f       	sbci	r29, 0xFD	; 253
    26ae:	98 81       	ld	r25, Y
    26b0:	c6 59       	subi	r28, 0x96	; 150
    26b2:	d2 40       	sbci	r29, 0x02	; 2
    26b4:	91 50       	subi	r25, 0x01	; 1
    26b6:	ca 56       	subi	r28, 0x6A	; 106
    26b8:	dd 4f       	sbci	r29, 0xFD	; 253
    26ba:	98 83       	st	Y, r25
    26bc:	c6 59       	subi	r28, 0x96	; 150
    26be:	d2 40       	sbci	r29, 0x02	; 2
    26c0:	ca 56       	subi	r28, 0x6A	; 106
    26c2:	dd 4f       	sbci	r29, 0xFD	; 253
    26c4:	e8 81       	ld	r30, Y
    26c6:	c6 59       	subi	r28, 0x96	; 150
    26c8:	d2 40       	sbci	r29, 0x02	; 2
    26ca:	ee 23       	and	r30, r30
    26cc:	31 f6       	brne	.-116    	; 0x265a <main+0x510>
	u8 OPEN_DOOR_MSG[15]="3 to Open DOOR";
    26ce:	ce 01       	movw	r24, r28
    26d0:	82 5a       	subi	r24, 0xA2	; 162
    26d2:	9e 4f       	sbci	r25, 0xFE	; 254
    26d4:	c9 56       	subi	r28, 0x69	; 105
    26d6:	dd 4f       	sbci	r29, 0xFD	; 253
    26d8:	99 83       	std	Y+1, r25	; 0x01
    26da:	88 83       	st	Y, r24
    26dc:	c7 59       	subi	r28, 0x97	; 151
    26de:	d2 40       	sbci	r29, 0x02	; 2
    26e0:	8a ec       	ldi	r24, 0xCA	; 202
    26e2:	90 e0       	ldi	r25, 0x00	; 0
    26e4:	c7 56       	subi	r28, 0x67	; 103
    26e6:	dd 4f       	sbci	r29, 0xFD	; 253
    26e8:	99 83       	std	Y+1, r25	; 0x01
    26ea:	88 83       	st	Y, r24
    26ec:	c9 59       	subi	r28, 0x99	; 153
    26ee:	d2 40       	sbci	r29, 0x02	; 2
    26f0:	9f e0       	ldi	r25, 0x0F	; 15
    26f2:	c5 56       	subi	r28, 0x65	; 101
    26f4:	dd 4f       	sbci	r29, 0xFD	; 253
    26f6:	98 83       	st	Y, r25
    26f8:	cb 59       	subi	r28, 0x9B	; 155
    26fa:	d2 40       	sbci	r29, 0x02	; 2
    26fc:	c7 56       	subi	r28, 0x67	; 103
    26fe:	dd 4f       	sbci	r29, 0xFD	; 253
    2700:	e8 81       	ld	r30, Y
    2702:	f9 81       	ldd	r31, Y+1	; 0x01
    2704:	c9 59       	subi	r28, 0x99	; 153
    2706:	d2 40       	sbci	r29, 0x02	; 2
    2708:	00 80       	ld	r0, Z
    270a:	c7 56       	subi	r28, 0x67	; 103
    270c:	dd 4f       	sbci	r29, 0xFD	; 253
    270e:	88 81       	ld	r24, Y
    2710:	99 81       	ldd	r25, Y+1	; 0x01
    2712:	c9 59       	subi	r28, 0x99	; 153
    2714:	d2 40       	sbci	r29, 0x02	; 2
    2716:	01 96       	adiw	r24, 0x01	; 1
    2718:	c7 56       	subi	r28, 0x67	; 103
    271a:	dd 4f       	sbci	r29, 0xFD	; 253
    271c:	99 83       	std	Y+1, r25	; 0x01
    271e:	88 83       	st	Y, r24
    2720:	c9 59       	subi	r28, 0x99	; 153
    2722:	d2 40       	sbci	r29, 0x02	; 2
    2724:	c9 56       	subi	r28, 0x69	; 105
    2726:	dd 4f       	sbci	r29, 0xFD	; 253
    2728:	e8 81       	ld	r30, Y
    272a:	f9 81       	ldd	r31, Y+1	; 0x01
    272c:	c7 59       	subi	r28, 0x97	; 151
    272e:	d2 40       	sbci	r29, 0x02	; 2
    2730:	00 82       	st	Z, r0
    2732:	c9 56       	subi	r28, 0x69	; 105
    2734:	dd 4f       	sbci	r29, 0xFD	; 253
    2736:	88 81       	ld	r24, Y
    2738:	99 81       	ldd	r25, Y+1	; 0x01
    273a:	c7 59       	subi	r28, 0x97	; 151
    273c:	d2 40       	sbci	r29, 0x02	; 2
    273e:	01 96       	adiw	r24, 0x01	; 1
    2740:	c9 56       	subi	r28, 0x69	; 105
    2742:	dd 4f       	sbci	r29, 0xFD	; 253
    2744:	99 83       	std	Y+1, r25	; 0x01
    2746:	88 83       	st	Y, r24
    2748:	c7 59       	subi	r28, 0x97	; 151
    274a:	d2 40       	sbci	r29, 0x02	; 2
    274c:	c5 56       	subi	r28, 0x65	; 101
    274e:	dd 4f       	sbci	r29, 0xFD	; 253
    2750:	98 81       	ld	r25, Y
    2752:	cb 59       	subi	r28, 0x9B	; 155
    2754:	d2 40       	sbci	r29, 0x02	; 2
    2756:	91 50       	subi	r25, 0x01	; 1
    2758:	c5 56       	subi	r28, 0x65	; 101
    275a:	dd 4f       	sbci	r29, 0xFD	; 253
    275c:	98 83       	st	Y, r25
    275e:	cb 59       	subi	r28, 0x9B	; 155
    2760:	d2 40       	sbci	r29, 0x02	; 2
    2762:	c5 56       	subi	r28, 0x65	; 101
    2764:	dd 4f       	sbci	r29, 0xFD	; 253
    2766:	e8 81       	ld	r30, Y
    2768:	cb 59       	subi	r28, 0x9B	; 155
    276a:	d2 40       	sbci	r29, 0x02	; 2
    276c:	ee 23       	and	r30, r30
    276e:	31 f6       	brne	.-116    	; 0x26fc <main+0x5b2>
	u8 OPENED_DONE_DOOR_MSG[17]="DOOR IS OPENNING";
    2770:	ce 01       	movw	r24, r28
    2772:	83 59       	subi	r24, 0x93	; 147
    2774:	9e 4f       	sbci	r25, 0xFE	; 254
    2776:	c4 56       	subi	r28, 0x64	; 100
    2778:	dd 4f       	sbci	r29, 0xFD	; 253
    277a:	99 83       	std	Y+1, r25	; 0x01
    277c:	88 83       	st	Y, r24
    277e:	cc 59       	subi	r28, 0x9C	; 156
    2780:	d2 40       	sbci	r29, 0x02	; 2
    2782:	89 ed       	ldi	r24, 0xD9	; 217
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	c2 56       	subi	r28, 0x62	; 98
    2788:	dd 4f       	sbci	r29, 0xFD	; 253
    278a:	99 83       	std	Y+1, r25	; 0x01
    278c:	88 83       	st	Y, r24
    278e:	ce 59       	subi	r28, 0x9E	; 158
    2790:	d2 40       	sbci	r29, 0x02	; 2
    2792:	91 e1       	ldi	r25, 0x11	; 17
    2794:	c0 56       	subi	r28, 0x60	; 96
    2796:	dd 4f       	sbci	r29, 0xFD	; 253
    2798:	98 83       	st	Y, r25
    279a:	c0 5a       	subi	r28, 0xA0	; 160
    279c:	d2 40       	sbci	r29, 0x02	; 2
    279e:	c2 56       	subi	r28, 0x62	; 98
    27a0:	dd 4f       	sbci	r29, 0xFD	; 253
    27a2:	e8 81       	ld	r30, Y
    27a4:	f9 81       	ldd	r31, Y+1	; 0x01
    27a6:	ce 59       	subi	r28, 0x9E	; 158
    27a8:	d2 40       	sbci	r29, 0x02	; 2
    27aa:	00 80       	ld	r0, Z
    27ac:	c2 56       	subi	r28, 0x62	; 98
    27ae:	dd 4f       	sbci	r29, 0xFD	; 253
    27b0:	88 81       	ld	r24, Y
    27b2:	99 81       	ldd	r25, Y+1	; 0x01
    27b4:	ce 59       	subi	r28, 0x9E	; 158
    27b6:	d2 40       	sbci	r29, 0x02	; 2
    27b8:	01 96       	adiw	r24, 0x01	; 1
    27ba:	c2 56       	subi	r28, 0x62	; 98
    27bc:	dd 4f       	sbci	r29, 0xFD	; 253
    27be:	99 83       	std	Y+1, r25	; 0x01
    27c0:	88 83       	st	Y, r24
    27c2:	ce 59       	subi	r28, 0x9E	; 158
    27c4:	d2 40       	sbci	r29, 0x02	; 2
    27c6:	c4 56       	subi	r28, 0x64	; 100
    27c8:	dd 4f       	sbci	r29, 0xFD	; 253
    27ca:	e8 81       	ld	r30, Y
    27cc:	f9 81       	ldd	r31, Y+1	; 0x01
    27ce:	cc 59       	subi	r28, 0x9C	; 156
    27d0:	d2 40       	sbci	r29, 0x02	; 2
    27d2:	00 82       	st	Z, r0
    27d4:	c4 56       	subi	r28, 0x64	; 100
    27d6:	dd 4f       	sbci	r29, 0xFD	; 253
    27d8:	88 81       	ld	r24, Y
    27da:	99 81       	ldd	r25, Y+1	; 0x01
    27dc:	cc 59       	subi	r28, 0x9C	; 156
    27de:	d2 40       	sbci	r29, 0x02	; 2
    27e0:	01 96       	adiw	r24, 0x01	; 1
    27e2:	c4 56       	subi	r28, 0x64	; 100
    27e4:	dd 4f       	sbci	r29, 0xFD	; 253
    27e6:	99 83       	std	Y+1, r25	; 0x01
    27e8:	88 83       	st	Y, r24
    27ea:	cc 59       	subi	r28, 0x9C	; 156
    27ec:	d2 40       	sbci	r29, 0x02	; 2
    27ee:	c0 56       	subi	r28, 0x60	; 96
    27f0:	dd 4f       	sbci	r29, 0xFD	; 253
    27f2:	98 81       	ld	r25, Y
    27f4:	c0 5a       	subi	r28, 0xA0	; 160
    27f6:	d2 40       	sbci	r29, 0x02	; 2
    27f8:	91 50       	subi	r25, 0x01	; 1
    27fa:	c0 56       	subi	r28, 0x60	; 96
    27fc:	dd 4f       	sbci	r29, 0xFD	; 253
    27fe:	98 83       	st	Y, r25
    2800:	c0 5a       	subi	r28, 0xA0	; 160
    2802:	d2 40       	sbci	r29, 0x02	; 2
    2804:	c0 56       	subi	r28, 0x60	; 96
    2806:	dd 4f       	sbci	r29, 0xFD	; 253
    2808:	e8 81       	ld	r30, Y
    280a:	c0 5a       	subi	r28, 0xA0	; 160
    280c:	d2 40       	sbci	r29, 0x02	; 2
    280e:	ee 23       	and	r30, r30
    2810:	31 f6       	brne	.-116    	; 0x279e <main+0x654>
	u8 OPENED_NOT_DONE_DOOR_MSG[17]="DOOR IS OPENED";
    2812:	ce 01       	movw	r24, r28
    2814:	82 58       	subi	r24, 0x82	; 130
    2816:	9e 4f       	sbci	r25, 0xFE	; 254
    2818:	cf 55       	subi	r28, 0x5F	; 95
    281a:	dd 4f       	sbci	r29, 0xFD	; 253
    281c:	99 83       	std	Y+1, r25	; 0x01
    281e:	88 83       	st	Y, r24
    2820:	c1 5a       	subi	r28, 0xA1	; 161
    2822:	d2 40       	sbci	r29, 0x02	; 2
    2824:	cf 55       	subi	r28, 0x5F	; 95
    2826:	dd 4f       	sbci	r29, 0xFD	; 253
    2828:	e8 81       	ld	r30, Y
    282a:	f9 81       	ldd	r31, Y+1	; 0x01
    282c:	c1 5a       	subi	r28, 0xA1	; 161
    282e:	d2 40       	sbci	r29, 0x02	; 2
    2830:	cd 55       	subi	r28, 0x5D	; 93
    2832:	dd 4f       	sbci	r29, 0xFD	; 253
    2834:	f9 83       	std	Y+1, r31	; 0x01
    2836:	e8 83       	st	Y, r30
    2838:	c3 5a       	subi	r28, 0xA3	; 163
    283a:	d2 40       	sbci	r29, 0x02	; 2
    283c:	8a ee       	ldi	r24, 0xEA	; 234
    283e:	90 e0       	ldi	r25, 0x00	; 0
    2840:	cb 55       	subi	r28, 0x5B	; 91
    2842:	dd 4f       	sbci	r29, 0xFD	; 253
    2844:	99 83       	std	Y+1, r25	; 0x01
    2846:	88 83       	st	Y, r24
    2848:	c5 5a       	subi	r28, 0xA5	; 165
    284a:	d2 40       	sbci	r29, 0x02	; 2
    284c:	9f e0       	ldi	r25, 0x0F	; 15
    284e:	c9 55       	subi	r28, 0x59	; 89
    2850:	dd 4f       	sbci	r29, 0xFD	; 253
    2852:	98 83       	st	Y, r25
    2854:	c7 5a       	subi	r28, 0xA7	; 167
    2856:	d2 40       	sbci	r29, 0x02	; 2
    2858:	cb 55       	subi	r28, 0x5B	; 91
    285a:	dd 4f       	sbci	r29, 0xFD	; 253
    285c:	e8 81       	ld	r30, Y
    285e:	f9 81       	ldd	r31, Y+1	; 0x01
    2860:	c5 5a       	subi	r28, 0xA5	; 165
    2862:	d2 40       	sbci	r29, 0x02	; 2
    2864:	00 80       	ld	r0, Z
    2866:	cb 55       	subi	r28, 0x5B	; 91
    2868:	dd 4f       	sbci	r29, 0xFD	; 253
    286a:	88 81       	ld	r24, Y
    286c:	99 81       	ldd	r25, Y+1	; 0x01
    286e:	c5 5a       	subi	r28, 0xA5	; 165
    2870:	d2 40       	sbci	r29, 0x02	; 2
    2872:	01 96       	adiw	r24, 0x01	; 1
    2874:	cb 55       	subi	r28, 0x5B	; 91
    2876:	dd 4f       	sbci	r29, 0xFD	; 253
    2878:	99 83       	std	Y+1, r25	; 0x01
    287a:	88 83       	st	Y, r24
    287c:	c5 5a       	subi	r28, 0xA5	; 165
    287e:	d2 40       	sbci	r29, 0x02	; 2
    2880:	cd 55       	subi	r28, 0x5D	; 93
    2882:	dd 4f       	sbci	r29, 0xFD	; 253
    2884:	e8 81       	ld	r30, Y
    2886:	f9 81       	ldd	r31, Y+1	; 0x01
    2888:	c3 5a       	subi	r28, 0xA3	; 163
    288a:	d2 40       	sbci	r29, 0x02	; 2
    288c:	00 82       	st	Z, r0
    288e:	cd 55       	subi	r28, 0x5D	; 93
    2890:	dd 4f       	sbci	r29, 0xFD	; 253
    2892:	88 81       	ld	r24, Y
    2894:	99 81       	ldd	r25, Y+1	; 0x01
    2896:	c3 5a       	subi	r28, 0xA3	; 163
    2898:	d2 40       	sbci	r29, 0x02	; 2
    289a:	01 96       	adiw	r24, 0x01	; 1
    289c:	cd 55       	subi	r28, 0x5D	; 93
    289e:	dd 4f       	sbci	r29, 0xFD	; 253
    28a0:	99 83       	std	Y+1, r25	; 0x01
    28a2:	88 83       	st	Y, r24
    28a4:	c3 5a       	subi	r28, 0xA3	; 163
    28a6:	d2 40       	sbci	r29, 0x02	; 2
    28a8:	c9 55       	subi	r28, 0x59	; 89
    28aa:	dd 4f       	sbci	r29, 0xFD	; 253
    28ac:	98 81       	ld	r25, Y
    28ae:	c7 5a       	subi	r28, 0xA7	; 167
    28b0:	d2 40       	sbci	r29, 0x02	; 2
    28b2:	91 50       	subi	r25, 0x01	; 1
    28b4:	c9 55       	subi	r28, 0x59	; 89
    28b6:	dd 4f       	sbci	r29, 0xFD	; 253
    28b8:	98 83       	st	Y, r25
    28ba:	c7 5a       	subi	r28, 0xA7	; 167
    28bc:	d2 40       	sbci	r29, 0x02	; 2
    28be:	c9 55       	subi	r28, 0x59	; 89
    28c0:	dd 4f       	sbci	r29, 0xFD	; 253
    28c2:	e8 81       	ld	r30, Y
    28c4:	c7 5a       	subi	r28, 0xA7	; 167
    28c6:	d2 40       	sbci	r29, 0x02	; 2
    28c8:	ee 23       	and	r30, r30
    28ca:	31 f6       	brne	.-116    	; 0x2858 <main+0x70e>
    28cc:	cf 55       	subi	r28, 0x5F	; 95
    28ce:	dd 4f       	sbci	r29, 0xFD	; 253
    28d0:	e8 81       	ld	r30, Y
    28d2:	f9 81       	ldd	r31, Y+1	; 0x01
    28d4:	c1 5a       	subi	r28, 0xA1	; 161
    28d6:	d2 40       	sbci	r29, 0x02	; 2
    28d8:	10 8a       	std	Z+16, r1	; 0x10
    28da:	17 86       	std	Z+15, r1	; 0x0f
	u8 CLOSE_DOOR_MSG[16]="2 to close DOOR";
    28dc:	ce 01       	movw	r24, r28
    28de:	81 57       	subi	r24, 0x71	; 113
    28e0:	9e 4f       	sbci	r25, 0xFE	; 254
    28e2:	c8 55       	subi	r28, 0x58	; 88
    28e4:	dd 4f       	sbci	r29, 0xFD	; 253
    28e6:	99 83       	std	Y+1, r25	; 0x01
    28e8:	88 83       	st	Y, r24
    28ea:	c8 5a       	subi	r28, 0xA8	; 168
    28ec:	d2 40       	sbci	r29, 0x02	; 2
    28ee:	8b ef       	ldi	r24, 0xFB	; 251
    28f0:	90 e0       	ldi	r25, 0x00	; 0
    28f2:	c6 55       	subi	r28, 0x56	; 86
    28f4:	dd 4f       	sbci	r29, 0xFD	; 253
    28f6:	99 83       	std	Y+1, r25	; 0x01
    28f8:	88 83       	st	Y, r24
    28fa:	ca 5a       	subi	r28, 0xAA	; 170
    28fc:	d2 40       	sbci	r29, 0x02	; 2
    28fe:	90 e1       	ldi	r25, 0x10	; 16
    2900:	c4 55       	subi	r28, 0x54	; 84
    2902:	dd 4f       	sbci	r29, 0xFD	; 253
    2904:	98 83       	st	Y, r25
    2906:	cc 5a       	subi	r28, 0xAC	; 172
    2908:	d2 40       	sbci	r29, 0x02	; 2
    290a:	c6 55       	subi	r28, 0x56	; 86
    290c:	dd 4f       	sbci	r29, 0xFD	; 253
    290e:	e8 81       	ld	r30, Y
    2910:	f9 81       	ldd	r31, Y+1	; 0x01
    2912:	ca 5a       	subi	r28, 0xAA	; 170
    2914:	d2 40       	sbci	r29, 0x02	; 2
    2916:	00 80       	ld	r0, Z
    2918:	c6 55       	subi	r28, 0x56	; 86
    291a:	dd 4f       	sbci	r29, 0xFD	; 253
    291c:	88 81       	ld	r24, Y
    291e:	99 81       	ldd	r25, Y+1	; 0x01
    2920:	ca 5a       	subi	r28, 0xAA	; 170
    2922:	d2 40       	sbci	r29, 0x02	; 2
    2924:	01 96       	adiw	r24, 0x01	; 1
    2926:	c6 55       	subi	r28, 0x56	; 86
    2928:	dd 4f       	sbci	r29, 0xFD	; 253
    292a:	99 83       	std	Y+1, r25	; 0x01
    292c:	88 83       	st	Y, r24
    292e:	ca 5a       	subi	r28, 0xAA	; 170
    2930:	d2 40       	sbci	r29, 0x02	; 2
    2932:	c8 55       	subi	r28, 0x58	; 88
    2934:	dd 4f       	sbci	r29, 0xFD	; 253
    2936:	e8 81       	ld	r30, Y
    2938:	f9 81       	ldd	r31, Y+1	; 0x01
    293a:	c8 5a       	subi	r28, 0xA8	; 168
    293c:	d2 40       	sbci	r29, 0x02	; 2
    293e:	00 82       	st	Z, r0
    2940:	c8 55       	subi	r28, 0x58	; 88
    2942:	dd 4f       	sbci	r29, 0xFD	; 253
    2944:	88 81       	ld	r24, Y
    2946:	99 81       	ldd	r25, Y+1	; 0x01
    2948:	c8 5a       	subi	r28, 0xA8	; 168
    294a:	d2 40       	sbci	r29, 0x02	; 2
    294c:	01 96       	adiw	r24, 0x01	; 1
    294e:	c8 55       	subi	r28, 0x58	; 88
    2950:	dd 4f       	sbci	r29, 0xFD	; 253
    2952:	99 83       	std	Y+1, r25	; 0x01
    2954:	88 83       	st	Y, r24
    2956:	c8 5a       	subi	r28, 0xA8	; 168
    2958:	d2 40       	sbci	r29, 0x02	; 2
    295a:	c4 55       	subi	r28, 0x54	; 84
    295c:	dd 4f       	sbci	r29, 0xFD	; 253
    295e:	98 81       	ld	r25, Y
    2960:	cc 5a       	subi	r28, 0xAC	; 172
    2962:	d2 40       	sbci	r29, 0x02	; 2
    2964:	91 50       	subi	r25, 0x01	; 1
    2966:	c4 55       	subi	r28, 0x54	; 84
    2968:	dd 4f       	sbci	r29, 0xFD	; 253
    296a:	98 83       	st	Y, r25
    296c:	cc 5a       	subi	r28, 0xAC	; 172
    296e:	d2 40       	sbci	r29, 0x02	; 2
    2970:	c4 55       	subi	r28, 0x54	; 84
    2972:	dd 4f       	sbci	r29, 0xFD	; 253
    2974:	e8 81       	ld	r30, Y
    2976:	cc 5a       	subi	r28, 0xAC	; 172
    2978:	d2 40       	sbci	r29, 0x02	; 2
    297a:	ee 23       	and	r30, r30
    297c:	31 f6       	brne	.-116    	; 0x290a <main+0x7c0>
	u8 CLOSED_DONE_DOOR_MSG[16]="DOOR IS CLOSING";
    297e:	ce 01       	movw	r24, r28
    2980:	81 56       	subi	r24, 0x61	; 97
    2982:	9e 4f       	sbci	r25, 0xFE	; 254
    2984:	c3 55       	subi	r28, 0x53	; 83
    2986:	dd 4f       	sbci	r29, 0xFD	; 253
    2988:	99 83       	std	Y+1, r25	; 0x01
    298a:	88 83       	st	Y, r24
    298c:	cd 5a       	subi	r28, 0xAD	; 173
    298e:	d2 40       	sbci	r29, 0x02	; 2
    2990:	8b e0       	ldi	r24, 0x0B	; 11
    2992:	91 e0       	ldi	r25, 0x01	; 1
    2994:	c1 55       	subi	r28, 0x51	; 81
    2996:	dd 4f       	sbci	r29, 0xFD	; 253
    2998:	99 83       	std	Y+1, r25	; 0x01
    299a:	88 83       	st	Y, r24
    299c:	cf 5a       	subi	r28, 0xAF	; 175
    299e:	d2 40       	sbci	r29, 0x02	; 2
    29a0:	90 e1       	ldi	r25, 0x10	; 16
    29a2:	cf 54       	subi	r28, 0x4F	; 79
    29a4:	dd 4f       	sbci	r29, 0xFD	; 253
    29a6:	98 83       	st	Y, r25
    29a8:	c1 5b       	subi	r28, 0xB1	; 177
    29aa:	d2 40       	sbci	r29, 0x02	; 2
    29ac:	c1 55       	subi	r28, 0x51	; 81
    29ae:	dd 4f       	sbci	r29, 0xFD	; 253
    29b0:	e8 81       	ld	r30, Y
    29b2:	f9 81       	ldd	r31, Y+1	; 0x01
    29b4:	cf 5a       	subi	r28, 0xAF	; 175
    29b6:	d2 40       	sbci	r29, 0x02	; 2
    29b8:	00 80       	ld	r0, Z
    29ba:	c1 55       	subi	r28, 0x51	; 81
    29bc:	dd 4f       	sbci	r29, 0xFD	; 253
    29be:	88 81       	ld	r24, Y
    29c0:	99 81       	ldd	r25, Y+1	; 0x01
    29c2:	cf 5a       	subi	r28, 0xAF	; 175
    29c4:	d2 40       	sbci	r29, 0x02	; 2
    29c6:	01 96       	adiw	r24, 0x01	; 1
    29c8:	c1 55       	subi	r28, 0x51	; 81
    29ca:	dd 4f       	sbci	r29, 0xFD	; 253
    29cc:	99 83       	std	Y+1, r25	; 0x01
    29ce:	88 83       	st	Y, r24
    29d0:	cf 5a       	subi	r28, 0xAF	; 175
    29d2:	d2 40       	sbci	r29, 0x02	; 2
    29d4:	c3 55       	subi	r28, 0x53	; 83
    29d6:	dd 4f       	sbci	r29, 0xFD	; 253
    29d8:	e8 81       	ld	r30, Y
    29da:	f9 81       	ldd	r31, Y+1	; 0x01
    29dc:	cd 5a       	subi	r28, 0xAD	; 173
    29de:	d2 40       	sbci	r29, 0x02	; 2
    29e0:	00 82       	st	Z, r0
    29e2:	c3 55       	subi	r28, 0x53	; 83
    29e4:	dd 4f       	sbci	r29, 0xFD	; 253
    29e6:	88 81       	ld	r24, Y
    29e8:	99 81       	ldd	r25, Y+1	; 0x01
    29ea:	cd 5a       	subi	r28, 0xAD	; 173
    29ec:	d2 40       	sbci	r29, 0x02	; 2
    29ee:	01 96       	adiw	r24, 0x01	; 1
    29f0:	c3 55       	subi	r28, 0x53	; 83
    29f2:	dd 4f       	sbci	r29, 0xFD	; 253
    29f4:	99 83       	std	Y+1, r25	; 0x01
    29f6:	88 83       	st	Y, r24
    29f8:	cd 5a       	subi	r28, 0xAD	; 173
    29fa:	d2 40       	sbci	r29, 0x02	; 2
    29fc:	cf 54       	subi	r28, 0x4F	; 79
    29fe:	dd 4f       	sbci	r29, 0xFD	; 253
    2a00:	98 81       	ld	r25, Y
    2a02:	c1 5b       	subi	r28, 0xB1	; 177
    2a04:	d2 40       	sbci	r29, 0x02	; 2
    2a06:	91 50       	subi	r25, 0x01	; 1
    2a08:	cf 54       	subi	r28, 0x4F	; 79
    2a0a:	dd 4f       	sbci	r29, 0xFD	; 253
    2a0c:	98 83       	st	Y, r25
    2a0e:	c1 5b       	subi	r28, 0xB1	; 177
    2a10:	d2 40       	sbci	r29, 0x02	; 2
    2a12:	cf 54       	subi	r28, 0x4F	; 79
    2a14:	dd 4f       	sbci	r29, 0xFD	; 253
    2a16:	e8 81       	ld	r30, Y
    2a18:	c1 5b       	subi	r28, 0xB1	; 177
    2a1a:	d2 40       	sbci	r29, 0x02	; 2
    2a1c:	ee 23       	and	r30, r30
    2a1e:	31 f6       	brne	.-116    	; 0x29ac <main+0x862>
	u8 CLOSED_NOT_DONE_DOOR_MSG[16]="DOOR IS CLOSED";
    2a20:	ce 01       	movw	r24, r28
    2a22:	81 55       	subi	r24, 0x51	; 81
    2a24:	9e 4f       	sbci	r25, 0xFE	; 254
    2a26:	ce 54       	subi	r28, 0x4E	; 78
    2a28:	dd 4f       	sbci	r29, 0xFD	; 253
    2a2a:	99 83       	std	Y+1, r25	; 0x01
    2a2c:	88 83       	st	Y, r24
    2a2e:	c2 5b       	subi	r28, 0xB2	; 178
    2a30:	d2 40       	sbci	r29, 0x02	; 2
    2a32:	ce 54       	subi	r28, 0x4E	; 78
    2a34:	dd 4f       	sbci	r29, 0xFD	; 253
    2a36:	e8 81       	ld	r30, Y
    2a38:	f9 81       	ldd	r31, Y+1	; 0x01
    2a3a:	c2 5b       	subi	r28, 0xB2	; 178
    2a3c:	d2 40       	sbci	r29, 0x02	; 2
    2a3e:	cc 54       	subi	r28, 0x4C	; 76
    2a40:	dd 4f       	sbci	r29, 0xFD	; 253
    2a42:	f9 83       	std	Y+1, r31	; 0x01
    2a44:	e8 83       	st	Y, r30
    2a46:	c4 5b       	subi	r28, 0xB4	; 180
    2a48:	d2 40       	sbci	r29, 0x02	; 2
    2a4a:	8b e1       	ldi	r24, 0x1B	; 27
    2a4c:	91 e0       	ldi	r25, 0x01	; 1
    2a4e:	ca 54       	subi	r28, 0x4A	; 74
    2a50:	dd 4f       	sbci	r29, 0xFD	; 253
    2a52:	99 83       	std	Y+1, r25	; 0x01
    2a54:	88 83       	st	Y, r24
    2a56:	c6 5b       	subi	r28, 0xB6	; 182
    2a58:	d2 40       	sbci	r29, 0x02	; 2
    2a5a:	9f e0       	ldi	r25, 0x0F	; 15
    2a5c:	c8 54       	subi	r28, 0x48	; 72
    2a5e:	dd 4f       	sbci	r29, 0xFD	; 253
    2a60:	98 83       	st	Y, r25
    2a62:	c8 5b       	subi	r28, 0xB8	; 184
    2a64:	d2 40       	sbci	r29, 0x02	; 2
    2a66:	ca 54       	subi	r28, 0x4A	; 74
    2a68:	dd 4f       	sbci	r29, 0xFD	; 253
    2a6a:	e8 81       	ld	r30, Y
    2a6c:	f9 81       	ldd	r31, Y+1	; 0x01
    2a6e:	c6 5b       	subi	r28, 0xB6	; 182
    2a70:	d2 40       	sbci	r29, 0x02	; 2
    2a72:	00 80       	ld	r0, Z
    2a74:	ca 54       	subi	r28, 0x4A	; 74
    2a76:	dd 4f       	sbci	r29, 0xFD	; 253
    2a78:	88 81       	ld	r24, Y
    2a7a:	99 81       	ldd	r25, Y+1	; 0x01
    2a7c:	c6 5b       	subi	r28, 0xB6	; 182
    2a7e:	d2 40       	sbci	r29, 0x02	; 2
    2a80:	01 96       	adiw	r24, 0x01	; 1
    2a82:	ca 54       	subi	r28, 0x4A	; 74
    2a84:	dd 4f       	sbci	r29, 0xFD	; 253
    2a86:	99 83       	std	Y+1, r25	; 0x01
    2a88:	88 83       	st	Y, r24
    2a8a:	c6 5b       	subi	r28, 0xB6	; 182
    2a8c:	d2 40       	sbci	r29, 0x02	; 2
    2a8e:	cc 54       	subi	r28, 0x4C	; 76
    2a90:	dd 4f       	sbci	r29, 0xFD	; 253
    2a92:	e8 81       	ld	r30, Y
    2a94:	f9 81       	ldd	r31, Y+1	; 0x01
    2a96:	c4 5b       	subi	r28, 0xB4	; 180
    2a98:	d2 40       	sbci	r29, 0x02	; 2
    2a9a:	00 82       	st	Z, r0
    2a9c:	cc 54       	subi	r28, 0x4C	; 76
    2a9e:	dd 4f       	sbci	r29, 0xFD	; 253
    2aa0:	88 81       	ld	r24, Y
    2aa2:	99 81       	ldd	r25, Y+1	; 0x01
    2aa4:	c4 5b       	subi	r28, 0xB4	; 180
    2aa6:	d2 40       	sbci	r29, 0x02	; 2
    2aa8:	01 96       	adiw	r24, 0x01	; 1
    2aaa:	cc 54       	subi	r28, 0x4C	; 76
    2aac:	dd 4f       	sbci	r29, 0xFD	; 253
    2aae:	99 83       	std	Y+1, r25	; 0x01
    2ab0:	88 83       	st	Y, r24
    2ab2:	c4 5b       	subi	r28, 0xB4	; 180
    2ab4:	d2 40       	sbci	r29, 0x02	; 2
    2ab6:	c8 54       	subi	r28, 0x48	; 72
    2ab8:	dd 4f       	sbci	r29, 0xFD	; 253
    2aba:	98 81       	ld	r25, Y
    2abc:	c8 5b       	subi	r28, 0xB8	; 184
    2abe:	d2 40       	sbci	r29, 0x02	; 2
    2ac0:	91 50       	subi	r25, 0x01	; 1
    2ac2:	c8 54       	subi	r28, 0x48	; 72
    2ac4:	dd 4f       	sbci	r29, 0xFD	; 253
    2ac6:	98 83       	st	Y, r25
    2ac8:	c8 5b       	subi	r28, 0xB8	; 184
    2aca:	d2 40       	sbci	r29, 0x02	; 2
    2acc:	c8 54       	subi	r28, 0x48	; 72
    2ace:	dd 4f       	sbci	r29, 0xFD	; 253
    2ad0:	e8 81       	ld	r30, Y
    2ad2:	c8 5b       	subi	r28, 0xB8	; 184
    2ad4:	d2 40       	sbci	r29, 0x02	; 2
    2ad6:	ee 23       	and	r30, r30
    2ad8:	31 f6       	brne	.-116    	; 0x2a66 <main+0x91c>
    2ada:	ce 54       	subi	r28, 0x4E	; 78
    2adc:	dd 4f       	sbci	r29, 0xFD	; 253
    2ade:	e8 81       	ld	r30, Y
    2ae0:	f9 81       	ldd	r31, Y+1	; 0x01
    2ae2:	c2 5b       	subi	r28, 0xB2	; 178
    2ae4:	d2 40       	sbci	r29, 0x02	; 2
    2ae6:	17 86       	std	Z+15, r1	; 0x0f
	u8 ALREADY_MSG[10]="ALREADY!!";
    2ae8:	ce 01       	movw	r24, r28
    2aea:	81 54       	subi	r24, 0x41	; 65
    2aec:	9e 4f       	sbci	r25, 0xFE	; 254
    2aee:	c7 54       	subi	r28, 0x47	; 71
    2af0:	dd 4f       	sbci	r29, 0xFD	; 253
    2af2:	99 83       	std	Y+1, r25	; 0x01
    2af4:	88 83       	st	Y, r24
    2af6:	c9 5b       	subi	r28, 0xB9	; 185
    2af8:	d2 40       	sbci	r29, 0x02	; 2
    2afa:	8b e2       	ldi	r24, 0x2B	; 43
    2afc:	91 e0       	ldi	r25, 0x01	; 1
    2afe:	c5 54       	subi	r28, 0x45	; 69
    2b00:	dd 4f       	sbci	r29, 0xFD	; 253
    2b02:	99 83       	std	Y+1, r25	; 0x01
    2b04:	88 83       	st	Y, r24
    2b06:	cb 5b       	subi	r28, 0xBB	; 187
    2b08:	d2 40       	sbci	r29, 0x02	; 2
    2b0a:	9a e0       	ldi	r25, 0x0A	; 10
    2b0c:	c3 54       	subi	r28, 0x43	; 67
    2b0e:	dd 4f       	sbci	r29, 0xFD	; 253
    2b10:	98 83       	st	Y, r25
    2b12:	cd 5b       	subi	r28, 0xBD	; 189
    2b14:	d2 40       	sbci	r29, 0x02	; 2
    2b16:	c5 54       	subi	r28, 0x45	; 69
    2b18:	dd 4f       	sbci	r29, 0xFD	; 253
    2b1a:	e8 81       	ld	r30, Y
    2b1c:	f9 81       	ldd	r31, Y+1	; 0x01
    2b1e:	cb 5b       	subi	r28, 0xBB	; 187
    2b20:	d2 40       	sbci	r29, 0x02	; 2
    2b22:	00 80       	ld	r0, Z
    2b24:	c5 54       	subi	r28, 0x45	; 69
    2b26:	dd 4f       	sbci	r29, 0xFD	; 253
    2b28:	88 81       	ld	r24, Y
    2b2a:	99 81       	ldd	r25, Y+1	; 0x01
    2b2c:	cb 5b       	subi	r28, 0xBB	; 187
    2b2e:	d2 40       	sbci	r29, 0x02	; 2
    2b30:	01 96       	adiw	r24, 0x01	; 1
    2b32:	c5 54       	subi	r28, 0x45	; 69
    2b34:	dd 4f       	sbci	r29, 0xFD	; 253
    2b36:	99 83       	std	Y+1, r25	; 0x01
    2b38:	88 83       	st	Y, r24
    2b3a:	cb 5b       	subi	r28, 0xBB	; 187
    2b3c:	d2 40       	sbci	r29, 0x02	; 2
    2b3e:	c7 54       	subi	r28, 0x47	; 71
    2b40:	dd 4f       	sbci	r29, 0xFD	; 253
    2b42:	e8 81       	ld	r30, Y
    2b44:	f9 81       	ldd	r31, Y+1	; 0x01
    2b46:	c9 5b       	subi	r28, 0xB9	; 185
    2b48:	d2 40       	sbci	r29, 0x02	; 2
    2b4a:	00 82       	st	Z, r0
    2b4c:	c7 54       	subi	r28, 0x47	; 71
    2b4e:	dd 4f       	sbci	r29, 0xFD	; 253
    2b50:	88 81       	ld	r24, Y
    2b52:	99 81       	ldd	r25, Y+1	; 0x01
    2b54:	c9 5b       	subi	r28, 0xB9	; 185
    2b56:	d2 40       	sbci	r29, 0x02	; 2
    2b58:	01 96       	adiw	r24, 0x01	; 1
    2b5a:	c7 54       	subi	r28, 0x47	; 71
    2b5c:	dd 4f       	sbci	r29, 0xFD	; 253
    2b5e:	99 83       	std	Y+1, r25	; 0x01
    2b60:	88 83       	st	Y, r24
    2b62:	c9 5b       	subi	r28, 0xB9	; 185
    2b64:	d2 40       	sbci	r29, 0x02	; 2
    2b66:	c3 54       	subi	r28, 0x43	; 67
    2b68:	dd 4f       	sbci	r29, 0xFD	; 253
    2b6a:	98 81       	ld	r25, Y
    2b6c:	cd 5b       	subi	r28, 0xBD	; 189
    2b6e:	d2 40       	sbci	r29, 0x02	; 2
    2b70:	91 50       	subi	r25, 0x01	; 1
    2b72:	c3 54       	subi	r28, 0x43	; 67
    2b74:	dd 4f       	sbci	r29, 0xFD	; 253
    2b76:	98 83       	st	Y, r25
    2b78:	cd 5b       	subi	r28, 0xBD	; 189
    2b7a:	d2 40       	sbci	r29, 0x02	; 2
    2b7c:	c3 54       	subi	r28, 0x43	; 67
    2b7e:	dd 4f       	sbci	r29, 0xFD	; 253
    2b80:	e8 81       	ld	r30, Y
    2b82:	cd 5b       	subi	r28, 0xBD	; 189
    2b84:	d2 40       	sbci	r29, 0x02	; 2
    2b86:	ee 23       	and	r30, r30
    2b88:	31 f6       	brne	.-116    	; 0x2b16 <main+0x9cc>
	u8 SPEED_LEVEL_MSG[14] = "SPEED LEVEL: ";
    2b8a:	ce 01       	movw	r24, r28
    2b8c:	87 53       	subi	r24, 0x37	; 55
    2b8e:	9e 4f       	sbci	r25, 0xFE	; 254
    2b90:	c2 54       	subi	r28, 0x42	; 66
    2b92:	dd 4f       	sbci	r29, 0xFD	; 253
    2b94:	99 83       	std	Y+1, r25	; 0x01
    2b96:	88 83       	st	Y, r24
    2b98:	ce 5b       	subi	r28, 0xBE	; 190
    2b9a:	d2 40       	sbci	r29, 0x02	; 2
    2b9c:	85 e3       	ldi	r24, 0x35	; 53
    2b9e:	91 e0       	ldi	r25, 0x01	; 1
    2ba0:	c0 54       	subi	r28, 0x40	; 64
    2ba2:	dd 4f       	sbci	r29, 0xFD	; 253
    2ba4:	99 83       	std	Y+1, r25	; 0x01
    2ba6:	88 83       	st	Y, r24
    2ba8:	c0 5c       	subi	r28, 0xC0	; 192
    2baa:	d2 40       	sbci	r29, 0x02	; 2
    2bac:	9e e0       	ldi	r25, 0x0E	; 14
    2bae:	ce 53       	subi	r28, 0x3E	; 62
    2bb0:	dd 4f       	sbci	r29, 0xFD	; 253
    2bb2:	98 83       	st	Y, r25
    2bb4:	c2 5c       	subi	r28, 0xC2	; 194
    2bb6:	d2 40       	sbci	r29, 0x02	; 2
    2bb8:	c0 54       	subi	r28, 0x40	; 64
    2bba:	dd 4f       	sbci	r29, 0xFD	; 253
    2bbc:	e8 81       	ld	r30, Y
    2bbe:	f9 81       	ldd	r31, Y+1	; 0x01
    2bc0:	c0 5c       	subi	r28, 0xC0	; 192
    2bc2:	d2 40       	sbci	r29, 0x02	; 2
    2bc4:	00 80       	ld	r0, Z
    2bc6:	c0 54       	subi	r28, 0x40	; 64
    2bc8:	dd 4f       	sbci	r29, 0xFD	; 253
    2bca:	88 81       	ld	r24, Y
    2bcc:	99 81       	ldd	r25, Y+1	; 0x01
    2bce:	c0 5c       	subi	r28, 0xC0	; 192
    2bd0:	d2 40       	sbci	r29, 0x02	; 2
    2bd2:	01 96       	adiw	r24, 0x01	; 1
    2bd4:	c0 54       	subi	r28, 0x40	; 64
    2bd6:	dd 4f       	sbci	r29, 0xFD	; 253
    2bd8:	99 83       	std	Y+1, r25	; 0x01
    2bda:	88 83       	st	Y, r24
    2bdc:	c0 5c       	subi	r28, 0xC0	; 192
    2bde:	d2 40       	sbci	r29, 0x02	; 2
    2be0:	c2 54       	subi	r28, 0x42	; 66
    2be2:	dd 4f       	sbci	r29, 0xFD	; 253
    2be4:	e8 81       	ld	r30, Y
    2be6:	f9 81       	ldd	r31, Y+1	; 0x01
    2be8:	ce 5b       	subi	r28, 0xBE	; 190
    2bea:	d2 40       	sbci	r29, 0x02	; 2
    2bec:	00 82       	st	Z, r0
    2bee:	c2 54       	subi	r28, 0x42	; 66
    2bf0:	dd 4f       	sbci	r29, 0xFD	; 253
    2bf2:	88 81       	ld	r24, Y
    2bf4:	99 81       	ldd	r25, Y+1	; 0x01
    2bf6:	ce 5b       	subi	r28, 0xBE	; 190
    2bf8:	d2 40       	sbci	r29, 0x02	; 2
    2bfa:	01 96       	adiw	r24, 0x01	; 1
    2bfc:	c2 54       	subi	r28, 0x42	; 66
    2bfe:	dd 4f       	sbci	r29, 0xFD	; 253
    2c00:	99 83       	std	Y+1, r25	; 0x01
    2c02:	88 83       	st	Y, r24
    2c04:	ce 5b       	subi	r28, 0xBE	; 190
    2c06:	d2 40       	sbci	r29, 0x02	; 2
    2c08:	ce 53       	subi	r28, 0x3E	; 62
    2c0a:	dd 4f       	sbci	r29, 0xFD	; 253
    2c0c:	98 81       	ld	r25, Y
    2c0e:	c2 5c       	subi	r28, 0xC2	; 194
    2c10:	d2 40       	sbci	r29, 0x02	; 2
    2c12:	91 50       	subi	r25, 0x01	; 1
    2c14:	ce 53       	subi	r28, 0x3E	; 62
    2c16:	dd 4f       	sbci	r29, 0xFD	; 253
    2c18:	98 83       	st	Y, r25
    2c1a:	c2 5c       	subi	r28, 0xC2	; 194
    2c1c:	d2 40       	sbci	r29, 0x02	; 2
    2c1e:	ce 53       	subi	r28, 0x3E	; 62
    2c20:	dd 4f       	sbci	r29, 0xFD	; 253
    2c22:	e8 81       	ld	r30, Y
    2c24:	c2 5c       	subi	r28, 0xC2	; 194
    2c26:	d2 40       	sbci	r29, 0x02	; 2
    2c28:	ee 23       	and	r30, r30
    2c2a:	31 f6       	brne	.-116    	; 0x2bb8 <main+0xa6e>
	u8 AUTO_CONTROL_INPUT_MSG[15] = "* EN AUTO CTRL";
    2c2c:	ce 01       	movw	r24, r28
    2c2e:	89 52       	subi	r24, 0x29	; 41
    2c30:	9e 4f       	sbci	r25, 0xFE	; 254
    2c32:	cd 53       	subi	r28, 0x3D	; 61
    2c34:	dd 4f       	sbci	r29, 0xFD	; 253
    2c36:	99 83       	std	Y+1, r25	; 0x01
    2c38:	88 83       	st	Y, r24
    2c3a:	c3 5c       	subi	r28, 0xC3	; 195
    2c3c:	d2 40       	sbci	r29, 0x02	; 2
    2c3e:	83 e4       	ldi	r24, 0x43	; 67
    2c40:	91 e0       	ldi	r25, 0x01	; 1
    2c42:	cb 53       	subi	r28, 0x3B	; 59
    2c44:	dd 4f       	sbci	r29, 0xFD	; 253
    2c46:	99 83       	std	Y+1, r25	; 0x01
    2c48:	88 83       	st	Y, r24
    2c4a:	c5 5c       	subi	r28, 0xC5	; 197
    2c4c:	d2 40       	sbci	r29, 0x02	; 2
    2c4e:	9f e0       	ldi	r25, 0x0F	; 15
    2c50:	c9 53       	subi	r28, 0x39	; 57
    2c52:	dd 4f       	sbci	r29, 0xFD	; 253
    2c54:	98 83       	st	Y, r25
    2c56:	c7 5c       	subi	r28, 0xC7	; 199
    2c58:	d2 40       	sbci	r29, 0x02	; 2
    2c5a:	cb 53       	subi	r28, 0x3B	; 59
    2c5c:	dd 4f       	sbci	r29, 0xFD	; 253
    2c5e:	e8 81       	ld	r30, Y
    2c60:	f9 81       	ldd	r31, Y+1	; 0x01
    2c62:	c5 5c       	subi	r28, 0xC5	; 197
    2c64:	d2 40       	sbci	r29, 0x02	; 2
    2c66:	00 80       	ld	r0, Z
    2c68:	cb 53       	subi	r28, 0x3B	; 59
    2c6a:	dd 4f       	sbci	r29, 0xFD	; 253
    2c6c:	88 81       	ld	r24, Y
    2c6e:	99 81       	ldd	r25, Y+1	; 0x01
    2c70:	c5 5c       	subi	r28, 0xC5	; 197
    2c72:	d2 40       	sbci	r29, 0x02	; 2
    2c74:	01 96       	adiw	r24, 0x01	; 1
    2c76:	cb 53       	subi	r28, 0x3B	; 59
    2c78:	dd 4f       	sbci	r29, 0xFD	; 253
    2c7a:	99 83       	std	Y+1, r25	; 0x01
    2c7c:	88 83       	st	Y, r24
    2c7e:	c5 5c       	subi	r28, 0xC5	; 197
    2c80:	d2 40       	sbci	r29, 0x02	; 2
    2c82:	cd 53       	subi	r28, 0x3D	; 61
    2c84:	dd 4f       	sbci	r29, 0xFD	; 253
    2c86:	e8 81       	ld	r30, Y
    2c88:	f9 81       	ldd	r31, Y+1	; 0x01
    2c8a:	c3 5c       	subi	r28, 0xC3	; 195
    2c8c:	d2 40       	sbci	r29, 0x02	; 2
    2c8e:	00 82       	st	Z, r0
    2c90:	cd 53       	subi	r28, 0x3D	; 61
    2c92:	dd 4f       	sbci	r29, 0xFD	; 253
    2c94:	88 81       	ld	r24, Y
    2c96:	99 81       	ldd	r25, Y+1	; 0x01
    2c98:	c3 5c       	subi	r28, 0xC3	; 195
    2c9a:	d2 40       	sbci	r29, 0x02	; 2
    2c9c:	01 96       	adiw	r24, 0x01	; 1
    2c9e:	cd 53       	subi	r28, 0x3D	; 61
    2ca0:	dd 4f       	sbci	r29, 0xFD	; 253
    2ca2:	99 83       	std	Y+1, r25	; 0x01
    2ca4:	88 83       	st	Y, r24
    2ca6:	c3 5c       	subi	r28, 0xC3	; 195
    2ca8:	d2 40       	sbci	r29, 0x02	; 2
    2caa:	c9 53       	subi	r28, 0x39	; 57
    2cac:	dd 4f       	sbci	r29, 0xFD	; 253
    2cae:	98 81       	ld	r25, Y
    2cb0:	c7 5c       	subi	r28, 0xC7	; 199
    2cb2:	d2 40       	sbci	r29, 0x02	; 2
    2cb4:	91 50       	subi	r25, 0x01	; 1
    2cb6:	c9 53       	subi	r28, 0x39	; 57
    2cb8:	dd 4f       	sbci	r29, 0xFD	; 253
    2cba:	98 83       	st	Y, r25
    2cbc:	c7 5c       	subi	r28, 0xC7	; 199
    2cbe:	d2 40       	sbci	r29, 0x02	; 2
    2cc0:	c9 53       	subi	r28, 0x39	; 57
    2cc2:	dd 4f       	sbci	r29, 0xFD	; 253
    2cc4:	e8 81       	ld	r30, Y
    2cc6:	c7 5c       	subi	r28, 0xC7	; 199
    2cc8:	d2 40       	sbci	r29, 0x02	; 2
    2cca:	ee 23       	and	r30, r30
    2ccc:	31 f6       	brne	.-116    	; 0x2c5a <main+0xb10>
	u8 AUTO_CONTROL_MSG[13]="AUTO CONTROL";
    2cce:	ce 01       	movw	r24, r28
    2cd0:	8a 51       	subi	r24, 0x1A	; 26
    2cd2:	9e 4f       	sbci	r25, 0xFE	; 254
    2cd4:	c8 53       	subi	r28, 0x38	; 56
    2cd6:	dd 4f       	sbci	r29, 0xFD	; 253
    2cd8:	99 83       	std	Y+1, r25	; 0x01
    2cda:	88 83       	st	Y, r24
    2cdc:	c8 5c       	subi	r28, 0xC8	; 200
    2cde:	d2 40       	sbci	r29, 0x02	; 2
    2ce0:	82 e5       	ldi	r24, 0x52	; 82
    2ce2:	91 e0       	ldi	r25, 0x01	; 1
    2ce4:	c6 53       	subi	r28, 0x36	; 54
    2ce6:	dd 4f       	sbci	r29, 0xFD	; 253
    2ce8:	99 83       	std	Y+1, r25	; 0x01
    2cea:	88 83       	st	Y, r24
    2cec:	ca 5c       	subi	r28, 0xCA	; 202
    2cee:	d2 40       	sbci	r29, 0x02	; 2
    2cf0:	9d e0       	ldi	r25, 0x0D	; 13
    2cf2:	c4 53       	subi	r28, 0x34	; 52
    2cf4:	dd 4f       	sbci	r29, 0xFD	; 253
    2cf6:	98 83       	st	Y, r25
    2cf8:	cc 5c       	subi	r28, 0xCC	; 204
    2cfa:	d2 40       	sbci	r29, 0x02	; 2
    2cfc:	c6 53       	subi	r28, 0x36	; 54
    2cfe:	dd 4f       	sbci	r29, 0xFD	; 253
    2d00:	e8 81       	ld	r30, Y
    2d02:	f9 81       	ldd	r31, Y+1	; 0x01
    2d04:	ca 5c       	subi	r28, 0xCA	; 202
    2d06:	d2 40       	sbci	r29, 0x02	; 2
    2d08:	00 80       	ld	r0, Z
    2d0a:	c6 53       	subi	r28, 0x36	; 54
    2d0c:	dd 4f       	sbci	r29, 0xFD	; 253
    2d0e:	88 81       	ld	r24, Y
    2d10:	99 81       	ldd	r25, Y+1	; 0x01
    2d12:	ca 5c       	subi	r28, 0xCA	; 202
    2d14:	d2 40       	sbci	r29, 0x02	; 2
    2d16:	01 96       	adiw	r24, 0x01	; 1
    2d18:	c6 53       	subi	r28, 0x36	; 54
    2d1a:	dd 4f       	sbci	r29, 0xFD	; 253
    2d1c:	99 83       	std	Y+1, r25	; 0x01
    2d1e:	88 83       	st	Y, r24
    2d20:	ca 5c       	subi	r28, 0xCA	; 202
    2d22:	d2 40       	sbci	r29, 0x02	; 2
    2d24:	c8 53       	subi	r28, 0x38	; 56
    2d26:	dd 4f       	sbci	r29, 0xFD	; 253
    2d28:	e8 81       	ld	r30, Y
    2d2a:	f9 81       	ldd	r31, Y+1	; 0x01
    2d2c:	c8 5c       	subi	r28, 0xC8	; 200
    2d2e:	d2 40       	sbci	r29, 0x02	; 2
    2d30:	00 82       	st	Z, r0
    2d32:	c8 53       	subi	r28, 0x38	; 56
    2d34:	dd 4f       	sbci	r29, 0xFD	; 253
    2d36:	88 81       	ld	r24, Y
    2d38:	99 81       	ldd	r25, Y+1	; 0x01
    2d3a:	c8 5c       	subi	r28, 0xC8	; 200
    2d3c:	d2 40       	sbci	r29, 0x02	; 2
    2d3e:	01 96       	adiw	r24, 0x01	; 1
    2d40:	c8 53       	subi	r28, 0x38	; 56
    2d42:	dd 4f       	sbci	r29, 0xFD	; 253
    2d44:	99 83       	std	Y+1, r25	; 0x01
    2d46:	88 83       	st	Y, r24
    2d48:	c8 5c       	subi	r28, 0xC8	; 200
    2d4a:	d2 40       	sbci	r29, 0x02	; 2
    2d4c:	c4 53       	subi	r28, 0x34	; 52
    2d4e:	dd 4f       	sbci	r29, 0xFD	; 253
    2d50:	98 81       	ld	r25, Y
    2d52:	cc 5c       	subi	r28, 0xCC	; 204
    2d54:	d2 40       	sbci	r29, 0x02	; 2
    2d56:	91 50       	subi	r25, 0x01	; 1
    2d58:	c4 53       	subi	r28, 0x34	; 52
    2d5a:	dd 4f       	sbci	r29, 0xFD	; 253
    2d5c:	98 83       	st	Y, r25
    2d5e:	cc 5c       	subi	r28, 0xCC	; 204
    2d60:	d2 40       	sbci	r29, 0x02	; 2
    2d62:	c4 53       	subi	r28, 0x34	; 52
    2d64:	dd 4f       	sbci	r29, 0xFD	; 253
    2d66:	e8 81       	ld	r30, Y
    2d68:	cc 5c       	subi	r28, 0xCC	; 204
    2d6a:	d2 40       	sbci	r29, 0x02	; 2
    2d6c:	ee 23       	and	r30, r30
    2d6e:	31 f6       	brne	.-116    	; 0x2cfc <main+0xbb2>
	u8 LED_STATE_MSG[10]="LED STATE";
    2d70:	ce 01       	movw	r24, r28
    2d72:	8d 50       	subi	r24, 0x0D	; 13
    2d74:	9e 4f       	sbci	r25, 0xFE	; 254
    2d76:	c3 53       	subi	r28, 0x33	; 51
    2d78:	dd 4f       	sbci	r29, 0xFD	; 253
    2d7a:	99 83       	std	Y+1, r25	; 0x01
    2d7c:	88 83       	st	Y, r24
    2d7e:	cd 5c       	subi	r28, 0xCD	; 205
    2d80:	d2 40       	sbci	r29, 0x02	; 2
    2d82:	8f e5       	ldi	r24, 0x5F	; 95
    2d84:	91 e0       	ldi	r25, 0x01	; 1
    2d86:	c1 53       	subi	r28, 0x31	; 49
    2d88:	dd 4f       	sbci	r29, 0xFD	; 253
    2d8a:	99 83       	std	Y+1, r25	; 0x01
    2d8c:	88 83       	st	Y, r24
    2d8e:	cf 5c       	subi	r28, 0xCF	; 207
    2d90:	d2 40       	sbci	r29, 0x02	; 2
    2d92:	9a e0       	ldi	r25, 0x0A	; 10
    2d94:	cf 52       	subi	r28, 0x2F	; 47
    2d96:	dd 4f       	sbci	r29, 0xFD	; 253
    2d98:	98 83       	st	Y, r25
    2d9a:	c1 5d       	subi	r28, 0xD1	; 209
    2d9c:	d2 40       	sbci	r29, 0x02	; 2
    2d9e:	c1 53       	subi	r28, 0x31	; 49
    2da0:	dd 4f       	sbci	r29, 0xFD	; 253
    2da2:	e8 81       	ld	r30, Y
    2da4:	f9 81       	ldd	r31, Y+1	; 0x01
    2da6:	cf 5c       	subi	r28, 0xCF	; 207
    2da8:	d2 40       	sbci	r29, 0x02	; 2
    2daa:	00 80       	ld	r0, Z
    2dac:	c1 53       	subi	r28, 0x31	; 49
    2dae:	dd 4f       	sbci	r29, 0xFD	; 253
    2db0:	88 81       	ld	r24, Y
    2db2:	99 81       	ldd	r25, Y+1	; 0x01
    2db4:	cf 5c       	subi	r28, 0xCF	; 207
    2db6:	d2 40       	sbci	r29, 0x02	; 2
    2db8:	01 96       	adiw	r24, 0x01	; 1
    2dba:	c1 53       	subi	r28, 0x31	; 49
    2dbc:	dd 4f       	sbci	r29, 0xFD	; 253
    2dbe:	99 83       	std	Y+1, r25	; 0x01
    2dc0:	88 83       	st	Y, r24
    2dc2:	cf 5c       	subi	r28, 0xCF	; 207
    2dc4:	d2 40       	sbci	r29, 0x02	; 2
    2dc6:	c3 53       	subi	r28, 0x33	; 51
    2dc8:	dd 4f       	sbci	r29, 0xFD	; 253
    2dca:	e8 81       	ld	r30, Y
    2dcc:	f9 81       	ldd	r31, Y+1	; 0x01
    2dce:	cd 5c       	subi	r28, 0xCD	; 205
    2dd0:	d2 40       	sbci	r29, 0x02	; 2
    2dd2:	00 82       	st	Z, r0
    2dd4:	c3 53       	subi	r28, 0x33	; 51
    2dd6:	dd 4f       	sbci	r29, 0xFD	; 253
    2dd8:	88 81       	ld	r24, Y
    2dda:	99 81       	ldd	r25, Y+1	; 0x01
    2ddc:	cd 5c       	subi	r28, 0xCD	; 205
    2dde:	d2 40       	sbci	r29, 0x02	; 2
    2de0:	01 96       	adiw	r24, 0x01	; 1
    2de2:	c3 53       	subi	r28, 0x33	; 51
    2de4:	dd 4f       	sbci	r29, 0xFD	; 253
    2de6:	99 83       	std	Y+1, r25	; 0x01
    2de8:	88 83       	st	Y, r24
    2dea:	cd 5c       	subi	r28, 0xCD	; 205
    2dec:	d2 40       	sbci	r29, 0x02	; 2
    2dee:	cf 52       	subi	r28, 0x2F	; 47
    2df0:	dd 4f       	sbci	r29, 0xFD	; 253
    2df2:	98 81       	ld	r25, Y
    2df4:	c1 5d       	subi	r28, 0xD1	; 209
    2df6:	d2 40       	sbci	r29, 0x02	; 2
    2df8:	91 50       	subi	r25, 0x01	; 1
    2dfa:	cf 52       	subi	r28, 0x2F	; 47
    2dfc:	dd 4f       	sbci	r29, 0xFD	; 253
    2dfe:	98 83       	st	Y, r25
    2e00:	c1 5d       	subi	r28, 0xD1	; 209
    2e02:	d2 40       	sbci	r29, 0x02	; 2
    2e04:	cf 52       	subi	r28, 0x2F	; 47
    2e06:	dd 4f       	sbci	r29, 0xFD	; 253
    2e08:	e8 81       	ld	r30, Y
    2e0a:	c1 5d       	subi	r28, 0xD1	; 209
    2e0c:	d2 40       	sbci	r29, 0x02	; 2
    2e0e:	ee 23       	and	r30, r30
    2e10:	31 f6       	brne	.-116    	; 0x2d9e <main+0xc54>
	u8 TOG_LED_STATE_MSG[17] = "5 to TOGGLE LEDs";
    2e12:	ce 01       	movw	r24, r28
    2e14:	83 50       	subi	r24, 0x03	; 3
    2e16:	9e 4f       	sbci	r25, 0xFE	; 254
    2e18:	ce 52       	subi	r28, 0x2E	; 46
    2e1a:	dd 4f       	sbci	r29, 0xFD	; 253
    2e1c:	99 83       	std	Y+1, r25	; 0x01
    2e1e:	88 83       	st	Y, r24
    2e20:	c2 5d       	subi	r28, 0xD2	; 210
    2e22:	d2 40       	sbci	r29, 0x02	; 2
    2e24:	89 e6       	ldi	r24, 0x69	; 105
    2e26:	91 e0       	ldi	r25, 0x01	; 1
    2e28:	cc 52       	subi	r28, 0x2C	; 44
    2e2a:	dd 4f       	sbci	r29, 0xFD	; 253
    2e2c:	99 83       	std	Y+1, r25	; 0x01
    2e2e:	88 83       	st	Y, r24
    2e30:	c4 5d       	subi	r28, 0xD4	; 212
    2e32:	d2 40       	sbci	r29, 0x02	; 2
    2e34:	91 e1       	ldi	r25, 0x11	; 17
    2e36:	ca 52       	subi	r28, 0x2A	; 42
    2e38:	dd 4f       	sbci	r29, 0xFD	; 253
    2e3a:	98 83       	st	Y, r25
    2e3c:	c6 5d       	subi	r28, 0xD6	; 214
    2e3e:	d2 40       	sbci	r29, 0x02	; 2
    2e40:	cc 52       	subi	r28, 0x2C	; 44
    2e42:	dd 4f       	sbci	r29, 0xFD	; 253
    2e44:	e8 81       	ld	r30, Y
    2e46:	f9 81       	ldd	r31, Y+1	; 0x01
    2e48:	c4 5d       	subi	r28, 0xD4	; 212
    2e4a:	d2 40       	sbci	r29, 0x02	; 2
    2e4c:	00 80       	ld	r0, Z
    2e4e:	cc 52       	subi	r28, 0x2C	; 44
    2e50:	dd 4f       	sbci	r29, 0xFD	; 253
    2e52:	88 81       	ld	r24, Y
    2e54:	99 81       	ldd	r25, Y+1	; 0x01
    2e56:	c4 5d       	subi	r28, 0xD4	; 212
    2e58:	d2 40       	sbci	r29, 0x02	; 2
    2e5a:	01 96       	adiw	r24, 0x01	; 1
    2e5c:	cc 52       	subi	r28, 0x2C	; 44
    2e5e:	dd 4f       	sbci	r29, 0xFD	; 253
    2e60:	99 83       	std	Y+1, r25	; 0x01
    2e62:	88 83       	st	Y, r24
    2e64:	c4 5d       	subi	r28, 0xD4	; 212
    2e66:	d2 40       	sbci	r29, 0x02	; 2
    2e68:	ce 52       	subi	r28, 0x2E	; 46
    2e6a:	dd 4f       	sbci	r29, 0xFD	; 253
    2e6c:	e8 81       	ld	r30, Y
    2e6e:	f9 81       	ldd	r31, Y+1	; 0x01
    2e70:	c2 5d       	subi	r28, 0xD2	; 210
    2e72:	d2 40       	sbci	r29, 0x02	; 2
    2e74:	00 82       	st	Z, r0
    2e76:	ce 52       	subi	r28, 0x2E	; 46
    2e78:	dd 4f       	sbci	r29, 0xFD	; 253
    2e7a:	88 81       	ld	r24, Y
    2e7c:	99 81       	ldd	r25, Y+1	; 0x01
    2e7e:	c2 5d       	subi	r28, 0xD2	; 210
    2e80:	d2 40       	sbci	r29, 0x02	; 2
    2e82:	01 96       	adiw	r24, 0x01	; 1
    2e84:	ce 52       	subi	r28, 0x2E	; 46
    2e86:	dd 4f       	sbci	r29, 0xFD	; 253
    2e88:	99 83       	std	Y+1, r25	; 0x01
    2e8a:	88 83       	st	Y, r24
    2e8c:	c2 5d       	subi	r28, 0xD2	; 210
    2e8e:	d2 40       	sbci	r29, 0x02	; 2
    2e90:	ca 52       	subi	r28, 0x2A	; 42
    2e92:	dd 4f       	sbci	r29, 0xFD	; 253
    2e94:	98 81       	ld	r25, Y
    2e96:	c6 5d       	subi	r28, 0xD6	; 214
    2e98:	d2 40       	sbci	r29, 0x02	; 2
    2e9a:	91 50       	subi	r25, 0x01	; 1
    2e9c:	ca 52       	subi	r28, 0x2A	; 42
    2e9e:	dd 4f       	sbci	r29, 0xFD	; 253
    2ea0:	98 83       	st	Y, r25
    2ea2:	c6 5d       	subi	r28, 0xD6	; 214
    2ea4:	d2 40       	sbci	r29, 0x02	; 2
    2ea6:	ca 52       	subi	r28, 0x2A	; 42
    2ea8:	dd 4f       	sbci	r29, 0xFD	; 253
    2eaa:	e8 81       	ld	r30, Y
    2eac:	c6 5d       	subi	r28, 0xD6	; 214
    2eae:	d2 40       	sbci	r29, 0x02	; 2
    2eb0:	ee 23       	and	r30, r30
    2eb2:	31 f6       	brne	.-116    	; 0x2e40 <main+0xcf6>
	u8 TOGGLING_LEDS_MSG[14]="TOGGLING LEDS";
    2eb4:	ce 01       	movw	r24, r28
    2eb6:	82 5f       	subi	r24, 0xF2	; 242
    2eb8:	9d 4f       	sbci	r25, 0xFD	; 253
    2eba:	c9 52       	subi	r28, 0x29	; 41
    2ebc:	dd 4f       	sbci	r29, 0xFD	; 253
    2ebe:	99 83       	std	Y+1, r25	; 0x01
    2ec0:	88 83       	st	Y, r24
    2ec2:	c7 5d       	subi	r28, 0xD7	; 215
    2ec4:	d2 40       	sbci	r29, 0x02	; 2
    2ec6:	8a e7       	ldi	r24, 0x7A	; 122
    2ec8:	91 e0       	ldi	r25, 0x01	; 1
    2eca:	c7 52       	subi	r28, 0x27	; 39
    2ecc:	dd 4f       	sbci	r29, 0xFD	; 253
    2ece:	99 83       	std	Y+1, r25	; 0x01
    2ed0:	88 83       	st	Y, r24
    2ed2:	c9 5d       	subi	r28, 0xD9	; 217
    2ed4:	d2 40       	sbci	r29, 0x02	; 2
    2ed6:	9e e0       	ldi	r25, 0x0E	; 14
    2ed8:	c5 52       	subi	r28, 0x25	; 37
    2eda:	dd 4f       	sbci	r29, 0xFD	; 253
    2edc:	98 83       	st	Y, r25
    2ede:	cb 5d       	subi	r28, 0xDB	; 219
    2ee0:	d2 40       	sbci	r29, 0x02	; 2
    2ee2:	c7 52       	subi	r28, 0x27	; 39
    2ee4:	dd 4f       	sbci	r29, 0xFD	; 253
    2ee6:	e8 81       	ld	r30, Y
    2ee8:	f9 81       	ldd	r31, Y+1	; 0x01
    2eea:	c9 5d       	subi	r28, 0xD9	; 217
    2eec:	d2 40       	sbci	r29, 0x02	; 2
    2eee:	00 80       	ld	r0, Z
    2ef0:	c7 52       	subi	r28, 0x27	; 39
    2ef2:	dd 4f       	sbci	r29, 0xFD	; 253
    2ef4:	88 81       	ld	r24, Y
    2ef6:	99 81       	ldd	r25, Y+1	; 0x01
    2ef8:	c9 5d       	subi	r28, 0xD9	; 217
    2efa:	d2 40       	sbci	r29, 0x02	; 2
    2efc:	01 96       	adiw	r24, 0x01	; 1
    2efe:	c7 52       	subi	r28, 0x27	; 39
    2f00:	dd 4f       	sbci	r29, 0xFD	; 253
    2f02:	99 83       	std	Y+1, r25	; 0x01
    2f04:	88 83       	st	Y, r24
    2f06:	c9 5d       	subi	r28, 0xD9	; 217
    2f08:	d2 40       	sbci	r29, 0x02	; 2
    2f0a:	c9 52       	subi	r28, 0x29	; 41
    2f0c:	dd 4f       	sbci	r29, 0xFD	; 253
    2f0e:	e8 81       	ld	r30, Y
    2f10:	f9 81       	ldd	r31, Y+1	; 0x01
    2f12:	c7 5d       	subi	r28, 0xD7	; 215
    2f14:	d2 40       	sbci	r29, 0x02	; 2
    2f16:	00 82       	st	Z, r0
    2f18:	c9 52       	subi	r28, 0x29	; 41
    2f1a:	dd 4f       	sbci	r29, 0xFD	; 253
    2f1c:	88 81       	ld	r24, Y
    2f1e:	99 81       	ldd	r25, Y+1	; 0x01
    2f20:	c7 5d       	subi	r28, 0xD7	; 215
    2f22:	d2 40       	sbci	r29, 0x02	; 2
    2f24:	01 96       	adiw	r24, 0x01	; 1
    2f26:	c9 52       	subi	r28, 0x29	; 41
    2f28:	dd 4f       	sbci	r29, 0xFD	; 253
    2f2a:	99 83       	std	Y+1, r25	; 0x01
    2f2c:	88 83       	st	Y, r24
    2f2e:	c7 5d       	subi	r28, 0xD7	; 215
    2f30:	d2 40       	sbci	r29, 0x02	; 2
    2f32:	c5 52       	subi	r28, 0x25	; 37
    2f34:	dd 4f       	sbci	r29, 0xFD	; 253
    2f36:	98 81       	ld	r25, Y
    2f38:	cb 5d       	subi	r28, 0xDB	; 219
    2f3a:	d2 40       	sbci	r29, 0x02	; 2
    2f3c:	91 50       	subi	r25, 0x01	; 1
    2f3e:	c5 52       	subi	r28, 0x25	; 37
    2f40:	dd 4f       	sbci	r29, 0xFD	; 253
    2f42:	98 83       	st	Y, r25
    2f44:	cb 5d       	subi	r28, 0xDB	; 219
    2f46:	d2 40       	sbci	r29, 0x02	; 2
    2f48:	c5 52       	subi	r28, 0x25	; 37
    2f4a:	dd 4f       	sbci	r29, 0xFD	; 253
    2f4c:	e8 81       	ld	r30, Y
    2f4e:	cb 5d       	subi	r28, 0xDB	; 219
    2f50:	d2 40       	sbci	r29, 0x02	; 2
    2f52:	ee 23       	and	r30, r30
    2f54:	31 f6       	brne	.-116    	; 0x2ee2 <main+0xd98>
	u8 SHOW_LED_STATE_MSG[15] = "6 to SHOW LEDs";
    2f56:	ce 01       	movw	r24, r28
    2f58:	84 5e       	subi	r24, 0xE4	; 228
    2f5a:	9d 4f       	sbci	r25, 0xFD	; 253
    2f5c:	c4 52       	subi	r28, 0x24	; 36
    2f5e:	dd 4f       	sbci	r29, 0xFD	; 253
    2f60:	99 83       	std	Y+1, r25	; 0x01
    2f62:	88 83       	st	Y, r24
    2f64:	cc 5d       	subi	r28, 0xDC	; 220
    2f66:	d2 40       	sbci	r29, 0x02	; 2
    2f68:	88 e8       	ldi	r24, 0x88	; 136
    2f6a:	91 e0       	ldi	r25, 0x01	; 1
    2f6c:	c2 52       	subi	r28, 0x22	; 34
    2f6e:	dd 4f       	sbci	r29, 0xFD	; 253
    2f70:	99 83       	std	Y+1, r25	; 0x01
    2f72:	88 83       	st	Y, r24
    2f74:	ce 5d       	subi	r28, 0xDE	; 222
    2f76:	d2 40       	sbci	r29, 0x02	; 2
    2f78:	9f e0       	ldi	r25, 0x0F	; 15
    2f7a:	c0 52       	subi	r28, 0x20	; 32
    2f7c:	dd 4f       	sbci	r29, 0xFD	; 253
    2f7e:	98 83       	st	Y, r25
    2f80:	c0 5e       	subi	r28, 0xE0	; 224
    2f82:	d2 40       	sbci	r29, 0x02	; 2
    2f84:	c2 52       	subi	r28, 0x22	; 34
    2f86:	dd 4f       	sbci	r29, 0xFD	; 253
    2f88:	e8 81       	ld	r30, Y
    2f8a:	f9 81       	ldd	r31, Y+1	; 0x01
    2f8c:	ce 5d       	subi	r28, 0xDE	; 222
    2f8e:	d2 40       	sbci	r29, 0x02	; 2
    2f90:	00 80       	ld	r0, Z
    2f92:	c2 52       	subi	r28, 0x22	; 34
    2f94:	dd 4f       	sbci	r29, 0xFD	; 253
    2f96:	88 81       	ld	r24, Y
    2f98:	99 81       	ldd	r25, Y+1	; 0x01
    2f9a:	ce 5d       	subi	r28, 0xDE	; 222
    2f9c:	d2 40       	sbci	r29, 0x02	; 2
    2f9e:	01 96       	adiw	r24, 0x01	; 1
    2fa0:	c2 52       	subi	r28, 0x22	; 34
    2fa2:	dd 4f       	sbci	r29, 0xFD	; 253
    2fa4:	99 83       	std	Y+1, r25	; 0x01
    2fa6:	88 83       	st	Y, r24
    2fa8:	ce 5d       	subi	r28, 0xDE	; 222
    2faa:	d2 40       	sbci	r29, 0x02	; 2
    2fac:	c4 52       	subi	r28, 0x24	; 36
    2fae:	dd 4f       	sbci	r29, 0xFD	; 253
    2fb0:	e8 81       	ld	r30, Y
    2fb2:	f9 81       	ldd	r31, Y+1	; 0x01
    2fb4:	cc 5d       	subi	r28, 0xDC	; 220
    2fb6:	d2 40       	sbci	r29, 0x02	; 2
    2fb8:	00 82       	st	Z, r0
    2fba:	c4 52       	subi	r28, 0x24	; 36
    2fbc:	dd 4f       	sbci	r29, 0xFD	; 253
    2fbe:	88 81       	ld	r24, Y
    2fc0:	99 81       	ldd	r25, Y+1	; 0x01
    2fc2:	cc 5d       	subi	r28, 0xDC	; 220
    2fc4:	d2 40       	sbci	r29, 0x02	; 2
    2fc6:	01 96       	adiw	r24, 0x01	; 1
    2fc8:	c4 52       	subi	r28, 0x24	; 36
    2fca:	dd 4f       	sbci	r29, 0xFD	; 253
    2fcc:	99 83       	std	Y+1, r25	; 0x01
    2fce:	88 83       	st	Y, r24
    2fd0:	cc 5d       	subi	r28, 0xDC	; 220
    2fd2:	d2 40       	sbci	r29, 0x02	; 2
    2fd4:	c0 52       	subi	r28, 0x20	; 32
    2fd6:	dd 4f       	sbci	r29, 0xFD	; 253
    2fd8:	98 81       	ld	r25, Y
    2fda:	c0 5e       	subi	r28, 0xE0	; 224
    2fdc:	d2 40       	sbci	r29, 0x02	; 2
    2fde:	91 50       	subi	r25, 0x01	; 1
    2fe0:	c0 52       	subi	r28, 0x20	; 32
    2fe2:	dd 4f       	sbci	r29, 0xFD	; 253
    2fe4:	98 83       	st	Y, r25
    2fe6:	c0 5e       	subi	r28, 0xE0	; 224
    2fe8:	d2 40       	sbci	r29, 0x02	; 2
    2fea:	c0 52       	subi	r28, 0x20	; 32
    2fec:	dd 4f       	sbci	r29, 0xFD	; 253
    2fee:	e8 81       	ld	r30, Y
    2ff0:	c0 5e       	subi	r28, 0xE0	; 224
    2ff2:	d2 40       	sbci	r29, 0x02	; 2
    2ff4:	ee 23       	and	r30, r30
    2ff6:	31 f6       	brne	.-116    	; 0x2f84 <main+0xe3a>
	u8 ON_MSG[3]="ON";
    2ff8:	ce 01       	movw	r24, r28
    2ffa:	85 5d       	subi	r24, 0xD5	; 213
    2ffc:	9d 4f       	sbci	r25, 0xFD	; 253
    2ffe:	cf 51       	subi	r28, 0x1F	; 31
    3000:	dd 4f       	sbci	r29, 0xFD	; 253
    3002:	99 83       	std	Y+1, r25	; 0x01
    3004:	88 83       	st	Y, r24
    3006:	c1 5e       	subi	r28, 0xE1	; 225
    3008:	d2 40       	sbci	r29, 0x02	; 2
    300a:	87 e9       	ldi	r24, 0x97	; 151
    300c:	91 e0       	ldi	r25, 0x01	; 1
    300e:	cd 51       	subi	r28, 0x1D	; 29
    3010:	dd 4f       	sbci	r29, 0xFD	; 253
    3012:	99 83       	std	Y+1, r25	; 0x01
    3014:	88 83       	st	Y, r24
    3016:	c3 5e       	subi	r28, 0xE3	; 227
    3018:	d2 40       	sbci	r29, 0x02	; 2
    301a:	93 e0       	ldi	r25, 0x03	; 3
    301c:	cb 51       	subi	r28, 0x1B	; 27
    301e:	dd 4f       	sbci	r29, 0xFD	; 253
    3020:	98 83       	st	Y, r25
    3022:	c5 5e       	subi	r28, 0xE5	; 229
    3024:	d2 40       	sbci	r29, 0x02	; 2
    3026:	cd 51       	subi	r28, 0x1D	; 29
    3028:	dd 4f       	sbci	r29, 0xFD	; 253
    302a:	e8 81       	ld	r30, Y
    302c:	f9 81       	ldd	r31, Y+1	; 0x01
    302e:	c3 5e       	subi	r28, 0xE3	; 227
    3030:	d2 40       	sbci	r29, 0x02	; 2
    3032:	00 80       	ld	r0, Z
    3034:	cd 51       	subi	r28, 0x1D	; 29
    3036:	dd 4f       	sbci	r29, 0xFD	; 253
    3038:	88 81       	ld	r24, Y
    303a:	99 81       	ldd	r25, Y+1	; 0x01
    303c:	c3 5e       	subi	r28, 0xE3	; 227
    303e:	d2 40       	sbci	r29, 0x02	; 2
    3040:	01 96       	adiw	r24, 0x01	; 1
    3042:	cd 51       	subi	r28, 0x1D	; 29
    3044:	dd 4f       	sbci	r29, 0xFD	; 253
    3046:	99 83       	std	Y+1, r25	; 0x01
    3048:	88 83       	st	Y, r24
    304a:	c3 5e       	subi	r28, 0xE3	; 227
    304c:	d2 40       	sbci	r29, 0x02	; 2
    304e:	cf 51       	subi	r28, 0x1F	; 31
    3050:	dd 4f       	sbci	r29, 0xFD	; 253
    3052:	e8 81       	ld	r30, Y
    3054:	f9 81       	ldd	r31, Y+1	; 0x01
    3056:	c1 5e       	subi	r28, 0xE1	; 225
    3058:	d2 40       	sbci	r29, 0x02	; 2
    305a:	00 82       	st	Z, r0
    305c:	cf 51       	subi	r28, 0x1F	; 31
    305e:	dd 4f       	sbci	r29, 0xFD	; 253
    3060:	88 81       	ld	r24, Y
    3062:	99 81       	ldd	r25, Y+1	; 0x01
    3064:	c1 5e       	subi	r28, 0xE1	; 225
    3066:	d2 40       	sbci	r29, 0x02	; 2
    3068:	01 96       	adiw	r24, 0x01	; 1
    306a:	cf 51       	subi	r28, 0x1F	; 31
    306c:	dd 4f       	sbci	r29, 0xFD	; 253
    306e:	99 83       	std	Y+1, r25	; 0x01
    3070:	88 83       	st	Y, r24
    3072:	c1 5e       	subi	r28, 0xE1	; 225
    3074:	d2 40       	sbci	r29, 0x02	; 2
    3076:	cb 51       	subi	r28, 0x1B	; 27
    3078:	dd 4f       	sbci	r29, 0xFD	; 253
    307a:	98 81       	ld	r25, Y
    307c:	c5 5e       	subi	r28, 0xE5	; 229
    307e:	d2 40       	sbci	r29, 0x02	; 2
    3080:	91 50       	subi	r25, 0x01	; 1
    3082:	cb 51       	subi	r28, 0x1B	; 27
    3084:	dd 4f       	sbci	r29, 0xFD	; 253
    3086:	98 83       	st	Y, r25
    3088:	c5 5e       	subi	r28, 0xE5	; 229
    308a:	d2 40       	sbci	r29, 0x02	; 2
    308c:	cb 51       	subi	r28, 0x1B	; 27
    308e:	dd 4f       	sbci	r29, 0xFD	; 253
    3090:	e8 81       	ld	r30, Y
    3092:	c5 5e       	subi	r28, 0xE5	; 229
    3094:	d2 40       	sbci	r29, 0x02	; 2
    3096:	ee 23       	and	r30, r30
    3098:	31 f6       	brne	.-116    	; 0x3026 <main+0xedc>
	u8 OFF_MSG[4]="OFF";
    309a:	fe 01       	movw	r30, r28
    309c:	e2 5d       	subi	r30, 0xD2	; 210
    309e:	fd 4f       	sbci	r31, 0xFD	; 253
    30a0:	80 91 9a 01 	lds	r24, 0x019A
    30a4:	90 91 9b 01 	lds	r25, 0x019B
    30a8:	a0 91 9c 01 	lds	r26, 0x019C
    30ac:	b0 91 9d 01 	lds	r27, 0x019D
    30b0:	80 83       	st	Z, r24
    30b2:	91 83       	std	Z+1, r25	; 0x01
    30b4:	a2 83       	std	Z+2, r26	; 0x02
    30b6:	b3 83       	std	Z+3, r27	; 0x03
	u8 SETTINGS_MENU_MSG[9] = "OPTIONS:";
    30b8:	ce 01       	movw	r24, r28
    30ba:	8e 5c       	subi	r24, 0xCE	; 206
    30bc:	9d 4f       	sbci	r25, 0xFD	; 253
    30be:	ca 51       	subi	r28, 0x1A	; 26
    30c0:	dd 4f       	sbci	r29, 0xFD	; 253
    30c2:	99 83       	std	Y+1, r25	; 0x01
    30c4:	88 83       	st	Y, r24
    30c6:	c6 5e       	subi	r28, 0xE6	; 230
    30c8:	d2 40       	sbci	r29, 0x02	; 2
    30ca:	8e e9       	ldi	r24, 0x9E	; 158
    30cc:	91 e0       	ldi	r25, 0x01	; 1
    30ce:	c8 51       	subi	r28, 0x18	; 24
    30d0:	dd 4f       	sbci	r29, 0xFD	; 253
    30d2:	99 83       	std	Y+1, r25	; 0x01
    30d4:	88 83       	st	Y, r24
    30d6:	c8 5e       	subi	r28, 0xE8	; 232
    30d8:	d2 40       	sbci	r29, 0x02	; 2
    30da:	99 e0       	ldi	r25, 0x09	; 9
    30dc:	c6 51       	subi	r28, 0x16	; 22
    30de:	dd 4f       	sbci	r29, 0xFD	; 253
    30e0:	98 83       	st	Y, r25
    30e2:	ca 5e       	subi	r28, 0xEA	; 234
    30e4:	d2 40       	sbci	r29, 0x02	; 2
    30e6:	c8 51       	subi	r28, 0x18	; 24
    30e8:	dd 4f       	sbci	r29, 0xFD	; 253
    30ea:	e8 81       	ld	r30, Y
    30ec:	f9 81       	ldd	r31, Y+1	; 0x01
    30ee:	c8 5e       	subi	r28, 0xE8	; 232
    30f0:	d2 40       	sbci	r29, 0x02	; 2
    30f2:	00 80       	ld	r0, Z
    30f4:	c8 51       	subi	r28, 0x18	; 24
    30f6:	dd 4f       	sbci	r29, 0xFD	; 253
    30f8:	88 81       	ld	r24, Y
    30fa:	99 81       	ldd	r25, Y+1	; 0x01
    30fc:	c8 5e       	subi	r28, 0xE8	; 232
    30fe:	d2 40       	sbci	r29, 0x02	; 2
    3100:	01 96       	adiw	r24, 0x01	; 1
    3102:	c8 51       	subi	r28, 0x18	; 24
    3104:	dd 4f       	sbci	r29, 0xFD	; 253
    3106:	99 83       	std	Y+1, r25	; 0x01
    3108:	88 83       	st	Y, r24
    310a:	c8 5e       	subi	r28, 0xE8	; 232
    310c:	d2 40       	sbci	r29, 0x02	; 2
    310e:	ca 51       	subi	r28, 0x1A	; 26
    3110:	dd 4f       	sbci	r29, 0xFD	; 253
    3112:	e8 81       	ld	r30, Y
    3114:	f9 81       	ldd	r31, Y+1	; 0x01
    3116:	c6 5e       	subi	r28, 0xE6	; 230
    3118:	d2 40       	sbci	r29, 0x02	; 2
    311a:	00 82       	st	Z, r0
    311c:	ca 51       	subi	r28, 0x1A	; 26
    311e:	dd 4f       	sbci	r29, 0xFD	; 253
    3120:	88 81       	ld	r24, Y
    3122:	99 81       	ldd	r25, Y+1	; 0x01
    3124:	c6 5e       	subi	r28, 0xE6	; 230
    3126:	d2 40       	sbci	r29, 0x02	; 2
    3128:	01 96       	adiw	r24, 0x01	; 1
    312a:	ca 51       	subi	r28, 0x1A	; 26
    312c:	dd 4f       	sbci	r29, 0xFD	; 253
    312e:	99 83       	std	Y+1, r25	; 0x01
    3130:	88 83       	st	Y, r24
    3132:	c6 5e       	subi	r28, 0xE6	; 230
    3134:	d2 40       	sbci	r29, 0x02	; 2
    3136:	c6 51       	subi	r28, 0x16	; 22
    3138:	dd 4f       	sbci	r29, 0xFD	; 253
    313a:	98 81       	ld	r25, Y
    313c:	ca 5e       	subi	r28, 0xEA	; 234
    313e:	d2 40       	sbci	r29, 0x02	; 2
    3140:	91 50       	subi	r25, 0x01	; 1
    3142:	c6 51       	subi	r28, 0x16	; 22
    3144:	dd 4f       	sbci	r29, 0xFD	; 253
    3146:	98 83       	st	Y, r25
    3148:	ca 5e       	subi	r28, 0xEA	; 234
    314a:	d2 40       	sbci	r29, 0x02	; 2
    314c:	c6 51       	subi	r28, 0x16	; 22
    314e:	dd 4f       	sbci	r29, 0xFD	; 253
    3150:	e8 81       	ld	r30, Y
    3152:	ca 5e       	subi	r28, 0xEA	; 234
    3154:	d2 40       	sbci	r29, 0x02	; 2
    3156:	ee 23       	and	r30, r30
    3158:	31 f6       	brne	.-116    	; 0x30e6 <main+0xf9c>
	u8 ENTRY_MSG[17] = "Choose an Option";
    315a:	ce 01       	movw	r24, r28
    315c:	85 5c       	subi	r24, 0xC5	; 197
    315e:	9d 4f       	sbci	r25, 0xFD	; 253
    3160:	c5 51       	subi	r28, 0x15	; 21
    3162:	dd 4f       	sbci	r29, 0xFD	; 253
    3164:	99 83       	std	Y+1, r25	; 0x01
    3166:	88 83       	st	Y, r24
    3168:	cb 5e       	subi	r28, 0xEB	; 235
    316a:	d2 40       	sbci	r29, 0x02	; 2
    316c:	87 ea       	ldi	r24, 0xA7	; 167
    316e:	91 e0       	ldi	r25, 0x01	; 1
    3170:	c3 51       	subi	r28, 0x13	; 19
    3172:	dd 4f       	sbci	r29, 0xFD	; 253
    3174:	99 83       	std	Y+1, r25	; 0x01
    3176:	88 83       	st	Y, r24
    3178:	cd 5e       	subi	r28, 0xED	; 237
    317a:	d2 40       	sbci	r29, 0x02	; 2
    317c:	91 e1       	ldi	r25, 0x11	; 17
    317e:	c1 51       	subi	r28, 0x11	; 17
    3180:	dd 4f       	sbci	r29, 0xFD	; 253
    3182:	98 83       	st	Y, r25
    3184:	cf 5e       	subi	r28, 0xEF	; 239
    3186:	d2 40       	sbci	r29, 0x02	; 2
    3188:	c3 51       	subi	r28, 0x13	; 19
    318a:	dd 4f       	sbci	r29, 0xFD	; 253
    318c:	e8 81       	ld	r30, Y
    318e:	f9 81       	ldd	r31, Y+1	; 0x01
    3190:	cd 5e       	subi	r28, 0xED	; 237
    3192:	d2 40       	sbci	r29, 0x02	; 2
    3194:	00 80       	ld	r0, Z
    3196:	c3 51       	subi	r28, 0x13	; 19
    3198:	dd 4f       	sbci	r29, 0xFD	; 253
    319a:	88 81       	ld	r24, Y
    319c:	99 81       	ldd	r25, Y+1	; 0x01
    319e:	cd 5e       	subi	r28, 0xED	; 237
    31a0:	d2 40       	sbci	r29, 0x02	; 2
    31a2:	01 96       	adiw	r24, 0x01	; 1
    31a4:	c3 51       	subi	r28, 0x13	; 19
    31a6:	dd 4f       	sbci	r29, 0xFD	; 253
    31a8:	99 83       	std	Y+1, r25	; 0x01
    31aa:	88 83       	st	Y, r24
    31ac:	cd 5e       	subi	r28, 0xED	; 237
    31ae:	d2 40       	sbci	r29, 0x02	; 2
    31b0:	c5 51       	subi	r28, 0x15	; 21
    31b2:	dd 4f       	sbci	r29, 0xFD	; 253
    31b4:	e8 81       	ld	r30, Y
    31b6:	f9 81       	ldd	r31, Y+1	; 0x01
    31b8:	cb 5e       	subi	r28, 0xEB	; 235
    31ba:	d2 40       	sbci	r29, 0x02	; 2
    31bc:	00 82       	st	Z, r0
    31be:	c5 51       	subi	r28, 0x15	; 21
    31c0:	dd 4f       	sbci	r29, 0xFD	; 253
    31c2:	88 81       	ld	r24, Y
    31c4:	99 81       	ldd	r25, Y+1	; 0x01
    31c6:	cb 5e       	subi	r28, 0xEB	; 235
    31c8:	d2 40       	sbci	r29, 0x02	; 2
    31ca:	01 96       	adiw	r24, 0x01	; 1
    31cc:	c5 51       	subi	r28, 0x15	; 21
    31ce:	dd 4f       	sbci	r29, 0xFD	; 253
    31d0:	99 83       	std	Y+1, r25	; 0x01
    31d2:	88 83       	st	Y, r24
    31d4:	cb 5e       	subi	r28, 0xEB	; 235
    31d6:	d2 40       	sbci	r29, 0x02	; 2
    31d8:	c1 51       	subi	r28, 0x11	; 17
    31da:	dd 4f       	sbci	r29, 0xFD	; 253
    31dc:	98 81       	ld	r25, Y
    31de:	cf 5e       	subi	r28, 0xEF	; 239
    31e0:	d2 40       	sbci	r29, 0x02	; 2
    31e2:	91 50       	subi	r25, 0x01	; 1
    31e4:	c1 51       	subi	r28, 0x11	; 17
    31e6:	dd 4f       	sbci	r29, 0xFD	; 253
    31e8:	98 83       	st	Y, r25
    31ea:	cf 5e       	subi	r28, 0xEF	; 239
    31ec:	d2 40       	sbci	r29, 0x02	; 2
    31ee:	c1 51       	subi	r28, 0x11	; 17
    31f0:	dd 4f       	sbci	r29, 0xFD	; 253
    31f2:	e8 81       	ld	r30, Y
    31f4:	cf 5e       	subi	r28, 0xEF	; 239
    31f6:	d2 40       	sbci	r29, 0x02	; 2
    31f8:	ee 23       	and	r30, r30
    31fa:	31 f6       	brne	.-116    	; 0x3188 <main+0x103e>
	u8 MENU_AGAIN_MSG[16] = "SHOW MENU AGAIN";
    31fc:	ce 01       	movw	r24, r28
    31fe:	84 5b       	subi	r24, 0xB4	; 180
    3200:	9d 4f       	sbci	r25, 0xFD	; 253
    3202:	c0 51       	subi	r28, 0x10	; 16
    3204:	dd 4f       	sbci	r29, 0xFD	; 253
    3206:	99 83       	std	Y+1, r25	; 0x01
    3208:	88 83       	st	Y, r24
    320a:	c0 5f       	subi	r28, 0xF0	; 240
    320c:	d2 40       	sbci	r29, 0x02	; 2
    320e:	88 eb       	ldi	r24, 0xB8	; 184
    3210:	91 e0       	ldi	r25, 0x01	; 1
    3212:	ce 50       	subi	r28, 0x0E	; 14
    3214:	dd 4f       	sbci	r29, 0xFD	; 253
    3216:	99 83       	std	Y+1, r25	; 0x01
    3218:	88 83       	st	Y, r24
    321a:	c2 5f       	subi	r28, 0xF2	; 242
    321c:	d2 40       	sbci	r29, 0x02	; 2
    321e:	90 e1       	ldi	r25, 0x10	; 16
    3220:	cc 50       	subi	r28, 0x0C	; 12
    3222:	dd 4f       	sbci	r29, 0xFD	; 253
    3224:	98 83       	st	Y, r25
    3226:	c4 5f       	subi	r28, 0xF4	; 244
    3228:	d2 40       	sbci	r29, 0x02	; 2
    322a:	ce 50       	subi	r28, 0x0E	; 14
    322c:	dd 4f       	sbci	r29, 0xFD	; 253
    322e:	e8 81       	ld	r30, Y
    3230:	f9 81       	ldd	r31, Y+1	; 0x01
    3232:	c2 5f       	subi	r28, 0xF2	; 242
    3234:	d2 40       	sbci	r29, 0x02	; 2
    3236:	00 80       	ld	r0, Z
    3238:	ce 50       	subi	r28, 0x0E	; 14
    323a:	dd 4f       	sbci	r29, 0xFD	; 253
    323c:	88 81       	ld	r24, Y
    323e:	99 81       	ldd	r25, Y+1	; 0x01
    3240:	c2 5f       	subi	r28, 0xF2	; 242
    3242:	d2 40       	sbci	r29, 0x02	; 2
    3244:	01 96       	adiw	r24, 0x01	; 1
    3246:	ce 50       	subi	r28, 0x0E	; 14
    3248:	dd 4f       	sbci	r29, 0xFD	; 253
    324a:	99 83       	std	Y+1, r25	; 0x01
    324c:	88 83       	st	Y, r24
    324e:	c2 5f       	subi	r28, 0xF2	; 242
    3250:	d2 40       	sbci	r29, 0x02	; 2
    3252:	c0 51       	subi	r28, 0x10	; 16
    3254:	dd 4f       	sbci	r29, 0xFD	; 253
    3256:	e8 81       	ld	r30, Y
    3258:	f9 81       	ldd	r31, Y+1	; 0x01
    325a:	c0 5f       	subi	r28, 0xF0	; 240
    325c:	d2 40       	sbci	r29, 0x02	; 2
    325e:	00 82       	st	Z, r0
    3260:	c0 51       	subi	r28, 0x10	; 16
    3262:	dd 4f       	sbci	r29, 0xFD	; 253
    3264:	88 81       	ld	r24, Y
    3266:	99 81       	ldd	r25, Y+1	; 0x01
    3268:	c0 5f       	subi	r28, 0xF0	; 240
    326a:	d2 40       	sbci	r29, 0x02	; 2
    326c:	01 96       	adiw	r24, 0x01	; 1
    326e:	c0 51       	subi	r28, 0x10	; 16
    3270:	dd 4f       	sbci	r29, 0xFD	; 253
    3272:	99 83       	std	Y+1, r25	; 0x01
    3274:	88 83       	st	Y, r24
    3276:	c0 5f       	subi	r28, 0xF0	; 240
    3278:	d2 40       	sbci	r29, 0x02	; 2
    327a:	cc 50       	subi	r28, 0x0C	; 12
    327c:	dd 4f       	sbci	r29, 0xFD	; 253
    327e:	98 81       	ld	r25, Y
    3280:	c4 5f       	subi	r28, 0xF4	; 244
    3282:	d2 40       	sbci	r29, 0x02	; 2
    3284:	91 50       	subi	r25, 0x01	; 1
    3286:	cc 50       	subi	r28, 0x0C	; 12
    3288:	dd 4f       	sbci	r29, 0xFD	; 253
    328a:	98 83       	st	Y, r25
    328c:	c4 5f       	subi	r28, 0xF4	; 244
    328e:	d2 40       	sbci	r29, 0x02	; 2
    3290:	cc 50       	subi	r28, 0x0C	; 12
    3292:	dd 4f       	sbci	r29, 0xFD	; 253
    3294:	e8 81       	ld	r30, Y
    3296:	c4 5f       	subi	r28, 0xF4	; 244
    3298:	d2 40       	sbci	r29, 0x02	; 2
    329a:	ee 23       	and	r30, r30
    329c:	31 f6       	brne	.-116    	; 0x322a <main+0x10e0>
	u8 SEL_MSG[17]="1 ->YES ,0 -> NO";
    329e:	ce 01       	movw	r24, r28
    32a0:	84 5a       	subi	r24, 0xA4	; 164
    32a2:	9d 4f       	sbci	r25, 0xFD	; 253
    32a4:	cb 50       	subi	r28, 0x0B	; 11
    32a6:	dd 4f       	sbci	r29, 0xFD	; 253
    32a8:	99 83       	std	Y+1, r25	; 0x01
    32aa:	88 83       	st	Y, r24
    32ac:	c5 5f       	subi	r28, 0xF5	; 245
    32ae:	d2 40       	sbci	r29, 0x02	; 2
    32b0:	88 ec       	ldi	r24, 0xC8	; 200
    32b2:	91 e0       	ldi	r25, 0x01	; 1
    32b4:	c9 50       	subi	r28, 0x09	; 9
    32b6:	dd 4f       	sbci	r29, 0xFD	; 253
    32b8:	99 83       	std	Y+1, r25	; 0x01
    32ba:	88 83       	st	Y, r24
    32bc:	c7 5f       	subi	r28, 0xF7	; 247
    32be:	d2 40       	sbci	r29, 0x02	; 2
    32c0:	91 e1       	ldi	r25, 0x11	; 17
    32c2:	c7 50       	subi	r28, 0x07	; 7
    32c4:	dd 4f       	sbci	r29, 0xFD	; 253
    32c6:	98 83       	st	Y, r25
    32c8:	c9 5f       	subi	r28, 0xF9	; 249
    32ca:	d2 40       	sbci	r29, 0x02	; 2
    32cc:	c9 50       	subi	r28, 0x09	; 9
    32ce:	dd 4f       	sbci	r29, 0xFD	; 253
    32d0:	e8 81       	ld	r30, Y
    32d2:	f9 81       	ldd	r31, Y+1	; 0x01
    32d4:	c7 5f       	subi	r28, 0xF7	; 247
    32d6:	d2 40       	sbci	r29, 0x02	; 2
    32d8:	00 80       	ld	r0, Z
    32da:	c9 50       	subi	r28, 0x09	; 9
    32dc:	dd 4f       	sbci	r29, 0xFD	; 253
    32de:	88 81       	ld	r24, Y
    32e0:	99 81       	ldd	r25, Y+1	; 0x01
    32e2:	c7 5f       	subi	r28, 0xF7	; 247
    32e4:	d2 40       	sbci	r29, 0x02	; 2
    32e6:	01 96       	adiw	r24, 0x01	; 1
    32e8:	c9 50       	subi	r28, 0x09	; 9
    32ea:	dd 4f       	sbci	r29, 0xFD	; 253
    32ec:	99 83       	std	Y+1, r25	; 0x01
    32ee:	88 83       	st	Y, r24
    32f0:	c7 5f       	subi	r28, 0xF7	; 247
    32f2:	d2 40       	sbci	r29, 0x02	; 2
    32f4:	cb 50       	subi	r28, 0x0B	; 11
    32f6:	dd 4f       	sbci	r29, 0xFD	; 253
    32f8:	e8 81       	ld	r30, Y
    32fa:	f9 81       	ldd	r31, Y+1	; 0x01
    32fc:	c5 5f       	subi	r28, 0xF5	; 245
    32fe:	d2 40       	sbci	r29, 0x02	; 2
    3300:	00 82       	st	Z, r0
    3302:	cb 50       	subi	r28, 0x0B	; 11
    3304:	dd 4f       	sbci	r29, 0xFD	; 253
    3306:	88 81       	ld	r24, Y
    3308:	99 81       	ldd	r25, Y+1	; 0x01
    330a:	c5 5f       	subi	r28, 0xF5	; 245
    330c:	d2 40       	sbci	r29, 0x02	; 2
    330e:	01 96       	adiw	r24, 0x01	; 1
    3310:	cb 50       	subi	r28, 0x0B	; 11
    3312:	dd 4f       	sbci	r29, 0xFD	; 253
    3314:	99 83       	std	Y+1, r25	; 0x01
    3316:	88 83       	st	Y, r24
    3318:	c5 5f       	subi	r28, 0xF5	; 245
    331a:	d2 40       	sbci	r29, 0x02	; 2
    331c:	c7 50       	subi	r28, 0x07	; 7
    331e:	dd 4f       	sbci	r29, 0xFD	; 253
    3320:	98 81       	ld	r25, Y
    3322:	c9 5f       	subi	r28, 0xF9	; 249
    3324:	d2 40       	sbci	r29, 0x02	; 2
    3326:	91 50       	subi	r25, 0x01	; 1
    3328:	c7 50       	subi	r28, 0x07	; 7
    332a:	dd 4f       	sbci	r29, 0xFD	; 253
    332c:	98 83       	st	Y, r25
    332e:	c9 5f       	subi	r28, 0xF9	; 249
    3330:	d2 40       	sbci	r29, 0x02	; 2
    3332:	c7 50       	subi	r28, 0x07	; 7
    3334:	dd 4f       	sbci	r29, 0xFD	; 253
    3336:	e8 81       	ld	r30, Y
    3338:	c9 5f       	subi	r28, 0xF9	; 249
    333a:	d2 40       	sbci	r29, 0x02	; 2
    333c:	ee 23       	and	r30, r30
    333e:	31 f6       	brne	.-116    	; 0x32cc <main+0x1182>
	//Initializations
	//PB7 --> Wrong PASS reset
	DIO_SetPinDirection(PORTB,PIN7,INPUT);
    3340:	81 e0       	ldi	r24, 0x01	; 1
    3342:	67 e0       	ldi	r22, 0x07	; 7
    3344:	40 e0       	ldi	r20, 0x00	; 0
    3346:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
	DIO_SetPinValue(PORTB,PIN7,HIGH);
    334a:	81 e0       	ldi	r24, 0x01	; 1
    334c:	67 e0       	ldi	r22, 0x07	; 7
    334e:	41 e0       	ldi	r20, 0x01	; 1
    3350:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
	//MAIN  MENU INDICATOR
	DIO_SetPinDirection(PORTB,PIN6,OUTPUT);
    3354:	81 e0       	ldi	r24, 0x01	; 1
    3356:	66 e0       	ldi	r22, 0x06	; 6
    3358:	41 e0       	ldi	r20, 0x01	; 1
    335a:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_SetPinDirection>
	DIO_SetPinValue(PORTB,PIN6,LOW);
    335e:	81 e0       	ldi	r24, 0x01	; 1
    3360:	66 e0       	ldi	r22, 0x06	; 6
    3362:	40 e0       	ldi	r20, 0x00	; 0
    3364:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
	LCD_PinsInitialize();
    3368:	0e 94 9a 0a 	call	0x1534	; 0x1534 <LCD_PinsInitialize>
	LCD_Initialize();
    336c:	0e 94 b9 0a 	call	0x1572	; 0x1572 <LCD_Initialize>
	KPD_PinsInitialization();
    3370:	0e 94 73 09 	call	0x12e6	; 0x12e6 <KPD_PinsInitialization>
	UART_INIT();
    3374:	0e 94 5e 10 	call	0x20bc	; 0x20bc <UART_INIT>


	READ_DISPLAY_TEMP();
    3378:	0e 94 c0 28 	call	0x5180	; 0x5180 <READ_DISPLAY_TEMP>
while (1)

	{
		DIO_SetPinValue(PORTB,PIN6,HIGH);
    337c:	81 e0       	ldi	r24, 0x01	; 1
    337e:	66 e0       	ldi	r22, 0x06	; 6
    3380:	41 e0       	ldi	r20, 0x01	; 1
    3382:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>

	//Waiting for an Input from KEYPAD
		KeyPressed = '@';
    3386:	fe 01       	movw	r30, r28
    3388:	ee 50       	subi	r30, 0x0E	; 14
    338a:	ff 4f       	sbci	r31, 0xFF	; 255
    338c:	80 e4       	ldi	r24, 0x40	; 64
    338e:	80 83       	st	Z, r24
    3390:	06 c0       	rjmp	.+12     	; 0x339e <main+0x1254>
		while(KeyPressed == '@')
			{
				KeyPressed	= KPD_GetPressedKey();
    3392:	0e 94 ca 09 	call	0x1394	; 0x1394 <KPD_GetPressedKey>
    3396:	fe 01       	movw	r30, r28
    3398:	ee 50       	subi	r30, 0x0E	; 14
    339a:	ff 4f       	sbci	r31, 0xFF	; 255
    339c:	80 83       	st	Z, r24
	{
		DIO_SetPinValue(PORTB,PIN6,HIGH);

	//Waiting for an Input from KEYPAD
		KeyPressed = '@';
		while(KeyPressed == '@')
    339e:	fe 01       	movw	r30, r28
    33a0:	ee 50       	subi	r30, 0x0E	; 14
    33a2:	ff 4f       	sbci	r31, 0xFF	; 255
    33a4:	80 81       	ld	r24, Z
    33a6:	80 34       	cpi	r24, 0x40	; 64
    33a8:	a1 f3       	breq	.-24     	; 0x3392 <main+0x1248>
			{
				KeyPressed	= KPD_GetPressedKey();
			}

		//KeyPressed = KPD_GetPressedKey();
		if (KeyPressed == '1')
    33aa:	fe 01       	movw	r30, r28
    33ac:	ee 50       	subi	r30, 0x0E	; 14
    33ae:	ff 4f       	sbci	r31, 0xFF	; 255
    33b0:	80 81       	ld	r24, Z
    33b2:	81 33       	cpi	r24, 0x31	; 49
    33b4:	09 f0       	breq	.+2      	; 0x33b8 <main+0x126e>
    33b6:	ee c5       	rjmp	.+3036   	; 0x3f94 <main+0x1e4a>
		{
			DIO_SetPinValue(PORTB,PIN6,LOW);
    33b8:	81 e0       	ldi	r24, 0x01	; 1
    33ba:	66 e0       	ldi	r22, 0x06	; 6
    33bc:	40 e0       	ldi	r20, 0x00	; 0
    33be:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			//Asking for PASSWORD
			do{

				PASS_flag = GET_PASS_CHECK();
    33c2:	0e 94 5a 27 	call	0x4eb4	; 0x4eb4 <GET_PASS_CHECK>
    33c6:	fe 01       	movw	r30, r28
    33c8:	ef 50       	subi	r30, 0x0F	; 15
    33ca:	ff 4f       	sbci	r31, 0xFF	; 255
    33cc:	80 83       	st	Z, r24
				if(PASS_flag == 4)
    33ce:	fe 01       	movw	r30, r28
    33d0:	ef 50       	subi	r30, 0x0F	; 15
    33d2:	ff 4f       	sbci	r31, 0xFF	; 255
    33d4:	80 81       	ld	r24, Z
    33d6:	84 30       	cpi	r24, 0x04	; 4
    33d8:	09 f0       	breq	.+2      	; 0x33dc <main+0x1292>
    33da:	c5 c0       	rjmp	.+394    	; 0x3566 <main+0x141c>
				{
				LCD_WriteCmd(DISPLAY_CLEAR);
    33dc:	81 e0       	ldi	r24, 0x01	; 1
    33de:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
				LCD_GoToXY(0,0);
    33e2:	80 e0       	ldi	r24, 0x00	; 0
    33e4:	60 e0       	ldi	r22, 0x00	; 0
    33e6:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
				LCD_WriteString(C_PASS_MSG);
    33ea:	ce 01       	movw	r24, r28
    33ec:	8c 5f       	subi	r24, 0xFC	; 252
    33ee:	9e 4f       	sbci	r25, 0xFE	; 254
    33f0:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    33f4:	fe 01       	movw	r30, r28
    33f6:	e5 51       	subi	r30, 0x15	; 21
    33f8:	ff 4f       	sbci	r31, 0xFF	; 255
    33fa:	80 e0       	ldi	r24, 0x00	; 0
    33fc:	90 e0       	ldi	r25, 0x00	; 0
    33fe:	aa e7       	ldi	r26, 0x7A	; 122
    3400:	b4 e4       	ldi	r27, 0x44	; 68
    3402:	80 83       	st	Z, r24
    3404:	91 83       	std	Z+1, r25	; 0x01
    3406:	a2 83       	std	Z+2, r26	; 0x02
    3408:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    340a:	8e 01       	movw	r16, r28
    340c:	09 51       	subi	r16, 0x19	; 25
    340e:	1f 4f       	sbci	r17, 0xFF	; 255
    3410:	fe 01       	movw	r30, r28
    3412:	e5 51       	subi	r30, 0x15	; 21
    3414:	ff 4f       	sbci	r31, 0xFF	; 255
    3416:	60 81       	ld	r22, Z
    3418:	71 81       	ldd	r23, Z+1	; 0x01
    341a:	82 81       	ldd	r24, Z+2	; 0x02
    341c:	93 81       	ldd	r25, Z+3	; 0x03
    341e:	20 e0       	ldi	r18, 0x00	; 0
    3420:	30 e0       	ldi	r19, 0x00	; 0
    3422:	4a ef       	ldi	r20, 0xFA	; 250
    3424:	54 e4       	ldi	r21, 0x44	; 68
    3426:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    342a:	dc 01       	movw	r26, r24
    342c:	cb 01       	movw	r24, r22
    342e:	f8 01       	movw	r30, r16
    3430:	80 83       	st	Z, r24
    3432:	91 83       	std	Z+1, r25	; 0x01
    3434:	a2 83       	std	Z+2, r26	; 0x02
    3436:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3438:	fe 01       	movw	r30, r28
    343a:	e9 51       	subi	r30, 0x19	; 25
    343c:	ff 4f       	sbci	r31, 0xFF	; 255
    343e:	60 81       	ld	r22, Z
    3440:	71 81       	ldd	r23, Z+1	; 0x01
    3442:	82 81       	ldd	r24, Z+2	; 0x02
    3444:	93 81       	ldd	r25, Z+3	; 0x03
    3446:	20 e0       	ldi	r18, 0x00	; 0
    3448:	30 e0       	ldi	r19, 0x00	; 0
    344a:	40 e8       	ldi	r20, 0x80	; 128
    344c:	5f e3       	ldi	r21, 0x3F	; 63
    344e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3452:	88 23       	and	r24, r24
    3454:	44 f4       	brge	.+16     	; 0x3466 <main+0x131c>
		__ticks = 1;
    3456:	fe 01       	movw	r30, r28
    3458:	eb 51       	subi	r30, 0x1B	; 27
    345a:	ff 4f       	sbci	r31, 0xFF	; 255
    345c:	81 e0       	ldi	r24, 0x01	; 1
    345e:	90 e0       	ldi	r25, 0x00	; 0
    3460:	91 83       	std	Z+1, r25	; 0x01
    3462:	80 83       	st	Z, r24
    3464:	64 c0       	rjmp	.+200    	; 0x352e <main+0x13e4>
	else if (__tmp > 65535)
    3466:	fe 01       	movw	r30, r28
    3468:	e9 51       	subi	r30, 0x19	; 25
    346a:	ff 4f       	sbci	r31, 0xFF	; 255
    346c:	60 81       	ld	r22, Z
    346e:	71 81       	ldd	r23, Z+1	; 0x01
    3470:	82 81       	ldd	r24, Z+2	; 0x02
    3472:	93 81       	ldd	r25, Z+3	; 0x03
    3474:	20 e0       	ldi	r18, 0x00	; 0
    3476:	3f ef       	ldi	r19, 0xFF	; 255
    3478:	4f e7       	ldi	r20, 0x7F	; 127
    347a:	57 e4       	ldi	r21, 0x47	; 71
    347c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3480:	18 16       	cp	r1, r24
    3482:	0c f0       	brlt	.+2      	; 0x3486 <main+0x133c>
    3484:	43 c0       	rjmp	.+134    	; 0x350c <main+0x13c2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3486:	fe 01       	movw	r30, r28
    3488:	e5 51       	subi	r30, 0x15	; 21
    348a:	ff 4f       	sbci	r31, 0xFF	; 255
    348c:	60 81       	ld	r22, Z
    348e:	71 81       	ldd	r23, Z+1	; 0x01
    3490:	82 81       	ldd	r24, Z+2	; 0x02
    3492:	93 81       	ldd	r25, Z+3	; 0x03
    3494:	20 e0       	ldi	r18, 0x00	; 0
    3496:	30 e0       	ldi	r19, 0x00	; 0
    3498:	40 e2       	ldi	r20, 0x20	; 32
    349a:	51 e4       	ldi	r21, 0x41	; 65
    349c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    34a0:	dc 01       	movw	r26, r24
    34a2:	cb 01       	movw	r24, r22
    34a4:	8e 01       	movw	r16, r28
    34a6:	0b 51       	subi	r16, 0x1B	; 27
    34a8:	1f 4f       	sbci	r17, 0xFF	; 255
    34aa:	bc 01       	movw	r22, r24
    34ac:	cd 01       	movw	r24, r26
    34ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34b2:	dc 01       	movw	r26, r24
    34b4:	cb 01       	movw	r24, r22
    34b6:	f8 01       	movw	r30, r16
    34b8:	91 83       	std	Z+1, r25	; 0x01
    34ba:	80 83       	st	Z, r24
    34bc:	1f c0       	rjmp	.+62     	; 0x34fc <main+0x13b2>
    34be:	fe 01       	movw	r30, r28
    34c0:	ed 51       	subi	r30, 0x1D	; 29
    34c2:	ff 4f       	sbci	r31, 0xFF	; 255
    34c4:	88 ec       	ldi	r24, 0xC8	; 200
    34c6:	90 e0       	ldi	r25, 0x00	; 0
    34c8:	91 83       	std	Z+1, r25	; 0x01
    34ca:	80 83       	st	Z, r24
    34cc:	fe 01       	movw	r30, r28
    34ce:	ed 51       	subi	r30, 0x1D	; 29
    34d0:	ff 4f       	sbci	r31, 0xFF	; 255
    34d2:	80 81       	ld	r24, Z
    34d4:	91 81       	ldd	r25, Z+1	; 0x01
    34d6:	01 97       	sbiw	r24, 0x01	; 1
    34d8:	f1 f7       	brne	.-4      	; 0x34d6 <main+0x138c>
    34da:	fe 01       	movw	r30, r28
    34dc:	ed 51       	subi	r30, 0x1D	; 29
    34de:	ff 4f       	sbci	r31, 0xFF	; 255
    34e0:	91 83       	std	Z+1, r25	; 0x01
    34e2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34e4:	de 01       	movw	r26, r28
    34e6:	ab 51       	subi	r26, 0x1B	; 27
    34e8:	bf 4f       	sbci	r27, 0xFF	; 255
    34ea:	fe 01       	movw	r30, r28
    34ec:	eb 51       	subi	r30, 0x1B	; 27
    34ee:	ff 4f       	sbci	r31, 0xFF	; 255
    34f0:	80 81       	ld	r24, Z
    34f2:	91 81       	ldd	r25, Z+1	; 0x01
    34f4:	01 97       	sbiw	r24, 0x01	; 1
    34f6:	11 96       	adiw	r26, 0x01	; 1
    34f8:	9c 93       	st	X, r25
    34fa:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34fc:	fe 01       	movw	r30, r28
    34fe:	eb 51       	subi	r30, 0x1B	; 27
    3500:	ff 4f       	sbci	r31, 0xFF	; 255
    3502:	80 81       	ld	r24, Z
    3504:	91 81       	ldd	r25, Z+1	; 0x01
    3506:	00 97       	sbiw	r24, 0x00	; 0
    3508:	d1 f6       	brne	.-76     	; 0x34be <main+0x1374>
    350a:	28 c0       	rjmp	.+80     	; 0x355c <main+0x1412>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    350c:	8e 01       	movw	r16, r28
    350e:	0b 51       	subi	r16, 0x1B	; 27
    3510:	1f 4f       	sbci	r17, 0xFF	; 255
    3512:	fe 01       	movw	r30, r28
    3514:	e9 51       	subi	r30, 0x19	; 25
    3516:	ff 4f       	sbci	r31, 0xFF	; 255
    3518:	60 81       	ld	r22, Z
    351a:	71 81       	ldd	r23, Z+1	; 0x01
    351c:	82 81       	ldd	r24, Z+2	; 0x02
    351e:	93 81       	ldd	r25, Z+3	; 0x03
    3520:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3524:	dc 01       	movw	r26, r24
    3526:	cb 01       	movw	r24, r22
    3528:	f8 01       	movw	r30, r16
    352a:	91 83       	std	Z+1, r25	; 0x01
    352c:	80 83       	st	Z, r24
    352e:	de 01       	movw	r26, r28
    3530:	af 51       	subi	r26, 0x1F	; 31
    3532:	bf 4f       	sbci	r27, 0xFF	; 255
    3534:	fe 01       	movw	r30, r28
    3536:	eb 51       	subi	r30, 0x1B	; 27
    3538:	ff 4f       	sbci	r31, 0xFF	; 255
    353a:	80 81       	ld	r24, Z
    353c:	91 81       	ldd	r25, Z+1	; 0x01
    353e:	11 96       	adiw	r26, 0x01	; 1
    3540:	9c 93       	st	X, r25
    3542:	8e 93       	st	-X, r24
    3544:	fe 01       	movw	r30, r28
    3546:	ef 51       	subi	r30, 0x1F	; 31
    3548:	ff 4f       	sbci	r31, 0xFF	; 255
    354a:	80 81       	ld	r24, Z
    354c:	91 81       	ldd	r25, Z+1	; 0x01
    354e:	01 97       	sbiw	r24, 0x01	; 1
    3550:	f1 f7       	brne	.-4      	; 0x354e <main+0x1404>
    3552:	fe 01       	movw	r30, r28
    3554:	ef 51       	subi	r30, 0x1F	; 31
    3556:	ff 4f       	sbci	r31, 0xFF	; 255
    3558:	91 83       	std	Z+1, r25	; 0x01
    355a:	80 83       	st	Z, r24
				_delay_ms(1000);
				//IF PASS was Entered One time Correct this will reset WRONG_PASS_flag(counter)
				WRONG_PASS_flag = 0 ;
    355c:	fe 01       	movw	r30, r28
    355e:	e0 51       	subi	r30, 0x10	; 16
    3560:	ff 4f       	sbci	r31, 0xFF	; 255
    3562:	10 82       	st	Z, r1
    3564:	96 c1       	rjmp	.+812    	; 0x3892 <main+0x1748>
				break;
				}
				else
				{
				LCD_WriteCmd(DISPLAY_CLEAR);
    3566:	81 e0       	ldi	r24, 0x01	; 1
    3568:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
				LCD_GoToXY(0,0);
    356c:	80 e0       	ldi	r24, 0x00	; 0
    356e:	60 e0       	ldi	r22, 0x00	; 0
    3570:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
				LCD_WriteString(W_PASS_MSG);
    3574:	ce 01       	movw	r24, r28
    3576:	8f 5e       	subi	r24, 0xEF	; 239
    3578:	9e 4f       	sbci	r25, 0xFE	; 254
    357a:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    357e:	fe 01       	movw	r30, r28
    3580:	e3 52       	subi	r30, 0x23	; 35
    3582:	ff 4f       	sbci	r31, 0xFF	; 255
    3584:	80 e0       	ldi	r24, 0x00	; 0
    3586:	90 e0       	ldi	r25, 0x00	; 0
    3588:	aa e7       	ldi	r26, 0x7A	; 122
    358a:	b4 e4       	ldi	r27, 0x44	; 68
    358c:	80 83       	st	Z, r24
    358e:	91 83       	std	Z+1, r25	; 0x01
    3590:	a2 83       	std	Z+2, r26	; 0x02
    3592:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3594:	8e 01       	movw	r16, r28
    3596:	07 52       	subi	r16, 0x27	; 39
    3598:	1f 4f       	sbci	r17, 0xFF	; 255
    359a:	fe 01       	movw	r30, r28
    359c:	e3 52       	subi	r30, 0x23	; 35
    359e:	ff 4f       	sbci	r31, 0xFF	; 255
    35a0:	60 81       	ld	r22, Z
    35a2:	71 81       	ldd	r23, Z+1	; 0x01
    35a4:	82 81       	ldd	r24, Z+2	; 0x02
    35a6:	93 81       	ldd	r25, Z+3	; 0x03
    35a8:	20 e0       	ldi	r18, 0x00	; 0
    35aa:	30 e0       	ldi	r19, 0x00	; 0
    35ac:	4a ef       	ldi	r20, 0xFA	; 250
    35ae:	54 e4       	ldi	r21, 0x44	; 68
    35b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35b4:	dc 01       	movw	r26, r24
    35b6:	cb 01       	movw	r24, r22
    35b8:	f8 01       	movw	r30, r16
    35ba:	80 83       	st	Z, r24
    35bc:	91 83       	std	Z+1, r25	; 0x01
    35be:	a2 83       	std	Z+2, r26	; 0x02
    35c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    35c2:	fe 01       	movw	r30, r28
    35c4:	e7 52       	subi	r30, 0x27	; 39
    35c6:	ff 4f       	sbci	r31, 0xFF	; 255
    35c8:	60 81       	ld	r22, Z
    35ca:	71 81       	ldd	r23, Z+1	; 0x01
    35cc:	82 81       	ldd	r24, Z+2	; 0x02
    35ce:	93 81       	ldd	r25, Z+3	; 0x03
    35d0:	20 e0       	ldi	r18, 0x00	; 0
    35d2:	30 e0       	ldi	r19, 0x00	; 0
    35d4:	40 e8       	ldi	r20, 0x80	; 128
    35d6:	5f e3       	ldi	r21, 0x3F	; 63
    35d8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    35dc:	88 23       	and	r24, r24
    35de:	44 f4       	brge	.+16     	; 0x35f0 <main+0x14a6>
		__ticks = 1;
    35e0:	fe 01       	movw	r30, r28
    35e2:	e9 52       	subi	r30, 0x29	; 41
    35e4:	ff 4f       	sbci	r31, 0xFF	; 255
    35e6:	81 e0       	ldi	r24, 0x01	; 1
    35e8:	90 e0       	ldi	r25, 0x00	; 0
    35ea:	91 83       	std	Z+1, r25	; 0x01
    35ec:	80 83       	st	Z, r24
    35ee:	64 c0       	rjmp	.+200    	; 0x36b8 <main+0x156e>
	else if (__tmp > 65535)
    35f0:	fe 01       	movw	r30, r28
    35f2:	e7 52       	subi	r30, 0x27	; 39
    35f4:	ff 4f       	sbci	r31, 0xFF	; 255
    35f6:	60 81       	ld	r22, Z
    35f8:	71 81       	ldd	r23, Z+1	; 0x01
    35fa:	82 81       	ldd	r24, Z+2	; 0x02
    35fc:	93 81       	ldd	r25, Z+3	; 0x03
    35fe:	20 e0       	ldi	r18, 0x00	; 0
    3600:	3f ef       	ldi	r19, 0xFF	; 255
    3602:	4f e7       	ldi	r20, 0x7F	; 127
    3604:	57 e4       	ldi	r21, 0x47	; 71
    3606:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    360a:	18 16       	cp	r1, r24
    360c:	0c f0       	brlt	.+2      	; 0x3610 <main+0x14c6>
    360e:	43 c0       	rjmp	.+134    	; 0x3696 <main+0x154c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3610:	fe 01       	movw	r30, r28
    3612:	e3 52       	subi	r30, 0x23	; 35
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	60 81       	ld	r22, Z
    3618:	71 81       	ldd	r23, Z+1	; 0x01
    361a:	82 81       	ldd	r24, Z+2	; 0x02
    361c:	93 81       	ldd	r25, Z+3	; 0x03
    361e:	20 e0       	ldi	r18, 0x00	; 0
    3620:	30 e0       	ldi	r19, 0x00	; 0
    3622:	40 e2       	ldi	r20, 0x20	; 32
    3624:	51 e4       	ldi	r21, 0x41	; 65
    3626:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    362a:	dc 01       	movw	r26, r24
    362c:	cb 01       	movw	r24, r22
    362e:	8e 01       	movw	r16, r28
    3630:	09 52       	subi	r16, 0x29	; 41
    3632:	1f 4f       	sbci	r17, 0xFF	; 255
    3634:	bc 01       	movw	r22, r24
    3636:	cd 01       	movw	r24, r26
    3638:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    363c:	dc 01       	movw	r26, r24
    363e:	cb 01       	movw	r24, r22
    3640:	f8 01       	movw	r30, r16
    3642:	91 83       	std	Z+1, r25	; 0x01
    3644:	80 83       	st	Z, r24
    3646:	1f c0       	rjmp	.+62     	; 0x3686 <main+0x153c>
    3648:	fe 01       	movw	r30, r28
    364a:	eb 52       	subi	r30, 0x2B	; 43
    364c:	ff 4f       	sbci	r31, 0xFF	; 255
    364e:	88 ec       	ldi	r24, 0xC8	; 200
    3650:	90 e0       	ldi	r25, 0x00	; 0
    3652:	91 83       	std	Z+1, r25	; 0x01
    3654:	80 83       	st	Z, r24
    3656:	fe 01       	movw	r30, r28
    3658:	eb 52       	subi	r30, 0x2B	; 43
    365a:	ff 4f       	sbci	r31, 0xFF	; 255
    365c:	80 81       	ld	r24, Z
    365e:	91 81       	ldd	r25, Z+1	; 0x01
    3660:	01 97       	sbiw	r24, 0x01	; 1
    3662:	f1 f7       	brne	.-4      	; 0x3660 <main+0x1516>
    3664:	fe 01       	movw	r30, r28
    3666:	eb 52       	subi	r30, 0x2B	; 43
    3668:	ff 4f       	sbci	r31, 0xFF	; 255
    366a:	91 83       	std	Z+1, r25	; 0x01
    366c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    366e:	de 01       	movw	r26, r28
    3670:	a9 52       	subi	r26, 0x29	; 41
    3672:	bf 4f       	sbci	r27, 0xFF	; 255
    3674:	fe 01       	movw	r30, r28
    3676:	e9 52       	subi	r30, 0x29	; 41
    3678:	ff 4f       	sbci	r31, 0xFF	; 255
    367a:	80 81       	ld	r24, Z
    367c:	91 81       	ldd	r25, Z+1	; 0x01
    367e:	01 97       	sbiw	r24, 0x01	; 1
    3680:	11 96       	adiw	r26, 0x01	; 1
    3682:	9c 93       	st	X, r25
    3684:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3686:	fe 01       	movw	r30, r28
    3688:	e9 52       	subi	r30, 0x29	; 41
    368a:	ff 4f       	sbci	r31, 0xFF	; 255
    368c:	80 81       	ld	r24, Z
    368e:	91 81       	ldd	r25, Z+1	; 0x01
    3690:	00 97       	sbiw	r24, 0x00	; 0
    3692:	d1 f6       	brne	.-76     	; 0x3648 <main+0x14fe>
    3694:	27 c0       	rjmp	.+78     	; 0x36e4 <main+0x159a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3696:	8e 01       	movw	r16, r28
    3698:	09 52       	subi	r16, 0x29	; 41
    369a:	1f 4f       	sbci	r17, 0xFF	; 255
    369c:	fe 01       	movw	r30, r28
    369e:	e7 52       	subi	r30, 0x27	; 39
    36a0:	ff 4f       	sbci	r31, 0xFF	; 255
    36a2:	60 81       	ld	r22, Z
    36a4:	71 81       	ldd	r23, Z+1	; 0x01
    36a6:	82 81       	ldd	r24, Z+2	; 0x02
    36a8:	93 81       	ldd	r25, Z+3	; 0x03
    36aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36ae:	dc 01       	movw	r26, r24
    36b0:	cb 01       	movw	r24, r22
    36b2:	f8 01       	movw	r30, r16
    36b4:	91 83       	std	Z+1, r25	; 0x01
    36b6:	80 83       	st	Z, r24
    36b8:	de 01       	movw	r26, r28
    36ba:	ad 52       	subi	r26, 0x2D	; 45
    36bc:	bf 4f       	sbci	r27, 0xFF	; 255
    36be:	fe 01       	movw	r30, r28
    36c0:	e9 52       	subi	r30, 0x29	; 41
    36c2:	ff 4f       	sbci	r31, 0xFF	; 255
    36c4:	80 81       	ld	r24, Z
    36c6:	91 81       	ldd	r25, Z+1	; 0x01
    36c8:	8d 93       	st	X+, r24
    36ca:	9c 93       	st	X, r25
    36cc:	fe 01       	movw	r30, r28
    36ce:	ed 52       	subi	r30, 0x2D	; 45
    36d0:	ff 4f       	sbci	r31, 0xFF	; 255
    36d2:	80 81       	ld	r24, Z
    36d4:	91 81       	ldd	r25, Z+1	; 0x01
    36d6:	01 97       	sbiw	r24, 0x01	; 1
    36d8:	f1 f7       	brne	.-4      	; 0x36d6 <main+0x158c>
    36da:	fe 01       	movw	r30, r28
    36dc:	ed 52       	subi	r30, 0x2D	; 45
    36de:	ff 4f       	sbci	r31, 0xFF	; 255
    36e0:	91 83       	std	Z+1, r25	; 0x01
    36e2:	80 83       	st	Z, r24
				_delay_ms(1000);
				LCD_WriteCmd(DISPLAY_CLEAR);
    36e4:	81 e0       	ldi	r24, 0x01	; 1
    36e6:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
				LCD_GoToXY(0,0);
    36ea:	80 e0       	ldi	r24, 0x00	; 0
    36ec:	60 e0       	ldi	r22, 0x00	; 0
    36ee:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>

				WRONG_PASS_flag ++;
    36f2:	de 01       	movw	r26, r28
    36f4:	a0 51       	subi	r26, 0x10	; 16
    36f6:	bf 4f       	sbci	r27, 0xFF	; 255
    36f8:	fe 01       	movw	r30, r28
    36fa:	e0 51       	subi	r30, 0x10	; 16
    36fc:	ff 4f       	sbci	r31, 0xFF	; 255
    36fe:	80 81       	ld	r24, Z
    3700:	8f 5f       	subi	r24, 0xFF	; 255
    3702:	8c 93       	st	X, r24
				if (WRONG_PASS_flag != 3 )
    3704:	fe 01       	movw	r30, r28
    3706:	e0 51       	subi	r30, 0x10	; 16
    3708:	ff 4f       	sbci	r31, 0xFF	; 255
    370a:	80 81       	ld	r24, Z
    370c:	83 30       	cpi	r24, 0x03	; 3
    370e:	09 f4       	brne	.+2      	; 0x3712 <main+0x15c8>
    3710:	b9 c0       	rjmp	.+370    	; 0x3884 <main+0x173a>
					{
						LCD_WriteString(TRY_MSG);
    3712:	ce 01       	movw	r24, r28
    3714:	84 5e       	subi	r24, 0xE4	; 228
    3716:	9e 4f       	sbci	r25, 0xFE	; 254
    3718:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    371c:	fe 01       	movw	r30, r28
    371e:	e1 53       	subi	r30, 0x31	; 49
    3720:	ff 4f       	sbci	r31, 0xFF	; 255
    3722:	80 e0       	ldi	r24, 0x00	; 0
    3724:	90 e0       	ldi	r25, 0x00	; 0
    3726:	aa ef       	ldi	r26, 0xFA	; 250
    3728:	b3 e4       	ldi	r27, 0x43	; 67
    372a:	80 83       	st	Z, r24
    372c:	91 83       	std	Z+1, r25	; 0x01
    372e:	a2 83       	std	Z+2, r26	; 0x02
    3730:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3732:	8e 01       	movw	r16, r28
    3734:	05 53       	subi	r16, 0x35	; 53
    3736:	1f 4f       	sbci	r17, 0xFF	; 255
    3738:	fe 01       	movw	r30, r28
    373a:	e1 53       	subi	r30, 0x31	; 49
    373c:	ff 4f       	sbci	r31, 0xFF	; 255
    373e:	60 81       	ld	r22, Z
    3740:	71 81       	ldd	r23, Z+1	; 0x01
    3742:	82 81       	ldd	r24, Z+2	; 0x02
    3744:	93 81       	ldd	r25, Z+3	; 0x03
    3746:	20 e0       	ldi	r18, 0x00	; 0
    3748:	30 e0       	ldi	r19, 0x00	; 0
    374a:	4a ef       	ldi	r20, 0xFA	; 250
    374c:	54 e4       	ldi	r21, 0x44	; 68
    374e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3752:	dc 01       	movw	r26, r24
    3754:	cb 01       	movw	r24, r22
    3756:	f8 01       	movw	r30, r16
    3758:	80 83       	st	Z, r24
    375a:	91 83       	std	Z+1, r25	; 0x01
    375c:	a2 83       	std	Z+2, r26	; 0x02
    375e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3760:	fe 01       	movw	r30, r28
    3762:	e5 53       	subi	r30, 0x35	; 53
    3764:	ff 4f       	sbci	r31, 0xFF	; 255
    3766:	60 81       	ld	r22, Z
    3768:	71 81       	ldd	r23, Z+1	; 0x01
    376a:	82 81       	ldd	r24, Z+2	; 0x02
    376c:	93 81       	ldd	r25, Z+3	; 0x03
    376e:	20 e0       	ldi	r18, 0x00	; 0
    3770:	30 e0       	ldi	r19, 0x00	; 0
    3772:	40 e8       	ldi	r20, 0x80	; 128
    3774:	5f e3       	ldi	r21, 0x3F	; 63
    3776:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    377a:	88 23       	and	r24, r24
    377c:	44 f4       	brge	.+16     	; 0x378e <main+0x1644>
		__ticks = 1;
    377e:	fe 01       	movw	r30, r28
    3780:	e7 53       	subi	r30, 0x37	; 55
    3782:	ff 4f       	sbci	r31, 0xFF	; 255
    3784:	81 e0       	ldi	r24, 0x01	; 1
    3786:	90 e0       	ldi	r25, 0x00	; 0
    3788:	91 83       	std	Z+1, r25	; 0x01
    378a:	80 83       	st	Z, r24
    378c:	64 c0       	rjmp	.+200    	; 0x3856 <main+0x170c>
	else if (__tmp > 65535)
    378e:	fe 01       	movw	r30, r28
    3790:	e5 53       	subi	r30, 0x35	; 53
    3792:	ff 4f       	sbci	r31, 0xFF	; 255
    3794:	60 81       	ld	r22, Z
    3796:	71 81       	ldd	r23, Z+1	; 0x01
    3798:	82 81       	ldd	r24, Z+2	; 0x02
    379a:	93 81       	ldd	r25, Z+3	; 0x03
    379c:	20 e0       	ldi	r18, 0x00	; 0
    379e:	3f ef       	ldi	r19, 0xFF	; 255
    37a0:	4f e7       	ldi	r20, 0x7F	; 127
    37a2:	57 e4       	ldi	r21, 0x47	; 71
    37a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    37a8:	18 16       	cp	r1, r24
    37aa:	0c f0       	brlt	.+2      	; 0x37ae <main+0x1664>
    37ac:	43 c0       	rjmp	.+134    	; 0x3834 <main+0x16ea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    37ae:	fe 01       	movw	r30, r28
    37b0:	e1 53       	subi	r30, 0x31	; 49
    37b2:	ff 4f       	sbci	r31, 0xFF	; 255
    37b4:	60 81       	ld	r22, Z
    37b6:	71 81       	ldd	r23, Z+1	; 0x01
    37b8:	82 81       	ldd	r24, Z+2	; 0x02
    37ba:	93 81       	ldd	r25, Z+3	; 0x03
    37bc:	20 e0       	ldi	r18, 0x00	; 0
    37be:	30 e0       	ldi	r19, 0x00	; 0
    37c0:	40 e2       	ldi	r20, 0x20	; 32
    37c2:	51 e4       	ldi	r21, 0x41	; 65
    37c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37c8:	dc 01       	movw	r26, r24
    37ca:	cb 01       	movw	r24, r22
    37cc:	8e 01       	movw	r16, r28
    37ce:	07 53       	subi	r16, 0x37	; 55
    37d0:	1f 4f       	sbci	r17, 0xFF	; 255
    37d2:	bc 01       	movw	r22, r24
    37d4:	cd 01       	movw	r24, r26
    37d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37da:	dc 01       	movw	r26, r24
    37dc:	cb 01       	movw	r24, r22
    37de:	f8 01       	movw	r30, r16
    37e0:	91 83       	std	Z+1, r25	; 0x01
    37e2:	80 83       	st	Z, r24
    37e4:	1f c0       	rjmp	.+62     	; 0x3824 <main+0x16da>
    37e6:	fe 01       	movw	r30, r28
    37e8:	e9 53       	subi	r30, 0x39	; 57
    37ea:	ff 4f       	sbci	r31, 0xFF	; 255
    37ec:	88 ec       	ldi	r24, 0xC8	; 200
    37ee:	90 e0       	ldi	r25, 0x00	; 0
    37f0:	91 83       	std	Z+1, r25	; 0x01
    37f2:	80 83       	st	Z, r24
    37f4:	fe 01       	movw	r30, r28
    37f6:	e9 53       	subi	r30, 0x39	; 57
    37f8:	ff 4f       	sbci	r31, 0xFF	; 255
    37fa:	80 81       	ld	r24, Z
    37fc:	91 81       	ldd	r25, Z+1	; 0x01
    37fe:	01 97       	sbiw	r24, 0x01	; 1
    3800:	f1 f7       	brne	.-4      	; 0x37fe <main+0x16b4>
    3802:	fe 01       	movw	r30, r28
    3804:	e9 53       	subi	r30, 0x39	; 57
    3806:	ff 4f       	sbci	r31, 0xFF	; 255
    3808:	91 83       	std	Z+1, r25	; 0x01
    380a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    380c:	de 01       	movw	r26, r28
    380e:	a7 53       	subi	r26, 0x37	; 55
    3810:	bf 4f       	sbci	r27, 0xFF	; 255
    3812:	fe 01       	movw	r30, r28
    3814:	e7 53       	subi	r30, 0x37	; 55
    3816:	ff 4f       	sbci	r31, 0xFF	; 255
    3818:	80 81       	ld	r24, Z
    381a:	91 81       	ldd	r25, Z+1	; 0x01
    381c:	01 97       	sbiw	r24, 0x01	; 1
    381e:	11 96       	adiw	r26, 0x01	; 1
    3820:	9c 93       	st	X, r25
    3822:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3824:	fe 01       	movw	r30, r28
    3826:	e7 53       	subi	r30, 0x37	; 55
    3828:	ff 4f       	sbci	r31, 0xFF	; 255
    382a:	80 81       	ld	r24, Z
    382c:	91 81       	ldd	r25, Z+1	; 0x01
    382e:	00 97       	sbiw	r24, 0x00	; 0
    3830:	d1 f6       	brne	.-76     	; 0x37e6 <main+0x169c>
    3832:	28 c0       	rjmp	.+80     	; 0x3884 <main+0x173a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3834:	8e 01       	movw	r16, r28
    3836:	07 53       	subi	r16, 0x37	; 55
    3838:	1f 4f       	sbci	r17, 0xFF	; 255
    383a:	fe 01       	movw	r30, r28
    383c:	e5 53       	subi	r30, 0x35	; 53
    383e:	ff 4f       	sbci	r31, 0xFF	; 255
    3840:	60 81       	ld	r22, Z
    3842:	71 81       	ldd	r23, Z+1	; 0x01
    3844:	82 81       	ldd	r24, Z+2	; 0x02
    3846:	93 81       	ldd	r25, Z+3	; 0x03
    3848:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    384c:	dc 01       	movw	r26, r24
    384e:	cb 01       	movw	r24, r22
    3850:	f8 01       	movw	r30, r16
    3852:	91 83       	std	Z+1, r25	; 0x01
    3854:	80 83       	st	Z, r24
    3856:	de 01       	movw	r26, r28
    3858:	ab 53       	subi	r26, 0x3B	; 59
    385a:	bf 4f       	sbci	r27, 0xFF	; 255
    385c:	fe 01       	movw	r30, r28
    385e:	e7 53       	subi	r30, 0x37	; 55
    3860:	ff 4f       	sbci	r31, 0xFF	; 255
    3862:	80 81       	ld	r24, Z
    3864:	91 81       	ldd	r25, Z+1	; 0x01
    3866:	11 96       	adiw	r26, 0x01	; 1
    3868:	9c 93       	st	X, r25
    386a:	8e 93       	st	-X, r24
    386c:	fe 01       	movw	r30, r28
    386e:	eb 53       	subi	r30, 0x3B	; 59
    3870:	ff 4f       	sbci	r31, 0xFF	; 255
    3872:	80 81       	ld	r24, Z
    3874:	91 81       	ldd	r25, Z+1	; 0x01
    3876:	01 97       	sbiw	r24, 0x01	; 1
    3878:	f1 f7       	brne	.-4      	; 0x3876 <main+0x172c>
    387a:	fe 01       	movw	r30, r28
    387c:	eb 53       	subi	r30, 0x3B	; 59
    387e:	ff 4f       	sbci	r31, 0xFF	; 255
    3880:	91 83       	std	Z+1, r25	; 0x01
    3882:	80 83       	st	Z, r24
						_delay_ms(500);
					}
				}
			   }while(WRONG_PASS_flag < 3);
    3884:	fe 01       	movw	r30, r28
    3886:	e0 51       	subi	r30, 0x10	; 16
    3888:	ff 4f       	sbci	r31, 0xFF	; 255
    388a:	80 81       	ld	r24, Z
    388c:	83 30       	cpi	r24, 0x03	; 3
    388e:	08 f4       	brcc	.+2      	; 0x3892 <main+0x1748>
    3890:	98 cd       	rjmp	.-1232   	; 0x33c2 <main+0x1278>

			//IF PASSWORD WAS Entered 3 times PB7 Will return the system to
			//ASKING-for-PASS point
			if(WRONG_PASS_flag > 2 )
    3892:	fe 01       	movw	r30, r28
    3894:	e0 51       	subi	r30, 0x10	; 16
    3896:	ff 4f       	sbci	r31, 0xFF	; 255
    3898:	80 81       	ld	r24, Z
    389a:	83 30       	cpi	r24, 0x03	; 3
    389c:	80 f0       	brcs	.+32     	; 0x38be <main+0x1774>
    389e:	08 c0       	rjmp	.+16     	; 0x38b0 <main+0x1766>
			{	//SYS HANGED UNTIL PB7 is PRESSED TO RETURN TO MAIN MENU
				while(RESET_PIN == 1 )
				{
					DIO_GetPinValue(PORTB,PIN7,& RESET_PIN);
    38a0:	9e 01       	movw	r18, r28
    38a2:	2c 50       	subi	r18, 0x0C	; 12
    38a4:	3f 4f       	sbci	r19, 0xFF	; 255
    38a6:	81 e0       	ldi	r24, 0x01	; 1
    38a8:	67 e0       	ldi	r22, 0x07	; 7
    38aa:	a9 01       	movw	r20, r18
    38ac:	0e 94 bd 07 	call	0xf7a	; 0xf7a <DIO_GetPinValue>

			//IF PASSWORD WAS Entered 3 times PB7 Will return the system to
			//ASKING-for-PASS point
			if(WRONG_PASS_flag > 2 )
			{	//SYS HANGED UNTIL PB7 is PRESSED TO RETURN TO MAIN MENU
				while(RESET_PIN == 1 )
    38b0:	fe 01       	movw	r30, r28
    38b2:	ec 50       	subi	r30, 0x0C	; 12
    38b4:	ff 4f       	sbci	r31, 0xFF	; 255
    38b6:	80 81       	ld	r24, Z
    38b8:	81 30       	cpi	r24, 0x01	; 1
    38ba:	91 f3       	breq	.-28     	; 0x38a0 <main+0x1756>
    38bc:	5f cd       	rjmp	.-1346   	; 0x337c <main+0x1232>
			}
			//Display OPtions Menu if PASS IS Correct
			else
			{
				do{
					LCD_WriteCmd(DISPLAY_CLEAR);
    38be:	81 e0       	ldi	r24, 0x01	; 1
    38c0:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
					LCD_GoToXY(0,0);
    38c4:	80 e0       	ldi	r24, 0x00	; 0
    38c6:	60 e0       	ldi	r22, 0x00	; 0
    38c8:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(SETTINGS_MENU_MSG);//OPTIONS:
    38cc:	ce 01       	movw	r24, r28
    38ce:	8e 5c       	subi	r24, 0xCE	; 206
    38d0:	9d 4f       	sbci	r25, 0xFD	; 253
    38d2:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
					LCD_GoToXY(0,1);
    38d6:	80 e0       	ldi	r24, 0x00	; 0
    38d8:	61 e0       	ldi	r22, 0x01	; 1
    38da:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(CLOSE_DOOR_MSG);//2
    38de:	ce 01       	movw	r24, r28
    38e0:	81 57       	subi	r24, 0x71	; 113
    38e2:	9e 4f       	sbci	r25, 0xFE	; 254
    38e4:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    38e8:	fe 01       	movw	r30, r28
    38ea:	ef 53       	subi	r30, 0x3F	; 63
    38ec:	ff 4f       	sbci	r31, 0xFF	; 255
    38ee:	80 e0       	ldi	r24, 0x00	; 0
    38f0:	90 ec       	ldi	r25, 0xC0	; 192
    38f2:	aa e5       	ldi	r26, 0x5A	; 90
    38f4:	b5 e4       	ldi	r27, 0x45	; 69
    38f6:	80 83       	st	Z, r24
    38f8:	91 83       	std	Z+1, r25	; 0x01
    38fa:	a2 83       	std	Z+2, r26	; 0x02
    38fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    38fe:	8e 01       	movw	r16, r28
    3900:	03 54       	subi	r16, 0x43	; 67
    3902:	1f 4f       	sbci	r17, 0xFF	; 255
    3904:	fe 01       	movw	r30, r28
    3906:	ef 53       	subi	r30, 0x3F	; 63
    3908:	ff 4f       	sbci	r31, 0xFF	; 255
    390a:	60 81       	ld	r22, Z
    390c:	71 81       	ldd	r23, Z+1	; 0x01
    390e:	82 81       	ldd	r24, Z+2	; 0x02
    3910:	93 81       	ldd	r25, Z+3	; 0x03
    3912:	20 e0       	ldi	r18, 0x00	; 0
    3914:	30 e0       	ldi	r19, 0x00	; 0
    3916:	4a ef       	ldi	r20, 0xFA	; 250
    3918:	54 e4       	ldi	r21, 0x44	; 68
    391a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    391e:	dc 01       	movw	r26, r24
    3920:	cb 01       	movw	r24, r22
    3922:	f8 01       	movw	r30, r16
    3924:	80 83       	st	Z, r24
    3926:	91 83       	std	Z+1, r25	; 0x01
    3928:	a2 83       	std	Z+2, r26	; 0x02
    392a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    392c:	fe 01       	movw	r30, r28
    392e:	e3 54       	subi	r30, 0x43	; 67
    3930:	ff 4f       	sbci	r31, 0xFF	; 255
    3932:	60 81       	ld	r22, Z
    3934:	71 81       	ldd	r23, Z+1	; 0x01
    3936:	82 81       	ldd	r24, Z+2	; 0x02
    3938:	93 81       	ldd	r25, Z+3	; 0x03
    393a:	20 e0       	ldi	r18, 0x00	; 0
    393c:	30 e0       	ldi	r19, 0x00	; 0
    393e:	40 e8       	ldi	r20, 0x80	; 128
    3940:	5f e3       	ldi	r21, 0x3F	; 63
    3942:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3946:	88 23       	and	r24, r24
    3948:	44 f4       	brge	.+16     	; 0x395a <main+0x1810>
		__ticks = 1;
    394a:	fe 01       	movw	r30, r28
    394c:	e5 54       	subi	r30, 0x45	; 69
    394e:	ff 4f       	sbci	r31, 0xFF	; 255
    3950:	81 e0       	ldi	r24, 0x01	; 1
    3952:	90 e0       	ldi	r25, 0x00	; 0
    3954:	91 83       	std	Z+1, r25	; 0x01
    3956:	80 83       	st	Z, r24
    3958:	64 c0       	rjmp	.+200    	; 0x3a22 <main+0x18d8>
	else if (__tmp > 65535)
    395a:	fe 01       	movw	r30, r28
    395c:	e3 54       	subi	r30, 0x43	; 67
    395e:	ff 4f       	sbci	r31, 0xFF	; 255
    3960:	60 81       	ld	r22, Z
    3962:	71 81       	ldd	r23, Z+1	; 0x01
    3964:	82 81       	ldd	r24, Z+2	; 0x02
    3966:	93 81       	ldd	r25, Z+3	; 0x03
    3968:	20 e0       	ldi	r18, 0x00	; 0
    396a:	3f ef       	ldi	r19, 0xFF	; 255
    396c:	4f e7       	ldi	r20, 0x7F	; 127
    396e:	57 e4       	ldi	r21, 0x47	; 71
    3970:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3974:	18 16       	cp	r1, r24
    3976:	0c f0       	brlt	.+2      	; 0x397a <main+0x1830>
    3978:	43 c0       	rjmp	.+134    	; 0x3a00 <main+0x18b6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    397a:	fe 01       	movw	r30, r28
    397c:	ef 53       	subi	r30, 0x3F	; 63
    397e:	ff 4f       	sbci	r31, 0xFF	; 255
    3980:	60 81       	ld	r22, Z
    3982:	71 81       	ldd	r23, Z+1	; 0x01
    3984:	82 81       	ldd	r24, Z+2	; 0x02
    3986:	93 81       	ldd	r25, Z+3	; 0x03
    3988:	20 e0       	ldi	r18, 0x00	; 0
    398a:	30 e0       	ldi	r19, 0x00	; 0
    398c:	40 e2       	ldi	r20, 0x20	; 32
    398e:	51 e4       	ldi	r21, 0x41	; 65
    3990:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3994:	dc 01       	movw	r26, r24
    3996:	cb 01       	movw	r24, r22
    3998:	8e 01       	movw	r16, r28
    399a:	05 54       	subi	r16, 0x45	; 69
    399c:	1f 4f       	sbci	r17, 0xFF	; 255
    399e:	bc 01       	movw	r22, r24
    39a0:	cd 01       	movw	r24, r26
    39a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    39a6:	dc 01       	movw	r26, r24
    39a8:	cb 01       	movw	r24, r22
    39aa:	f8 01       	movw	r30, r16
    39ac:	91 83       	std	Z+1, r25	; 0x01
    39ae:	80 83       	st	Z, r24
    39b0:	1f c0       	rjmp	.+62     	; 0x39f0 <main+0x18a6>
    39b2:	fe 01       	movw	r30, r28
    39b4:	e7 54       	subi	r30, 0x47	; 71
    39b6:	ff 4f       	sbci	r31, 0xFF	; 255
    39b8:	88 ec       	ldi	r24, 0xC8	; 200
    39ba:	90 e0       	ldi	r25, 0x00	; 0
    39bc:	91 83       	std	Z+1, r25	; 0x01
    39be:	80 83       	st	Z, r24
    39c0:	fe 01       	movw	r30, r28
    39c2:	e7 54       	subi	r30, 0x47	; 71
    39c4:	ff 4f       	sbci	r31, 0xFF	; 255
    39c6:	80 81       	ld	r24, Z
    39c8:	91 81       	ldd	r25, Z+1	; 0x01
    39ca:	01 97       	sbiw	r24, 0x01	; 1
    39cc:	f1 f7       	brne	.-4      	; 0x39ca <main+0x1880>
    39ce:	fe 01       	movw	r30, r28
    39d0:	e7 54       	subi	r30, 0x47	; 71
    39d2:	ff 4f       	sbci	r31, 0xFF	; 255
    39d4:	91 83       	std	Z+1, r25	; 0x01
    39d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    39d8:	de 01       	movw	r26, r28
    39da:	a5 54       	subi	r26, 0x45	; 69
    39dc:	bf 4f       	sbci	r27, 0xFF	; 255
    39de:	fe 01       	movw	r30, r28
    39e0:	e5 54       	subi	r30, 0x45	; 69
    39e2:	ff 4f       	sbci	r31, 0xFF	; 255
    39e4:	80 81       	ld	r24, Z
    39e6:	91 81       	ldd	r25, Z+1	; 0x01
    39e8:	01 97       	sbiw	r24, 0x01	; 1
    39ea:	11 96       	adiw	r26, 0x01	; 1
    39ec:	9c 93       	st	X, r25
    39ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    39f0:	fe 01       	movw	r30, r28
    39f2:	e5 54       	subi	r30, 0x45	; 69
    39f4:	ff 4f       	sbci	r31, 0xFF	; 255
    39f6:	80 81       	ld	r24, Z
    39f8:	91 81       	ldd	r25, Z+1	; 0x01
    39fa:	00 97       	sbiw	r24, 0x00	; 0
    39fc:	d1 f6       	brne	.-76     	; 0x39b2 <main+0x1868>
    39fe:	27 c0       	rjmp	.+78     	; 0x3a4e <main+0x1904>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3a00:	8e 01       	movw	r16, r28
    3a02:	05 54       	subi	r16, 0x45	; 69
    3a04:	1f 4f       	sbci	r17, 0xFF	; 255
    3a06:	fe 01       	movw	r30, r28
    3a08:	e3 54       	subi	r30, 0x43	; 67
    3a0a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a0c:	60 81       	ld	r22, Z
    3a0e:	71 81       	ldd	r23, Z+1	; 0x01
    3a10:	82 81       	ldd	r24, Z+2	; 0x02
    3a12:	93 81       	ldd	r25, Z+3	; 0x03
    3a14:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a18:	dc 01       	movw	r26, r24
    3a1a:	cb 01       	movw	r24, r22
    3a1c:	f8 01       	movw	r30, r16
    3a1e:	91 83       	std	Z+1, r25	; 0x01
    3a20:	80 83       	st	Z, r24
    3a22:	de 01       	movw	r26, r28
    3a24:	a9 54       	subi	r26, 0x49	; 73
    3a26:	bf 4f       	sbci	r27, 0xFF	; 255
    3a28:	fe 01       	movw	r30, r28
    3a2a:	e5 54       	subi	r30, 0x45	; 69
    3a2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a2e:	80 81       	ld	r24, Z
    3a30:	91 81       	ldd	r25, Z+1	; 0x01
    3a32:	8d 93       	st	X+, r24
    3a34:	9c 93       	st	X, r25
    3a36:	fe 01       	movw	r30, r28
    3a38:	e9 54       	subi	r30, 0x49	; 73
    3a3a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a3c:	80 81       	ld	r24, Z
    3a3e:	91 81       	ldd	r25, Z+1	; 0x01
    3a40:	01 97       	sbiw	r24, 0x01	; 1
    3a42:	f1 f7       	brne	.-4      	; 0x3a40 <main+0x18f6>
    3a44:	fe 01       	movw	r30, r28
    3a46:	e9 54       	subi	r30, 0x49	; 73
    3a48:	ff 4f       	sbci	r31, 0xFF	; 255
    3a4a:	91 83       	std	Z+1, r25	; 0x01
    3a4c:	80 83       	st	Z, r24
					_delay_ms(3500);//wait 1.5s
/////////////////////////////////////////////////////////////////////
					LCD_WriteCmd(DISPLAY_CLEAR);
    3a4e:	81 e0       	ldi	r24, 0x01	; 1
    3a50:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
					LCD_GoToXY(0,0);
    3a54:	80 e0       	ldi	r24, 0x00	; 0
    3a56:	60 e0       	ldi	r22, 0x00	; 0
    3a58:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(OPEN_DOOR_MSG);//3
    3a5c:	ce 01       	movw	r24, r28
    3a5e:	82 5a       	subi	r24, 0xA2	; 162
    3a60:	9e 4f       	sbci	r25, 0xFE	; 254
    3a62:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
					LCD_GoToXY(0,1);
    3a66:	80 e0       	ldi	r24, 0x00	; 0
    3a68:	61 e0       	ldi	r22, 0x01	; 1
    3a6a:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(TEMP_BUTTON_MSG);//4
    3a6e:	ce 01       	movw	r24, r28
    3a70:	8b 50       	subi	r24, 0x0B	; 11
    3a72:	9f 4f       	sbci	r25, 0xFF	; 255
    3a74:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    3a78:	fe 01       	movw	r30, r28
    3a7a:	ed 54       	subi	r30, 0x4D	; 77
    3a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    3a7e:	80 e0       	ldi	r24, 0x00	; 0
    3a80:	90 ec       	ldi	r25, 0xC0	; 192
    3a82:	aa e5       	ldi	r26, 0x5A	; 90
    3a84:	b5 e4       	ldi	r27, 0x45	; 69
    3a86:	80 83       	st	Z, r24
    3a88:	91 83       	std	Z+1, r25	; 0x01
    3a8a:	a2 83       	std	Z+2, r26	; 0x02
    3a8c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3a8e:	8e 01       	movw	r16, r28
    3a90:	01 55       	subi	r16, 0x51	; 81
    3a92:	1f 4f       	sbci	r17, 0xFF	; 255
    3a94:	fe 01       	movw	r30, r28
    3a96:	ed 54       	subi	r30, 0x4D	; 77
    3a98:	ff 4f       	sbci	r31, 0xFF	; 255
    3a9a:	60 81       	ld	r22, Z
    3a9c:	71 81       	ldd	r23, Z+1	; 0x01
    3a9e:	82 81       	ldd	r24, Z+2	; 0x02
    3aa0:	93 81       	ldd	r25, Z+3	; 0x03
    3aa2:	20 e0       	ldi	r18, 0x00	; 0
    3aa4:	30 e0       	ldi	r19, 0x00	; 0
    3aa6:	4a ef       	ldi	r20, 0xFA	; 250
    3aa8:	54 e4       	ldi	r21, 0x44	; 68
    3aaa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3aae:	dc 01       	movw	r26, r24
    3ab0:	cb 01       	movw	r24, r22
    3ab2:	f8 01       	movw	r30, r16
    3ab4:	80 83       	st	Z, r24
    3ab6:	91 83       	std	Z+1, r25	; 0x01
    3ab8:	a2 83       	std	Z+2, r26	; 0x02
    3aba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3abc:	fe 01       	movw	r30, r28
    3abe:	e1 55       	subi	r30, 0x51	; 81
    3ac0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac2:	60 81       	ld	r22, Z
    3ac4:	71 81       	ldd	r23, Z+1	; 0x01
    3ac6:	82 81       	ldd	r24, Z+2	; 0x02
    3ac8:	93 81       	ldd	r25, Z+3	; 0x03
    3aca:	20 e0       	ldi	r18, 0x00	; 0
    3acc:	30 e0       	ldi	r19, 0x00	; 0
    3ace:	40 e8       	ldi	r20, 0x80	; 128
    3ad0:	5f e3       	ldi	r21, 0x3F	; 63
    3ad2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3ad6:	88 23       	and	r24, r24
    3ad8:	44 f4       	brge	.+16     	; 0x3aea <main+0x19a0>
		__ticks = 1;
    3ada:	fe 01       	movw	r30, r28
    3adc:	e3 55       	subi	r30, 0x53	; 83
    3ade:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae0:	81 e0       	ldi	r24, 0x01	; 1
    3ae2:	90 e0       	ldi	r25, 0x00	; 0
    3ae4:	91 83       	std	Z+1, r25	; 0x01
    3ae6:	80 83       	st	Z, r24
    3ae8:	64 c0       	rjmp	.+200    	; 0x3bb2 <main+0x1a68>
	else if (__tmp > 65535)
    3aea:	fe 01       	movw	r30, r28
    3aec:	e1 55       	subi	r30, 0x51	; 81
    3aee:	ff 4f       	sbci	r31, 0xFF	; 255
    3af0:	60 81       	ld	r22, Z
    3af2:	71 81       	ldd	r23, Z+1	; 0x01
    3af4:	82 81       	ldd	r24, Z+2	; 0x02
    3af6:	93 81       	ldd	r25, Z+3	; 0x03
    3af8:	20 e0       	ldi	r18, 0x00	; 0
    3afa:	3f ef       	ldi	r19, 0xFF	; 255
    3afc:	4f e7       	ldi	r20, 0x7F	; 127
    3afe:	57 e4       	ldi	r21, 0x47	; 71
    3b00:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3b04:	18 16       	cp	r1, r24
    3b06:	0c f0       	brlt	.+2      	; 0x3b0a <main+0x19c0>
    3b08:	43 c0       	rjmp	.+134    	; 0x3b90 <main+0x1a46>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b0a:	fe 01       	movw	r30, r28
    3b0c:	ed 54       	subi	r30, 0x4D	; 77
    3b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3b10:	60 81       	ld	r22, Z
    3b12:	71 81       	ldd	r23, Z+1	; 0x01
    3b14:	82 81       	ldd	r24, Z+2	; 0x02
    3b16:	93 81       	ldd	r25, Z+3	; 0x03
    3b18:	20 e0       	ldi	r18, 0x00	; 0
    3b1a:	30 e0       	ldi	r19, 0x00	; 0
    3b1c:	40 e2       	ldi	r20, 0x20	; 32
    3b1e:	51 e4       	ldi	r21, 0x41	; 65
    3b20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b24:	dc 01       	movw	r26, r24
    3b26:	cb 01       	movw	r24, r22
    3b28:	8e 01       	movw	r16, r28
    3b2a:	03 55       	subi	r16, 0x53	; 83
    3b2c:	1f 4f       	sbci	r17, 0xFF	; 255
    3b2e:	bc 01       	movw	r22, r24
    3b30:	cd 01       	movw	r24, r26
    3b32:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b36:	dc 01       	movw	r26, r24
    3b38:	cb 01       	movw	r24, r22
    3b3a:	f8 01       	movw	r30, r16
    3b3c:	91 83       	std	Z+1, r25	; 0x01
    3b3e:	80 83       	st	Z, r24
    3b40:	1f c0       	rjmp	.+62     	; 0x3b80 <main+0x1a36>
    3b42:	fe 01       	movw	r30, r28
    3b44:	e5 55       	subi	r30, 0x55	; 85
    3b46:	ff 4f       	sbci	r31, 0xFF	; 255
    3b48:	88 ec       	ldi	r24, 0xC8	; 200
    3b4a:	90 e0       	ldi	r25, 0x00	; 0
    3b4c:	91 83       	std	Z+1, r25	; 0x01
    3b4e:	80 83       	st	Z, r24
    3b50:	fe 01       	movw	r30, r28
    3b52:	e5 55       	subi	r30, 0x55	; 85
    3b54:	ff 4f       	sbci	r31, 0xFF	; 255
    3b56:	80 81       	ld	r24, Z
    3b58:	91 81       	ldd	r25, Z+1	; 0x01
    3b5a:	01 97       	sbiw	r24, 0x01	; 1
    3b5c:	f1 f7       	brne	.-4      	; 0x3b5a <main+0x1a10>
    3b5e:	fe 01       	movw	r30, r28
    3b60:	e5 55       	subi	r30, 0x55	; 85
    3b62:	ff 4f       	sbci	r31, 0xFF	; 255
    3b64:	91 83       	std	Z+1, r25	; 0x01
    3b66:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3b68:	de 01       	movw	r26, r28
    3b6a:	a3 55       	subi	r26, 0x53	; 83
    3b6c:	bf 4f       	sbci	r27, 0xFF	; 255
    3b6e:	fe 01       	movw	r30, r28
    3b70:	e3 55       	subi	r30, 0x53	; 83
    3b72:	ff 4f       	sbci	r31, 0xFF	; 255
    3b74:	80 81       	ld	r24, Z
    3b76:	91 81       	ldd	r25, Z+1	; 0x01
    3b78:	01 97       	sbiw	r24, 0x01	; 1
    3b7a:	11 96       	adiw	r26, 0x01	; 1
    3b7c:	9c 93       	st	X, r25
    3b7e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3b80:	fe 01       	movw	r30, r28
    3b82:	e3 55       	subi	r30, 0x53	; 83
    3b84:	ff 4f       	sbci	r31, 0xFF	; 255
    3b86:	80 81       	ld	r24, Z
    3b88:	91 81       	ldd	r25, Z+1	; 0x01
    3b8a:	00 97       	sbiw	r24, 0x00	; 0
    3b8c:	d1 f6       	brne	.-76     	; 0x3b42 <main+0x19f8>
    3b8e:	27 c0       	rjmp	.+78     	; 0x3bde <main+0x1a94>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3b90:	8e 01       	movw	r16, r28
    3b92:	03 55       	subi	r16, 0x53	; 83
    3b94:	1f 4f       	sbci	r17, 0xFF	; 255
    3b96:	fe 01       	movw	r30, r28
    3b98:	e1 55       	subi	r30, 0x51	; 81
    3b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b9c:	60 81       	ld	r22, Z
    3b9e:	71 81       	ldd	r23, Z+1	; 0x01
    3ba0:	82 81       	ldd	r24, Z+2	; 0x02
    3ba2:	93 81       	ldd	r25, Z+3	; 0x03
    3ba4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ba8:	dc 01       	movw	r26, r24
    3baa:	cb 01       	movw	r24, r22
    3bac:	f8 01       	movw	r30, r16
    3bae:	91 83       	std	Z+1, r25	; 0x01
    3bb0:	80 83       	st	Z, r24
    3bb2:	de 01       	movw	r26, r28
    3bb4:	a7 55       	subi	r26, 0x57	; 87
    3bb6:	bf 4f       	sbci	r27, 0xFF	; 255
    3bb8:	fe 01       	movw	r30, r28
    3bba:	e3 55       	subi	r30, 0x53	; 83
    3bbc:	ff 4f       	sbci	r31, 0xFF	; 255
    3bbe:	80 81       	ld	r24, Z
    3bc0:	91 81       	ldd	r25, Z+1	; 0x01
    3bc2:	8d 93       	st	X+, r24
    3bc4:	9c 93       	st	X, r25
    3bc6:	fe 01       	movw	r30, r28
    3bc8:	e7 55       	subi	r30, 0x57	; 87
    3bca:	ff 4f       	sbci	r31, 0xFF	; 255
    3bcc:	80 81       	ld	r24, Z
    3bce:	91 81       	ldd	r25, Z+1	; 0x01
    3bd0:	01 97       	sbiw	r24, 0x01	; 1
    3bd2:	f1 f7       	brne	.-4      	; 0x3bd0 <main+0x1a86>
    3bd4:	fe 01       	movw	r30, r28
    3bd6:	e7 55       	subi	r30, 0x57	; 87
    3bd8:	ff 4f       	sbci	r31, 0xFF	; 255
    3bda:	91 83       	std	Z+1, r25	; 0x01
    3bdc:	80 83       	st	Z, r24
					_delay_ms(3500);//wait1.5s
/////////////////////////////////////////////////////////////////////
					LCD_WriteCmd(DISPLAY_CLEAR);
    3bde:	81 e0       	ldi	r24, 0x01	; 1
    3be0:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
					LCD_GoToXY(0,0);
    3be4:	80 e0       	ldi	r24, 0x00	; 0
    3be6:	60 e0       	ldi	r22, 0x00	; 0
    3be8:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(TOG_LED_STATE_MSG);//5
    3bec:	ce 01       	movw	r24, r28
    3bee:	83 50       	subi	r24, 0x03	; 3
    3bf0:	9e 4f       	sbci	r25, 0xFE	; 254
    3bf2:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
					LCD_GoToXY(0,1);
    3bf6:	80 e0       	ldi	r24, 0x00	; 0
    3bf8:	61 e0       	ldi	r22, 0x01	; 1
    3bfa:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(SHOW_LED_STATE_MSG);//6
    3bfe:	ce 01       	movw	r24, r28
    3c00:	84 5e       	subi	r24, 0xE4	; 228
    3c02:	9d 4f       	sbci	r25, 0xFD	; 253
    3c04:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    3c08:	fe 01       	movw	r30, r28
    3c0a:	eb 55       	subi	r30, 0x5B	; 91
    3c0c:	ff 4f       	sbci	r31, 0xFF	; 255
    3c0e:	80 e0       	ldi	r24, 0x00	; 0
    3c10:	90 ec       	ldi	r25, 0xC0	; 192
    3c12:	aa e5       	ldi	r26, 0x5A	; 90
    3c14:	b5 e4       	ldi	r27, 0x45	; 69
    3c16:	80 83       	st	Z, r24
    3c18:	91 83       	std	Z+1, r25	; 0x01
    3c1a:	a2 83       	std	Z+2, r26	; 0x02
    3c1c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c1e:	8e 01       	movw	r16, r28
    3c20:	0f 55       	subi	r16, 0x5F	; 95
    3c22:	1f 4f       	sbci	r17, 0xFF	; 255
    3c24:	fe 01       	movw	r30, r28
    3c26:	eb 55       	subi	r30, 0x5B	; 91
    3c28:	ff 4f       	sbci	r31, 0xFF	; 255
    3c2a:	60 81       	ld	r22, Z
    3c2c:	71 81       	ldd	r23, Z+1	; 0x01
    3c2e:	82 81       	ldd	r24, Z+2	; 0x02
    3c30:	93 81       	ldd	r25, Z+3	; 0x03
    3c32:	20 e0       	ldi	r18, 0x00	; 0
    3c34:	30 e0       	ldi	r19, 0x00	; 0
    3c36:	4a ef       	ldi	r20, 0xFA	; 250
    3c38:	54 e4       	ldi	r21, 0x44	; 68
    3c3a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c3e:	dc 01       	movw	r26, r24
    3c40:	cb 01       	movw	r24, r22
    3c42:	f8 01       	movw	r30, r16
    3c44:	80 83       	st	Z, r24
    3c46:	91 83       	std	Z+1, r25	; 0x01
    3c48:	a2 83       	std	Z+2, r26	; 0x02
    3c4a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3c4c:	fe 01       	movw	r30, r28
    3c4e:	ef 55       	subi	r30, 0x5F	; 95
    3c50:	ff 4f       	sbci	r31, 0xFF	; 255
    3c52:	60 81       	ld	r22, Z
    3c54:	71 81       	ldd	r23, Z+1	; 0x01
    3c56:	82 81       	ldd	r24, Z+2	; 0x02
    3c58:	93 81       	ldd	r25, Z+3	; 0x03
    3c5a:	20 e0       	ldi	r18, 0x00	; 0
    3c5c:	30 e0       	ldi	r19, 0x00	; 0
    3c5e:	40 e8       	ldi	r20, 0x80	; 128
    3c60:	5f e3       	ldi	r21, 0x3F	; 63
    3c62:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c66:	88 23       	and	r24, r24
    3c68:	44 f4       	brge	.+16     	; 0x3c7a <main+0x1b30>
		__ticks = 1;
    3c6a:	fe 01       	movw	r30, r28
    3c6c:	e1 56       	subi	r30, 0x61	; 97
    3c6e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c70:	81 e0       	ldi	r24, 0x01	; 1
    3c72:	90 e0       	ldi	r25, 0x00	; 0
    3c74:	91 83       	std	Z+1, r25	; 0x01
    3c76:	80 83       	st	Z, r24
    3c78:	64 c0       	rjmp	.+200    	; 0x3d42 <main+0x1bf8>
	else if (__tmp > 65535)
    3c7a:	fe 01       	movw	r30, r28
    3c7c:	ef 55       	subi	r30, 0x5F	; 95
    3c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    3c80:	60 81       	ld	r22, Z
    3c82:	71 81       	ldd	r23, Z+1	; 0x01
    3c84:	82 81       	ldd	r24, Z+2	; 0x02
    3c86:	93 81       	ldd	r25, Z+3	; 0x03
    3c88:	20 e0       	ldi	r18, 0x00	; 0
    3c8a:	3f ef       	ldi	r19, 0xFF	; 255
    3c8c:	4f e7       	ldi	r20, 0x7F	; 127
    3c8e:	57 e4       	ldi	r21, 0x47	; 71
    3c90:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c94:	18 16       	cp	r1, r24
    3c96:	0c f0       	brlt	.+2      	; 0x3c9a <main+0x1b50>
    3c98:	43 c0       	rjmp	.+134    	; 0x3d20 <main+0x1bd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c9a:	fe 01       	movw	r30, r28
    3c9c:	eb 55       	subi	r30, 0x5B	; 91
    3c9e:	ff 4f       	sbci	r31, 0xFF	; 255
    3ca0:	60 81       	ld	r22, Z
    3ca2:	71 81       	ldd	r23, Z+1	; 0x01
    3ca4:	82 81       	ldd	r24, Z+2	; 0x02
    3ca6:	93 81       	ldd	r25, Z+3	; 0x03
    3ca8:	20 e0       	ldi	r18, 0x00	; 0
    3caa:	30 e0       	ldi	r19, 0x00	; 0
    3cac:	40 e2       	ldi	r20, 0x20	; 32
    3cae:	51 e4       	ldi	r21, 0x41	; 65
    3cb0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3cb4:	dc 01       	movw	r26, r24
    3cb6:	cb 01       	movw	r24, r22
    3cb8:	8e 01       	movw	r16, r28
    3cba:	01 56       	subi	r16, 0x61	; 97
    3cbc:	1f 4f       	sbci	r17, 0xFF	; 255
    3cbe:	bc 01       	movw	r22, r24
    3cc0:	cd 01       	movw	r24, r26
    3cc2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3cc6:	dc 01       	movw	r26, r24
    3cc8:	cb 01       	movw	r24, r22
    3cca:	f8 01       	movw	r30, r16
    3ccc:	91 83       	std	Z+1, r25	; 0x01
    3cce:	80 83       	st	Z, r24
    3cd0:	1f c0       	rjmp	.+62     	; 0x3d10 <main+0x1bc6>
    3cd2:	fe 01       	movw	r30, r28
    3cd4:	e3 56       	subi	r30, 0x63	; 99
    3cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    3cd8:	88 ec       	ldi	r24, 0xC8	; 200
    3cda:	90 e0       	ldi	r25, 0x00	; 0
    3cdc:	91 83       	std	Z+1, r25	; 0x01
    3cde:	80 83       	st	Z, r24
    3ce0:	fe 01       	movw	r30, r28
    3ce2:	e3 56       	subi	r30, 0x63	; 99
    3ce4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ce6:	80 81       	ld	r24, Z
    3ce8:	91 81       	ldd	r25, Z+1	; 0x01
    3cea:	01 97       	sbiw	r24, 0x01	; 1
    3cec:	f1 f7       	brne	.-4      	; 0x3cea <main+0x1ba0>
    3cee:	fe 01       	movw	r30, r28
    3cf0:	e3 56       	subi	r30, 0x63	; 99
    3cf2:	ff 4f       	sbci	r31, 0xFF	; 255
    3cf4:	91 83       	std	Z+1, r25	; 0x01
    3cf6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cf8:	de 01       	movw	r26, r28
    3cfa:	a1 56       	subi	r26, 0x61	; 97
    3cfc:	bf 4f       	sbci	r27, 0xFF	; 255
    3cfe:	fe 01       	movw	r30, r28
    3d00:	e1 56       	subi	r30, 0x61	; 97
    3d02:	ff 4f       	sbci	r31, 0xFF	; 255
    3d04:	80 81       	ld	r24, Z
    3d06:	91 81       	ldd	r25, Z+1	; 0x01
    3d08:	01 97       	sbiw	r24, 0x01	; 1
    3d0a:	11 96       	adiw	r26, 0x01	; 1
    3d0c:	9c 93       	st	X, r25
    3d0e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3d10:	fe 01       	movw	r30, r28
    3d12:	e1 56       	subi	r30, 0x61	; 97
    3d14:	ff 4f       	sbci	r31, 0xFF	; 255
    3d16:	80 81       	ld	r24, Z
    3d18:	91 81       	ldd	r25, Z+1	; 0x01
    3d1a:	00 97       	sbiw	r24, 0x00	; 0
    3d1c:	d1 f6       	brne	.-76     	; 0x3cd2 <main+0x1b88>
    3d1e:	27 c0       	rjmp	.+78     	; 0x3d6e <main+0x1c24>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3d20:	8e 01       	movw	r16, r28
    3d22:	01 56       	subi	r16, 0x61	; 97
    3d24:	1f 4f       	sbci	r17, 0xFF	; 255
    3d26:	fe 01       	movw	r30, r28
    3d28:	ef 55       	subi	r30, 0x5F	; 95
    3d2a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d2c:	60 81       	ld	r22, Z
    3d2e:	71 81       	ldd	r23, Z+1	; 0x01
    3d30:	82 81       	ldd	r24, Z+2	; 0x02
    3d32:	93 81       	ldd	r25, Z+3	; 0x03
    3d34:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3d38:	dc 01       	movw	r26, r24
    3d3a:	cb 01       	movw	r24, r22
    3d3c:	f8 01       	movw	r30, r16
    3d3e:	91 83       	std	Z+1, r25	; 0x01
    3d40:	80 83       	st	Z, r24
    3d42:	de 01       	movw	r26, r28
    3d44:	a5 56       	subi	r26, 0x65	; 101
    3d46:	bf 4f       	sbci	r27, 0xFF	; 255
    3d48:	fe 01       	movw	r30, r28
    3d4a:	e1 56       	subi	r30, 0x61	; 97
    3d4c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d4e:	80 81       	ld	r24, Z
    3d50:	91 81       	ldd	r25, Z+1	; 0x01
    3d52:	8d 93       	st	X+, r24
    3d54:	9c 93       	st	X, r25
    3d56:	fe 01       	movw	r30, r28
    3d58:	e5 56       	subi	r30, 0x65	; 101
    3d5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3d5c:	80 81       	ld	r24, Z
    3d5e:	91 81       	ldd	r25, Z+1	; 0x01
    3d60:	01 97       	sbiw	r24, 0x01	; 1
    3d62:	f1 f7       	brne	.-4      	; 0x3d60 <main+0x1c16>
    3d64:	fe 01       	movw	r30, r28
    3d66:	e5 56       	subi	r30, 0x65	; 101
    3d68:	ff 4f       	sbci	r31, 0xFF	; 255
    3d6a:	91 83       	std	Z+1, r25	; 0x01
    3d6c:	80 83       	st	Z, r24
					_delay_ms(3500);//wait1.5s
/////////////////////////////////////////////////////////////////////
					LCD_WriteCmd(DISPLAY_CLEAR);
    3d6e:	81 e0       	ldi	r24, 0x01	; 1
    3d70:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
					LCD_GoToXY(0,0);
    3d74:	80 e0       	ldi	r24, 0x00	; 0
    3d76:	60 e0       	ldi	r22, 0x00	; 0
    3d78:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(FAN_SPEED_MSG);//+,-
    3d7c:	ce 01       	movw	r24, r28
    3d7e:	8d 5c       	subi	r24, 0xCD	; 205
    3d80:	9e 4f       	sbci	r25, 0xFE	; 254
    3d82:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
					LCD_GoToXY(0,1);
    3d86:	80 e0       	ldi	r24, 0x00	; 0
    3d88:	61 e0       	ldi	r22, 0x01	; 1
    3d8a:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(AUTO_CONTROL_INPUT_MSG);//*
    3d8e:	ce 01       	movw	r24, r28
    3d90:	89 52       	subi	r24, 0x29	; 41
    3d92:	9e 4f       	sbci	r25, 0xFE	; 254
    3d94:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    3d98:	fe 01       	movw	r30, r28
    3d9a:	e9 56       	subi	r30, 0x69	; 105
    3d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9e:	80 e0       	ldi	r24, 0x00	; 0
    3da0:	90 ec       	ldi	r25, 0xC0	; 192
    3da2:	aa e5       	ldi	r26, 0x5A	; 90
    3da4:	b5 e4       	ldi	r27, 0x45	; 69
    3da6:	80 83       	st	Z, r24
    3da8:	91 83       	std	Z+1, r25	; 0x01
    3daa:	a2 83       	std	Z+2, r26	; 0x02
    3dac:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3dae:	8e 01       	movw	r16, r28
    3db0:	0d 56       	subi	r16, 0x6D	; 109
    3db2:	1f 4f       	sbci	r17, 0xFF	; 255
    3db4:	fe 01       	movw	r30, r28
    3db6:	e9 56       	subi	r30, 0x69	; 105
    3db8:	ff 4f       	sbci	r31, 0xFF	; 255
    3dba:	60 81       	ld	r22, Z
    3dbc:	71 81       	ldd	r23, Z+1	; 0x01
    3dbe:	82 81       	ldd	r24, Z+2	; 0x02
    3dc0:	93 81       	ldd	r25, Z+3	; 0x03
    3dc2:	20 e0       	ldi	r18, 0x00	; 0
    3dc4:	30 e0       	ldi	r19, 0x00	; 0
    3dc6:	4a ef       	ldi	r20, 0xFA	; 250
    3dc8:	54 e4       	ldi	r21, 0x44	; 68
    3dca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3dce:	dc 01       	movw	r26, r24
    3dd0:	cb 01       	movw	r24, r22
    3dd2:	f8 01       	movw	r30, r16
    3dd4:	80 83       	st	Z, r24
    3dd6:	91 83       	std	Z+1, r25	; 0x01
    3dd8:	a2 83       	std	Z+2, r26	; 0x02
    3dda:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3ddc:	fe 01       	movw	r30, r28
    3dde:	ed 56       	subi	r30, 0x6D	; 109
    3de0:	ff 4f       	sbci	r31, 0xFF	; 255
    3de2:	60 81       	ld	r22, Z
    3de4:	71 81       	ldd	r23, Z+1	; 0x01
    3de6:	82 81       	ldd	r24, Z+2	; 0x02
    3de8:	93 81       	ldd	r25, Z+3	; 0x03
    3dea:	20 e0       	ldi	r18, 0x00	; 0
    3dec:	30 e0       	ldi	r19, 0x00	; 0
    3dee:	40 e8       	ldi	r20, 0x80	; 128
    3df0:	5f e3       	ldi	r21, 0x3F	; 63
    3df2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3df6:	88 23       	and	r24, r24
    3df8:	44 f4       	brge	.+16     	; 0x3e0a <main+0x1cc0>
		__ticks = 1;
    3dfa:	fe 01       	movw	r30, r28
    3dfc:	ef 56       	subi	r30, 0x6F	; 111
    3dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    3e00:	81 e0       	ldi	r24, 0x01	; 1
    3e02:	90 e0       	ldi	r25, 0x00	; 0
    3e04:	91 83       	std	Z+1, r25	; 0x01
    3e06:	80 83       	st	Z, r24
    3e08:	64 c0       	rjmp	.+200    	; 0x3ed2 <main+0x1d88>
	else if (__tmp > 65535)
    3e0a:	fe 01       	movw	r30, r28
    3e0c:	ed 56       	subi	r30, 0x6D	; 109
    3e0e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e10:	60 81       	ld	r22, Z
    3e12:	71 81       	ldd	r23, Z+1	; 0x01
    3e14:	82 81       	ldd	r24, Z+2	; 0x02
    3e16:	93 81       	ldd	r25, Z+3	; 0x03
    3e18:	20 e0       	ldi	r18, 0x00	; 0
    3e1a:	3f ef       	ldi	r19, 0xFF	; 255
    3e1c:	4f e7       	ldi	r20, 0x7F	; 127
    3e1e:	57 e4       	ldi	r21, 0x47	; 71
    3e20:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3e24:	18 16       	cp	r1, r24
    3e26:	0c f0       	brlt	.+2      	; 0x3e2a <main+0x1ce0>
    3e28:	43 c0       	rjmp	.+134    	; 0x3eb0 <main+0x1d66>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3e2a:	fe 01       	movw	r30, r28
    3e2c:	e9 56       	subi	r30, 0x69	; 105
    3e2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e30:	60 81       	ld	r22, Z
    3e32:	71 81       	ldd	r23, Z+1	; 0x01
    3e34:	82 81       	ldd	r24, Z+2	; 0x02
    3e36:	93 81       	ldd	r25, Z+3	; 0x03
    3e38:	20 e0       	ldi	r18, 0x00	; 0
    3e3a:	30 e0       	ldi	r19, 0x00	; 0
    3e3c:	40 e2       	ldi	r20, 0x20	; 32
    3e3e:	51 e4       	ldi	r21, 0x41	; 65
    3e40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3e44:	dc 01       	movw	r26, r24
    3e46:	cb 01       	movw	r24, r22
    3e48:	8e 01       	movw	r16, r28
    3e4a:	0f 56       	subi	r16, 0x6F	; 111
    3e4c:	1f 4f       	sbci	r17, 0xFF	; 255
    3e4e:	bc 01       	movw	r22, r24
    3e50:	cd 01       	movw	r24, r26
    3e52:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3e56:	dc 01       	movw	r26, r24
    3e58:	cb 01       	movw	r24, r22
    3e5a:	f8 01       	movw	r30, r16
    3e5c:	91 83       	std	Z+1, r25	; 0x01
    3e5e:	80 83       	st	Z, r24
    3e60:	1f c0       	rjmp	.+62     	; 0x3ea0 <main+0x1d56>
    3e62:	fe 01       	movw	r30, r28
    3e64:	e1 57       	subi	r30, 0x71	; 113
    3e66:	ff 4f       	sbci	r31, 0xFF	; 255
    3e68:	88 ec       	ldi	r24, 0xC8	; 200
    3e6a:	90 e0       	ldi	r25, 0x00	; 0
    3e6c:	91 83       	std	Z+1, r25	; 0x01
    3e6e:	80 83       	st	Z, r24
    3e70:	fe 01       	movw	r30, r28
    3e72:	e1 57       	subi	r30, 0x71	; 113
    3e74:	ff 4f       	sbci	r31, 0xFF	; 255
    3e76:	80 81       	ld	r24, Z
    3e78:	91 81       	ldd	r25, Z+1	; 0x01
    3e7a:	01 97       	sbiw	r24, 0x01	; 1
    3e7c:	f1 f7       	brne	.-4      	; 0x3e7a <main+0x1d30>
    3e7e:	fe 01       	movw	r30, r28
    3e80:	e1 57       	subi	r30, 0x71	; 113
    3e82:	ff 4f       	sbci	r31, 0xFF	; 255
    3e84:	91 83       	std	Z+1, r25	; 0x01
    3e86:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3e88:	de 01       	movw	r26, r28
    3e8a:	af 56       	subi	r26, 0x6F	; 111
    3e8c:	bf 4f       	sbci	r27, 0xFF	; 255
    3e8e:	fe 01       	movw	r30, r28
    3e90:	ef 56       	subi	r30, 0x6F	; 111
    3e92:	ff 4f       	sbci	r31, 0xFF	; 255
    3e94:	80 81       	ld	r24, Z
    3e96:	91 81       	ldd	r25, Z+1	; 0x01
    3e98:	01 97       	sbiw	r24, 0x01	; 1
    3e9a:	11 96       	adiw	r26, 0x01	; 1
    3e9c:	9c 93       	st	X, r25
    3e9e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ea0:	fe 01       	movw	r30, r28
    3ea2:	ef 56       	subi	r30, 0x6F	; 111
    3ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    3ea6:	80 81       	ld	r24, Z
    3ea8:	91 81       	ldd	r25, Z+1	; 0x01
    3eaa:	00 97       	sbiw	r24, 0x00	; 0
    3eac:	d1 f6       	brne	.-76     	; 0x3e62 <main+0x1d18>
    3eae:	27 c0       	rjmp	.+78     	; 0x3efe <main+0x1db4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3eb0:	8e 01       	movw	r16, r28
    3eb2:	0f 56       	subi	r16, 0x6F	; 111
    3eb4:	1f 4f       	sbci	r17, 0xFF	; 255
    3eb6:	fe 01       	movw	r30, r28
    3eb8:	ed 56       	subi	r30, 0x6D	; 109
    3eba:	ff 4f       	sbci	r31, 0xFF	; 255
    3ebc:	60 81       	ld	r22, Z
    3ebe:	71 81       	ldd	r23, Z+1	; 0x01
    3ec0:	82 81       	ldd	r24, Z+2	; 0x02
    3ec2:	93 81       	ldd	r25, Z+3	; 0x03
    3ec4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ec8:	dc 01       	movw	r26, r24
    3eca:	cb 01       	movw	r24, r22
    3ecc:	f8 01       	movw	r30, r16
    3ece:	91 83       	std	Z+1, r25	; 0x01
    3ed0:	80 83       	st	Z, r24
    3ed2:	de 01       	movw	r26, r28
    3ed4:	a3 57       	subi	r26, 0x73	; 115
    3ed6:	bf 4f       	sbci	r27, 0xFF	; 255
    3ed8:	fe 01       	movw	r30, r28
    3eda:	ef 56       	subi	r30, 0x6F	; 111
    3edc:	ff 4f       	sbci	r31, 0xFF	; 255
    3ede:	80 81       	ld	r24, Z
    3ee0:	91 81       	ldd	r25, Z+1	; 0x01
    3ee2:	8d 93       	st	X+, r24
    3ee4:	9c 93       	st	X, r25
    3ee6:	fe 01       	movw	r30, r28
    3ee8:	e3 57       	subi	r30, 0x73	; 115
    3eea:	ff 4f       	sbci	r31, 0xFF	; 255
    3eec:	80 81       	ld	r24, Z
    3eee:	91 81       	ldd	r25, Z+1	; 0x01
    3ef0:	01 97       	sbiw	r24, 0x01	; 1
    3ef2:	f1 f7       	brne	.-4      	; 0x3ef0 <main+0x1da6>
    3ef4:	fe 01       	movw	r30, r28
    3ef6:	e3 57       	subi	r30, 0x73	; 115
    3ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    3efa:	91 83       	std	Z+1, r25	; 0x01
    3efc:	80 83       	st	Z, r24
					_delay_ms(3500);//wait1.5s
/////////////////////////////////////////////////////////////////////
					LCD_WriteCmd(DISPLAY_CLEAR);
    3efe:	81 e0       	ldi	r24, 0x01	; 1
    3f00:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
					LCD_GoToXY(0,0);
    3f04:	80 e0       	ldi	r24, 0x00	; 0
    3f06:	60 e0       	ldi	r22, 0x00	; 0
    3f08:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(MENU_AGAIN_MSG);//MENU AGAIN ?
    3f0c:	ce 01       	movw	r24, r28
    3f0e:	84 5b       	subi	r24, 0xB4	; 180
    3f10:	9d 4f       	sbci	r25, 0xFD	; 253
    3f12:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
					LCD_GoToXY(0,1);
    3f16:	80 e0       	ldi	r24, 0x00	; 0
    3f18:	61 e0       	ldi	r22, 0x01	; 1
    3f1a:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
					LCD_WriteString(SEL_MSG);//SEL
    3f1e:	ce 01       	movw	r24, r28
    3f20:	84 5a       	subi	r24, 0xA4	; 164
    3f22:	9d 4f       	sbci	r25, 0xFD	; 253
    3f24:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
/////////////////////////////////////////////////////////////////////
					KeyPressed = '@';
    3f28:	fe 01       	movw	r30, r28
    3f2a:	ee 50       	subi	r30, 0x0E	; 14
    3f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f2e:	80 e4       	ldi	r24, 0x40	; 64
    3f30:	80 83       	st	Z, r24
    3f32:	06 c0       	rjmp	.+12     	; 0x3f40 <main+0x1df6>
					while(KeyPressed == '@')
					{
						KeyPressed	= KPD_GetPressedKey();
    3f34:	0e 94 ca 09 	call	0x1394	; 0x1394 <KPD_GetPressedKey>
    3f38:	fe 01       	movw	r30, r28
    3f3a:	ee 50       	subi	r30, 0x0E	; 14
    3f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f3e:	80 83       	st	Z, r24
					LCD_WriteString(MENU_AGAIN_MSG);//MENU AGAIN ?
					LCD_GoToXY(0,1);
					LCD_WriteString(SEL_MSG);//SEL
/////////////////////////////////////////////////////////////////////
					KeyPressed = '@';
					while(KeyPressed == '@')
    3f40:	fe 01       	movw	r30, r28
    3f42:	ee 50       	subi	r30, 0x0E	; 14
    3f44:	ff 4f       	sbci	r31, 0xFF	; 255
    3f46:	80 81       	ld	r24, Z
    3f48:	80 34       	cpi	r24, 0x40	; 64
    3f4a:	a1 f3       	breq	.-24     	; 0x3f34 <main+0x1dea>
					{
						KeyPressed	= KPD_GetPressedKey();
					}
					if (KeyPressed == '1')
    3f4c:	fe 01       	movw	r30, r28
    3f4e:	ee 50       	subi	r30, 0x0E	; 14
    3f50:	ff 4f       	sbci	r31, 0xFF	; 255
    3f52:	80 81       	ld	r24, Z
    3f54:	81 33       	cpi	r24, 0x31	; 49
    3f56:	31 f4       	brne	.+12     	; 0x3f64 <main+0x1e1a>
					{
						Repeat_MENU_flag = 1;
    3f58:	fe 01       	movw	r30, r28
    3f5a:	e1 51       	subi	r30, 0x11	; 17
    3f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f5e:	81 e0       	ldi	r24, 0x01	; 1
    3f60:	80 83       	st	Z, r24
    3f62:	10 c0       	rjmp	.+32     	; 0x3f84 <main+0x1e3a>
					}
					else
					{
						Repeat_MENU_flag = 0;
    3f64:	fe 01       	movw	r30, r28
    3f66:	e1 51       	subi	r30, 0x11	; 17
    3f68:	ff 4f       	sbci	r31, 0xFF	; 255
    3f6a:	10 82       	st	Z, r1
						LCD_WriteCmd(DISPLAY_CLEAR);
    3f6c:	81 e0       	ldi	r24, 0x01	; 1
    3f6e:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
						LCD_GoToXY(0,0);
    3f72:	80 e0       	ldi	r24, 0x00	; 0
    3f74:	60 e0       	ldi	r22, 0x00	; 0
    3f76:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
						LCD_WriteString(ENTRY_MSG);
    3f7a:	ce 01       	movw	r24, r28
    3f7c:	85 5c       	subi	r24, 0xC5	; 197
    3f7e:	9d 4f       	sbci	r25, 0xFD	; 253
    3f80:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
					}

				  }while(Repeat_MENU_flag == 1);
    3f84:	fe 01       	movw	r30, r28
    3f86:	e1 51       	subi	r30, 0x11	; 17
    3f88:	ff 4f       	sbci	r31, 0xFF	; 255
    3f8a:	80 81       	ld	r24, Z
    3f8c:	81 30       	cpi	r24, 0x01	; 1
    3f8e:	09 f4       	brne	.+2      	; 0x3f92 <main+0x1e48>
    3f90:	96 cc       	rjmp	.-1748   	; 0x38be <main+0x1774>
    3f92:	f4 c9       	rjmp	.-3096   	; 0x337c <main+0x1232>

			}


		}
		else if (KeyPressed == '2')
    3f94:	fe 01       	movw	r30, r28
    3f96:	ee 50       	subi	r30, 0x0E	; 14
    3f98:	ff 4f       	sbci	r31, 0xFF	; 255
    3f9a:	80 81       	ld	r24, Z
    3f9c:	82 33       	cpi	r24, 0x32	; 50
    3f9e:	09 f0       	breq	.+2      	; 0x3fa2 <main+0x1e58>
    3fa0:	f2 c0       	rjmp	.+484    	; 0x4186 <main+0x203c>
		{//CLOSE the DOOR
			DIO_SetPinValue(PORTB,PIN6,LOW);
    3fa2:	81 e0       	ldi	r24, 0x01	; 1
    3fa4:	66 e0       	ldi	r22, 0x06	; 6
    3fa6:	40 e0       	ldi	r20, 0x00	; 0
    3fa8:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    3fac:	fe 01       	movw	r30, r28
    3fae:	ee 50       	subi	r30, 0x0E	; 14
    3fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    3fb2:	80 e4       	ldi	r24, 0x40	; 64
    3fb4:	80 83       	st	Z, r24
			ReceivedChar = 0;
    3fb6:	fe 01       	movw	r30, r28
    3fb8:	ed 50       	subi	r30, 0x0D	; 13
    3fba:	ff 4f       	sbci	r31, 0xFF	; 255
    3fbc:	10 82       	st	Z, r1
			LCD_WriteCmd(DISPLAY_CLEAR);
    3fbe:	81 e0       	ldi	r24, 0x01	; 1
    3fc0:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    3fc4:	80 e0       	ldi	r24, 0x00	; 0
    3fc6:	60 e0       	ldi	r22, 0x00	; 0
    3fc8:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			//Send USING UART '2' to CLOSE THE DOOR & ENABLE MANUAL CONTROL
			UART_SEND_CHAR_POLLING('2');
    3fcc:	82 e3       	ldi	r24, 0x32	; 50
    3fce:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
			//Receive DOOR STATE
			UART_RECEIVE_CHAR_POLLING(& ReceivedChar);
    3fd2:	ce 01       	movw	r24, r28
    3fd4:	8d 50       	subi	r24, 0x0D	; 13
    3fd6:	9f 4f       	sbci	r25, 0xFF	; 255
    3fd8:	0e 94 8e 10 	call	0x211c	; 0x211c <UART_RECEIVE_CHAR_POLLING>
			if (ReceivedChar == '1')
    3fdc:	fe 01       	movw	r30, r28
    3fde:	ed 50       	subi	r30, 0x0D	; 13
    3fe0:	ff 4f       	sbci	r31, 0xFF	; 255
    3fe2:	80 81       	ld	r24, Z
    3fe4:	81 33       	cpi	r24, 0x31	; 49
    3fe6:	31 f4       	brne	.+12     	; 0x3ff4 <main+0x1eaa>
			{
				//PRINT DOOR IS CLOSING
				LCD_WriteString(CLOSED_DONE_DOOR_MSG);
    3fe8:	ce 01       	movw	r24, r28
    3fea:	81 56       	subi	r24, 0x61	; 97
    3fec:	9e 4f       	sbci	r25, 0xFE	; 254
    3fee:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    3ff2:	14 c0       	rjmp	.+40     	; 0x401c <main+0x1ed2>
			}
			else if (ReceivedChar == '0')
    3ff4:	fe 01       	movw	r30, r28
    3ff6:	ed 50       	subi	r30, 0x0D	; 13
    3ff8:	ff 4f       	sbci	r31, 0xFF	; 255
    3ffa:	80 81       	ld	r24, Z
    3ffc:	80 33       	cpi	r24, 0x30	; 48
    3ffe:	71 f4       	brne	.+28     	; 0x401c <main+0x1ed2>
			{
				//PRINT DOOR IS CLOSED Already
				LCD_WriteString(CLOSED_NOT_DONE_DOOR_MSG);
    4000:	ce 01       	movw	r24, r28
    4002:	81 55       	subi	r24, 0x51	; 81
    4004:	9e 4f       	sbci	r25, 0xFE	; 254
    4006:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
				LCD_GoToXY(0,1);
    400a:	80 e0       	ldi	r24, 0x00	; 0
    400c:	61 e0       	ldi	r22, 0x01	; 1
    400e:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
				LCD_WriteString(ALREADY_MSG);
    4012:	ce 01       	movw	r24, r28
    4014:	81 54       	subi	r24, 0x41	; 65
    4016:	9e 4f       	sbci	r25, 0xFE	; 254
    4018:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    401c:	fe 01       	movw	r30, r28
    401e:	e7 57       	subi	r30, 0x77	; 119
    4020:	ff 4f       	sbci	r31, 0xFF	; 255
    4022:	80 e0       	ldi	r24, 0x00	; 0
    4024:	90 e0       	ldi	r25, 0x00	; 0
    4026:	aa ef       	ldi	r26, 0xFA	; 250
    4028:	b4 e4       	ldi	r27, 0x44	; 68
    402a:	80 83       	st	Z, r24
    402c:	91 83       	std	Z+1, r25	; 0x01
    402e:	a2 83       	std	Z+2, r26	; 0x02
    4030:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4032:	8e 01       	movw	r16, r28
    4034:	0b 57       	subi	r16, 0x7B	; 123
    4036:	1f 4f       	sbci	r17, 0xFF	; 255
    4038:	fe 01       	movw	r30, r28
    403a:	e7 57       	subi	r30, 0x77	; 119
    403c:	ff 4f       	sbci	r31, 0xFF	; 255
    403e:	60 81       	ld	r22, Z
    4040:	71 81       	ldd	r23, Z+1	; 0x01
    4042:	82 81       	ldd	r24, Z+2	; 0x02
    4044:	93 81       	ldd	r25, Z+3	; 0x03
    4046:	20 e0       	ldi	r18, 0x00	; 0
    4048:	30 e0       	ldi	r19, 0x00	; 0
    404a:	4a ef       	ldi	r20, 0xFA	; 250
    404c:	54 e4       	ldi	r21, 0x44	; 68
    404e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4052:	dc 01       	movw	r26, r24
    4054:	cb 01       	movw	r24, r22
    4056:	f8 01       	movw	r30, r16
    4058:	80 83       	st	Z, r24
    405a:	91 83       	std	Z+1, r25	; 0x01
    405c:	a2 83       	std	Z+2, r26	; 0x02
    405e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4060:	fe 01       	movw	r30, r28
    4062:	eb 57       	subi	r30, 0x7B	; 123
    4064:	ff 4f       	sbci	r31, 0xFF	; 255
    4066:	60 81       	ld	r22, Z
    4068:	71 81       	ldd	r23, Z+1	; 0x01
    406a:	82 81       	ldd	r24, Z+2	; 0x02
    406c:	93 81       	ldd	r25, Z+3	; 0x03
    406e:	20 e0       	ldi	r18, 0x00	; 0
    4070:	30 e0       	ldi	r19, 0x00	; 0
    4072:	40 e8       	ldi	r20, 0x80	; 128
    4074:	5f e3       	ldi	r21, 0x3F	; 63
    4076:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    407a:	88 23       	and	r24, r24
    407c:	44 f4       	brge	.+16     	; 0x408e <main+0x1f44>
		__ticks = 1;
    407e:	fe 01       	movw	r30, r28
    4080:	ed 57       	subi	r30, 0x7D	; 125
    4082:	ff 4f       	sbci	r31, 0xFF	; 255
    4084:	81 e0       	ldi	r24, 0x01	; 1
    4086:	90 e0       	ldi	r25, 0x00	; 0
    4088:	91 83       	std	Z+1, r25	; 0x01
    408a:	80 83       	st	Z, r24
    408c:	64 c0       	rjmp	.+200    	; 0x4156 <main+0x200c>
	else if (__tmp > 65535)
    408e:	fe 01       	movw	r30, r28
    4090:	eb 57       	subi	r30, 0x7B	; 123
    4092:	ff 4f       	sbci	r31, 0xFF	; 255
    4094:	60 81       	ld	r22, Z
    4096:	71 81       	ldd	r23, Z+1	; 0x01
    4098:	82 81       	ldd	r24, Z+2	; 0x02
    409a:	93 81       	ldd	r25, Z+3	; 0x03
    409c:	20 e0       	ldi	r18, 0x00	; 0
    409e:	3f ef       	ldi	r19, 0xFF	; 255
    40a0:	4f e7       	ldi	r20, 0x7F	; 127
    40a2:	57 e4       	ldi	r21, 0x47	; 71
    40a4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    40a8:	18 16       	cp	r1, r24
    40aa:	0c f0       	brlt	.+2      	; 0x40ae <main+0x1f64>
    40ac:	43 c0       	rjmp	.+134    	; 0x4134 <main+0x1fea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40ae:	fe 01       	movw	r30, r28
    40b0:	e7 57       	subi	r30, 0x77	; 119
    40b2:	ff 4f       	sbci	r31, 0xFF	; 255
    40b4:	60 81       	ld	r22, Z
    40b6:	71 81       	ldd	r23, Z+1	; 0x01
    40b8:	82 81       	ldd	r24, Z+2	; 0x02
    40ba:	93 81       	ldd	r25, Z+3	; 0x03
    40bc:	20 e0       	ldi	r18, 0x00	; 0
    40be:	30 e0       	ldi	r19, 0x00	; 0
    40c0:	40 e2       	ldi	r20, 0x20	; 32
    40c2:	51 e4       	ldi	r21, 0x41	; 65
    40c4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40c8:	dc 01       	movw	r26, r24
    40ca:	cb 01       	movw	r24, r22
    40cc:	8e 01       	movw	r16, r28
    40ce:	0d 57       	subi	r16, 0x7D	; 125
    40d0:	1f 4f       	sbci	r17, 0xFF	; 255
    40d2:	bc 01       	movw	r22, r24
    40d4:	cd 01       	movw	r24, r26
    40d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40da:	dc 01       	movw	r26, r24
    40dc:	cb 01       	movw	r24, r22
    40de:	f8 01       	movw	r30, r16
    40e0:	91 83       	std	Z+1, r25	; 0x01
    40e2:	80 83       	st	Z, r24
    40e4:	1f c0       	rjmp	.+62     	; 0x4124 <main+0x1fda>
    40e6:	fe 01       	movw	r30, r28
    40e8:	ef 57       	subi	r30, 0x7F	; 127
    40ea:	ff 4f       	sbci	r31, 0xFF	; 255
    40ec:	88 ec       	ldi	r24, 0xC8	; 200
    40ee:	90 e0       	ldi	r25, 0x00	; 0
    40f0:	91 83       	std	Z+1, r25	; 0x01
    40f2:	80 83       	st	Z, r24
    40f4:	fe 01       	movw	r30, r28
    40f6:	ef 57       	subi	r30, 0x7F	; 127
    40f8:	ff 4f       	sbci	r31, 0xFF	; 255
    40fa:	80 81       	ld	r24, Z
    40fc:	91 81       	ldd	r25, Z+1	; 0x01
    40fe:	01 97       	sbiw	r24, 0x01	; 1
    4100:	f1 f7       	brne	.-4      	; 0x40fe <main+0x1fb4>
    4102:	fe 01       	movw	r30, r28
    4104:	ef 57       	subi	r30, 0x7F	; 127
    4106:	ff 4f       	sbci	r31, 0xFF	; 255
    4108:	91 83       	std	Z+1, r25	; 0x01
    410a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    410c:	de 01       	movw	r26, r28
    410e:	ad 57       	subi	r26, 0x7D	; 125
    4110:	bf 4f       	sbci	r27, 0xFF	; 255
    4112:	fe 01       	movw	r30, r28
    4114:	ed 57       	subi	r30, 0x7D	; 125
    4116:	ff 4f       	sbci	r31, 0xFF	; 255
    4118:	80 81       	ld	r24, Z
    411a:	91 81       	ldd	r25, Z+1	; 0x01
    411c:	01 97       	sbiw	r24, 0x01	; 1
    411e:	11 96       	adiw	r26, 0x01	; 1
    4120:	9c 93       	st	X, r25
    4122:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4124:	fe 01       	movw	r30, r28
    4126:	ed 57       	subi	r30, 0x7D	; 125
    4128:	ff 4f       	sbci	r31, 0xFF	; 255
    412a:	80 81       	ld	r24, Z
    412c:	91 81       	ldd	r25, Z+1	; 0x01
    412e:	00 97       	sbiw	r24, 0x00	; 0
    4130:	d1 f6       	brne	.-76     	; 0x40e6 <main+0x1f9c>
    4132:	24 c9       	rjmp	.-3512   	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4134:	8e 01       	movw	r16, r28
    4136:	0d 57       	subi	r16, 0x7D	; 125
    4138:	1f 4f       	sbci	r17, 0xFF	; 255
    413a:	fe 01       	movw	r30, r28
    413c:	eb 57       	subi	r30, 0x7B	; 123
    413e:	ff 4f       	sbci	r31, 0xFF	; 255
    4140:	60 81       	ld	r22, Z
    4142:	71 81       	ldd	r23, Z+1	; 0x01
    4144:	82 81       	ldd	r24, Z+2	; 0x02
    4146:	93 81       	ldd	r25, Z+3	; 0x03
    4148:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    414c:	dc 01       	movw	r26, r24
    414e:	cb 01       	movw	r24, r22
    4150:	f8 01       	movw	r30, r16
    4152:	91 83       	std	Z+1, r25	; 0x01
    4154:	80 83       	st	Z, r24
    4156:	de 01       	movw	r26, r28
    4158:	a1 58       	subi	r26, 0x81	; 129
    415a:	bf 4f       	sbci	r27, 0xFF	; 255
    415c:	fe 01       	movw	r30, r28
    415e:	ed 57       	subi	r30, 0x7D	; 125
    4160:	ff 4f       	sbci	r31, 0xFF	; 255
    4162:	80 81       	ld	r24, Z
    4164:	91 81       	ldd	r25, Z+1	; 0x01
    4166:	11 96       	adiw	r26, 0x01	; 1
    4168:	9c 93       	st	X, r25
    416a:	8e 93       	st	-X, r24
    416c:	fe 01       	movw	r30, r28
    416e:	e1 58       	subi	r30, 0x81	; 129
    4170:	ff 4f       	sbci	r31, 0xFF	; 255
    4172:	80 81       	ld	r24, Z
    4174:	91 81       	ldd	r25, Z+1	; 0x01
    4176:	01 97       	sbiw	r24, 0x01	; 1
    4178:	f1 f7       	brne	.-4      	; 0x4176 <main+0x202c>
    417a:	fe 01       	movw	r30, r28
    417c:	e1 58       	subi	r30, 0x81	; 129
    417e:	ff 4f       	sbci	r31, 0xFF	; 255
    4180:	91 83       	std	Z+1, r25	; 0x01
    4182:	80 83       	st	Z, r24
    4184:	fb c8       	rjmp	.-3594   	; 0x337c <main+0x1232>
			}
			else{}

			_delay_ms(CASE_DELAY);
		}
		else if (KeyPressed == '3')
    4186:	fe 01       	movw	r30, r28
    4188:	ee 50       	subi	r30, 0x0E	; 14
    418a:	ff 4f       	sbci	r31, 0xFF	; 255
    418c:	80 81       	ld	r24, Z
    418e:	83 33       	cpi	r24, 0x33	; 51
    4190:	09 f0       	breq	.+2      	; 0x4194 <main+0x204a>
    4192:	f4 c0       	rjmp	.+488    	; 0x437c <main+0x2232>
		{//OPEN THE DOOR
			DIO_SetPinValue(PORTB,PIN6,LOW);
    4194:	81 e0       	ldi	r24, 0x01	; 1
    4196:	66 e0       	ldi	r22, 0x06	; 6
    4198:	40 e0       	ldi	r20, 0x00	; 0
    419a:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    419e:	fe 01       	movw	r30, r28
    41a0:	ee 50       	subi	r30, 0x0E	; 14
    41a2:	ff 4f       	sbci	r31, 0xFF	; 255
    41a4:	80 e4       	ldi	r24, 0x40	; 64
    41a6:	80 83       	st	Z, r24
			ReceivedChar = 0 ;
    41a8:	fe 01       	movw	r30, r28
    41aa:	ed 50       	subi	r30, 0x0D	; 13
    41ac:	ff 4f       	sbci	r31, 0xFF	; 255
    41ae:	10 82       	st	Z, r1
			LCD_WriteCmd(DISPLAY_CLEAR);
    41b0:	81 e0       	ldi	r24, 0x01	; 1
    41b2:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    41b6:	80 e0       	ldi	r24, 0x00	; 0
    41b8:	60 e0       	ldi	r22, 0x00	; 0
    41ba:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>

			//Send USING UART '3' to CLOSE THE DOOR  & ENABLE MANUAL CONTROL
			UART_SEND_CHAR_POLLING('3');
    41be:	83 e3       	ldi	r24, 0x33	; 51
    41c0:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
			//Receive DOOR STATE
			UART_RECEIVE_CHAR_POLLING(& ReceivedChar);
    41c4:	ce 01       	movw	r24, r28
    41c6:	8d 50       	subi	r24, 0x0D	; 13
    41c8:	9f 4f       	sbci	r25, 0xFF	; 255
    41ca:	0e 94 8e 10 	call	0x211c	; 0x211c <UART_RECEIVE_CHAR_POLLING>
			if (ReceivedChar == '1')
    41ce:	fe 01       	movw	r30, r28
    41d0:	ed 50       	subi	r30, 0x0D	; 13
    41d2:	ff 4f       	sbci	r31, 0xFF	; 255
    41d4:	80 81       	ld	r24, Z
    41d6:	81 33       	cpi	r24, 0x31	; 49
    41d8:	31 f4       	brne	.+12     	; 0x41e6 <main+0x209c>
			{
				//PRINT DOOR IS CLOSING
				LCD_WriteString(OPENED_DONE_DOOR_MSG);
    41da:	ce 01       	movw	r24, r28
    41dc:	83 59       	subi	r24, 0x93	; 147
    41de:	9e 4f       	sbci	r25, 0xFE	; 254
    41e0:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    41e4:	14 c0       	rjmp	.+40     	; 0x420e <main+0x20c4>
			}
			else if (ReceivedChar == '0')
    41e6:	fe 01       	movw	r30, r28
    41e8:	ed 50       	subi	r30, 0x0D	; 13
    41ea:	ff 4f       	sbci	r31, 0xFF	; 255
    41ec:	80 81       	ld	r24, Z
    41ee:	80 33       	cpi	r24, 0x30	; 48
    41f0:	71 f4       	brne	.+28     	; 0x420e <main+0x20c4>
			{
				//PRINT DOOR IS CLOSED Already
				LCD_WriteString(OPENED_NOT_DONE_DOOR_MSG);
    41f2:	ce 01       	movw	r24, r28
    41f4:	82 58       	subi	r24, 0x82	; 130
    41f6:	9e 4f       	sbci	r25, 0xFE	; 254
    41f8:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
				LCD_GoToXY(0,1);
    41fc:	80 e0       	ldi	r24, 0x00	; 0
    41fe:	61 e0       	ldi	r22, 0x01	; 1
    4200:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
				LCD_WriteString(ALREADY_MSG);
    4204:	ce 01       	movw	r24, r28
    4206:	81 54       	subi	r24, 0x41	; 65
    4208:	9e 4f       	sbci	r25, 0xFE	; 254
    420a:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    420e:	fe 01       	movw	r30, r28
    4210:	e5 58       	subi	r30, 0x85	; 133
    4212:	ff 4f       	sbci	r31, 0xFF	; 255
    4214:	80 e0       	ldi	r24, 0x00	; 0
    4216:	90 e0       	ldi	r25, 0x00	; 0
    4218:	aa ef       	ldi	r26, 0xFA	; 250
    421a:	b4 e4       	ldi	r27, 0x44	; 68
    421c:	80 83       	st	Z, r24
    421e:	91 83       	std	Z+1, r25	; 0x01
    4220:	a2 83       	std	Z+2, r26	; 0x02
    4222:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4224:	8e 01       	movw	r16, r28
    4226:	09 58       	subi	r16, 0x89	; 137
    4228:	1f 4f       	sbci	r17, 0xFF	; 255
    422a:	fe 01       	movw	r30, r28
    422c:	e5 58       	subi	r30, 0x85	; 133
    422e:	ff 4f       	sbci	r31, 0xFF	; 255
    4230:	60 81       	ld	r22, Z
    4232:	71 81       	ldd	r23, Z+1	; 0x01
    4234:	82 81       	ldd	r24, Z+2	; 0x02
    4236:	93 81       	ldd	r25, Z+3	; 0x03
    4238:	20 e0       	ldi	r18, 0x00	; 0
    423a:	30 e0       	ldi	r19, 0x00	; 0
    423c:	4a ef       	ldi	r20, 0xFA	; 250
    423e:	54 e4       	ldi	r21, 0x44	; 68
    4240:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4244:	dc 01       	movw	r26, r24
    4246:	cb 01       	movw	r24, r22
    4248:	f8 01       	movw	r30, r16
    424a:	80 83       	st	Z, r24
    424c:	91 83       	std	Z+1, r25	; 0x01
    424e:	a2 83       	std	Z+2, r26	; 0x02
    4250:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4252:	fe 01       	movw	r30, r28
    4254:	e9 58       	subi	r30, 0x89	; 137
    4256:	ff 4f       	sbci	r31, 0xFF	; 255
    4258:	60 81       	ld	r22, Z
    425a:	71 81       	ldd	r23, Z+1	; 0x01
    425c:	82 81       	ldd	r24, Z+2	; 0x02
    425e:	93 81       	ldd	r25, Z+3	; 0x03
    4260:	20 e0       	ldi	r18, 0x00	; 0
    4262:	30 e0       	ldi	r19, 0x00	; 0
    4264:	40 e8       	ldi	r20, 0x80	; 128
    4266:	5f e3       	ldi	r21, 0x3F	; 63
    4268:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    426c:	88 23       	and	r24, r24
    426e:	44 f4       	brge	.+16     	; 0x4280 <main+0x2136>
		__ticks = 1;
    4270:	fe 01       	movw	r30, r28
    4272:	eb 58       	subi	r30, 0x8B	; 139
    4274:	ff 4f       	sbci	r31, 0xFF	; 255
    4276:	81 e0       	ldi	r24, 0x01	; 1
    4278:	90 e0       	ldi	r25, 0x00	; 0
    427a:	91 83       	std	Z+1, r25	; 0x01
    427c:	80 83       	st	Z, r24
    427e:	65 c0       	rjmp	.+202    	; 0x434a <main+0x2200>
	else if (__tmp > 65535)
    4280:	fe 01       	movw	r30, r28
    4282:	e9 58       	subi	r30, 0x89	; 137
    4284:	ff 4f       	sbci	r31, 0xFF	; 255
    4286:	60 81       	ld	r22, Z
    4288:	71 81       	ldd	r23, Z+1	; 0x01
    428a:	82 81       	ldd	r24, Z+2	; 0x02
    428c:	93 81       	ldd	r25, Z+3	; 0x03
    428e:	20 e0       	ldi	r18, 0x00	; 0
    4290:	3f ef       	ldi	r19, 0xFF	; 255
    4292:	4f e7       	ldi	r20, 0x7F	; 127
    4294:	57 e4       	ldi	r21, 0x47	; 71
    4296:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    429a:	18 16       	cp	r1, r24
    429c:	0c f0       	brlt	.+2      	; 0x42a0 <main+0x2156>
    429e:	44 c0       	rjmp	.+136    	; 0x4328 <main+0x21de>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    42a0:	fe 01       	movw	r30, r28
    42a2:	e5 58       	subi	r30, 0x85	; 133
    42a4:	ff 4f       	sbci	r31, 0xFF	; 255
    42a6:	60 81       	ld	r22, Z
    42a8:	71 81       	ldd	r23, Z+1	; 0x01
    42aa:	82 81       	ldd	r24, Z+2	; 0x02
    42ac:	93 81       	ldd	r25, Z+3	; 0x03
    42ae:	20 e0       	ldi	r18, 0x00	; 0
    42b0:	30 e0       	ldi	r19, 0x00	; 0
    42b2:	40 e2       	ldi	r20, 0x20	; 32
    42b4:	51 e4       	ldi	r21, 0x41	; 65
    42b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    42ba:	dc 01       	movw	r26, r24
    42bc:	cb 01       	movw	r24, r22
    42be:	8e 01       	movw	r16, r28
    42c0:	0b 58       	subi	r16, 0x8B	; 139
    42c2:	1f 4f       	sbci	r17, 0xFF	; 255
    42c4:	bc 01       	movw	r22, r24
    42c6:	cd 01       	movw	r24, r26
    42c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42cc:	dc 01       	movw	r26, r24
    42ce:	cb 01       	movw	r24, r22
    42d0:	f8 01       	movw	r30, r16
    42d2:	91 83       	std	Z+1, r25	; 0x01
    42d4:	80 83       	st	Z, r24
    42d6:	1f c0       	rjmp	.+62     	; 0x4316 <main+0x21cc>
    42d8:	fe 01       	movw	r30, r28
    42da:	ed 58       	subi	r30, 0x8D	; 141
    42dc:	ff 4f       	sbci	r31, 0xFF	; 255
    42de:	88 ec       	ldi	r24, 0xC8	; 200
    42e0:	90 e0       	ldi	r25, 0x00	; 0
    42e2:	91 83       	std	Z+1, r25	; 0x01
    42e4:	80 83       	st	Z, r24
    42e6:	fe 01       	movw	r30, r28
    42e8:	ed 58       	subi	r30, 0x8D	; 141
    42ea:	ff 4f       	sbci	r31, 0xFF	; 255
    42ec:	80 81       	ld	r24, Z
    42ee:	91 81       	ldd	r25, Z+1	; 0x01
    42f0:	01 97       	sbiw	r24, 0x01	; 1
    42f2:	f1 f7       	brne	.-4      	; 0x42f0 <main+0x21a6>
    42f4:	fe 01       	movw	r30, r28
    42f6:	ed 58       	subi	r30, 0x8D	; 141
    42f8:	ff 4f       	sbci	r31, 0xFF	; 255
    42fa:	91 83       	std	Z+1, r25	; 0x01
    42fc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42fe:	de 01       	movw	r26, r28
    4300:	ab 58       	subi	r26, 0x8B	; 139
    4302:	bf 4f       	sbci	r27, 0xFF	; 255
    4304:	fe 01       	movw	r30, r28
    4306:	eb 58       	subi	r30, 0x8B	; 139
    4308:	ff 4f       	sbci	r31, 0xFF	; 255
    430a:	80 81       	ld	r24, Z
    430c:	91 81       	ldd	r25, Z+1	; 0x01
    430e:	01 97       	sbiw	r24, 0x01	; 1
    4310:	11 96       	adiw	r26, 0x01	; 1
    4312:	9c 93       	st	X, r25
    4314:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4316:	fe 01       	movw	r30, r28
    4318:	eb 58       	subi	r30, 0x8B	; 139
    431a:	ff 4f       	sbci	r31, 0xFF	; 255
    431c:	80 81       	ld	r24, Z
    431e:	91 81       	ldd	r25, Z+1	; 0x01
    4320:	00 97       	sbiw	r24, 0x00	; 0
    4322:	d1 f6       	brne	.-76     	; 0x42d8 <main+0x218e>
    4324:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4328:	8e 01       	movw	r16, r28
    432a:	0b 58       	subi	r16, 0x8B	; 139
    432c:	1f 4f       	sbci	r17, 0xFF	; 255
    432e:	fe 01       	movw	r30, r28
    4330:	e9 58       	subi	r30, 0x89	; 137
    4332:	ff 4f       	sbci	r31, 0xFF	; 255
    4334:	60 81       	ld	r22, Z
    4336:	71 81       	ldd	r23, Z+1	; 0x01
    4338:	82 81       	ldd	r24, Z+2	; 0x02
    433a:	93 81       	ldd	r25, Z+3	; 0x03
    433c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4340:	dc 01       	movw	r26, r24
    4342:	cb 01       	movw	r24, r22
    4344:	f8 01       	movw	r30, r16
    4346:	91 83       	std	Z+1, r25	; 0x01
    4348:	80 83       	st	Z, r24
    434a:	de 01       	movw	r26, r28
    434c:	af 58       	subi	r26, 0x8F	; 143
    434e:	bf 4f       	sbci	r27, 0xFF	; 255
    4350:	fe 01       	movw	r30, r28
    4352:	eb 58       	subi	r30, 0x8B	; 139
    4354:	ff 4f       	sbci	r31, 0xFF	; 255
    4356:	80 81       	ld	r24, Z
    4358:	91 81       	ldd	r25, Z+1	; 0x01
    435a:	11 96       	adiw	r26, 0x01	; 1
    435c:	9c 93       	st	X, r25
    435e:	8e 93       	st	-X, r24
    4360:	fe 01       	movw	r30, r28
    4362:	ef 58       	subi	r30, 0x8F	; 143
    4364:	ff 4f       	sbci	r31, 0xFF	; 255
    4366:	80 81       	ld	r24, Z
    4368:	91 81       	ldd	r25, Z+1	; 0x01
    436a:	01 97       	sbiw	r24, 0x01	; 1
    436c:	f1 f7       	brne	.-4      	; 0x436a <main+0x2220>
    436e:	fe 01       	movw	r30, r28
    4370:	ef 58       	subi	r30, 0x8F	; 143
    4372:	ff 4f       	sbci	r31, 0xFF	; 255
    4374:	91 83       	std	Z+1, r25	; 0x01
    4376:	80 83       	st	Z, r24
    4378:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			}
			else{}
			_delay_ms(CASE_DELAY);
		}
		else if(KeyPressed == '4')
    437c:	fe 01       	movw	r30, r28
    437e:	ee 50       	subi	r30, 0x0E	; 14
    4380:	ff 4f       	sbci	r31, 0xFF	; 255
    4382:	80 81       	ld	r24, Z
    4384:	84 33       	cpi	r24, 0x34	; 52
    4386:	09 f0       	breq	.+2      	; 0x438a <main+0x2240>
    4388:	c3 c0       	rjmp	.+390    	; 0x4510 <main+0x23c6>
		{//SHOW CURRENT TEMPERATURE READING
			DIO_SetPinValue(PORTB,PIN6,LOW);
    438a:	81 e0       	ldi	r24, 0x01	; 1
    438c:	66 e0       	ldi	r22, 0x06	; 6
    438e:	40 e0       	ldi	r20, 0x00	; 0
    4390:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    4394:	fe 01       	movw	r30, r28
    4396:	ee 50       	subi	r30, 0x0E	; 14
    4398:	ff 4f       	sbci	r31, 0xFF	; 255
    439a:	80 e4       	ldi	r24, 0x40	; 64
    439c:	80 83       	st	Z, r24

			READ_DISPLAY_TEMP();
    439e:	0e 94 c0 28 	call	0x5180	; 0x5180 <READ_DISPLAY_TEMP>
    43a2:	fe 01       	movw	r30, r28
    43a4:	e3 59       	subi	r30, 0x93	; 147
    43a6:	ff 4f       	sbci	r31, 0xFF	; 255
    43a8:	80 e0       	ldi	r24, 0x00	; 0
    43aa:	90 e0       	ldi	r25, 0x00	; 0
    43ac:	aa ef       	ldi	r26, 0xFA	; 250
    43ae:	b4 e4       	ldi	r27, 0x44	; 68
    43b0:	80 83       	st	Z, r24
    43b2:	91 83       	std	Z+1, r25	; 0x01
    43b4:	a2 83       	std	Z+2, r26	; 0x02
    43b6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    43b8:	8e 01       	movw	r16, r28
    43ba:	07 59       	subi	r16, 0x97	; 151
    43bc:	1f 4f       	sbci	r17, 0xFF	; 255
    43be:	fe 01       	movw	r30, r28
    43c0:	e3 59       	subi	r30, 0x93	; 147
    43c2:	ff 4f       	sbci	r31, 0xFF	; 255
    43c4:	60 81       	ld	r22, Z
    43c6:	71 81       	ldd	r23, Z+1	; 0x01
    43c8:	82 81       	ldd	r24, Z+2	; 0x02
    43ca:	93 81       	ldd	r25, Z+3	; 0x03
    43cc:	20 e0       	ldi	r18, 0x00	; 0
    43ce:	30 e0       	ldi	r19, 0x00	; 0
    43d0:	4a ef       	ldi	r20, 0xFA	; 250
    43d2:	54 e4       	ldi	r21, 0x44	; 68
    43d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    43d8:	dc 01       	movw	r26, r24
    43da:	cb 01       	movw	r24, r22
    43dc:	f8 01       	movw	r30, r16
    43de:	80 83       	st	Z, r24
    43e0:	91 83       	std	Z+1, r25	; 0x01
    43e2:	a2 83       	std	Z+2, r26	; 0x02
    43e4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    43e6:	fe 01       	movw	r30, r28
    43e8:	e7 59       	subi	r30, 0x97	; 151
    43ea:	ff 4f       	sbci	r31, 0xFF	; 255
    43ec:	60 81       	ld	r22, Z
    43ee:	71 81       	ldd	r23, Z+1	; 0x01
    43f0:	82 81       	ldd	r24, Z+2	; 0x02
    43f2:	93 81       	ldd	r25, Z+3	; 0x03
    43f4:	20 e0       	ldi	r18, 0x00	; 0
    43f6:	30 e0       	ldi	r19, 0x00	; 0
    43f8:	40 e8       	ldi	r20, 0x80	; 128
    43fa:	5f e3       	ldi	r21, 0x3F	; 63
    43fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4400:	88 23       	and	r24, r24
    4402:	44 f4       	brge	.+16     	; 0x4414 <main+0x22ca>
		__ticks = 1;
    4404:	fe 01       	movw	r30, r28
    4406:	e9 59       	subi	r30, 0x99	; 153
    4408:	ff 4f       	sbci	r31, 0xFF	; 255
    440a:	81 e0       	ldi	r24, 0x01	; 1
    440c:	90 e0       	ldi	r25, 0x00	; 0
    440e:	91 83       	std	Z+1, r25	; 0x01
    4410:	80 83       	st	Z, r24
    4412:	65 c0       	rjmp	.+202    	; 0x44de <main+0x2394>
	else if (__tmp > 65535)
    4414:	fe 01       	movw	r30, r28
    4416:	e7 59       	subi	r30, 0x97	; 151
    4418:	ff 4f       	sbci	r31, 0xFF	; 255
    441a:	60 81       	ld	r22, Z
    441c:	71 81       	ldd	r23, Z+1	; 0x01
    441e:	82 81       	ldd	r24, Z+2	; 0x02
    4420:	93 81       	ldd	r25, Z+3	; 0x03
    4422:	20 e0       	ldi	r18, 0x00	; 0
    4424:	3f ef       	ldi	r19, 0xFF	; 255
    4426:	4f e7       	ldi	r20, 0x7F	; 127
    4428:	57 e4       	ldi	r21, 0x47	; 71
    442a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    442e:	18 16       	cp	r1, r24
    4430:	0c f0       	brlt	.+2      	; 0x4434 <main+0x22ea>
    4432:	44 c0       	rjmp	.+136    	; 0x44bc <main+0x2372>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4434:	fe 01       	movw	r30, r28
    4436:	e3 59       	subi	r30, 0x93	; 147
    4438:	ff 4f       	sbci	r31, 0xFF	; 255
    443a:	60 81       	ld	r22, Z
    443c:	71 81       	ldd	r23, Z+1	; 0x01
    443e:	82 81       	ldd	r24, Z+2	; 0x02
    4440:	93 81       	ldd	r25, Z+3	; 0x03
    4442:	20 e0       	ldi	r18, 0x00	; 0
    4444:	30 e0       	ldi	r19, 0x00	; 0
    4446:	40 e2       	ldi	r20, 0x20	; 32
    4448:	51 e4       	ldi	r21, 0x41	; 65
    444a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    444e:	dc 01       	movw	r26, r24
    4450:	cb 01       	movw	r24, r22
    4452:	8e 01       	movw	r16, r28
    4454:	09 59       	subi	r16, 0x99	; 153
    4456:	1f 4f       	sbci	r17, 0xFF	; 255
    4458:	bc 01       	movw	r22, r24
    445a:	cd 01       	movw	r24, r26
    445c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4460:	dc 01       	movw	r26, r24
    4462:	cb 01       	movw	r24, r22
    4464:	f8 01       	movw	r30, r16
    4466:	91 83       	std	Z+1, r25	; 0x01
    4468:	80 83       	st	Z, r24
    446a:	1f c0       	rjmp	.+62     	; 0x44aa <main+0x2360>
    446c:	fe 01       	movw	r30, r28
    446e:	eb 59       	subi	r30, 0x9B	; 155
    4470:	ff 4f       	sbci	r31, 0xFF	; 255
    4472:	88 ec       	ldi	r24, 0xC8	; 200
    4474:	90 e0       	ldi	r25, 0x00	; 0
    4476:	91 83       	std	Z+1, r25	; 0x01
    4478:	80 83       	st	Z, r24
    447a:	fe 01       	movw	r30, r28
    447c:	eb 59       	subi	r30, 0x9B	; 155
    447e:	ff 4f       	sbci	r31, 0xFF	; 255
    4480:	80 81       	ld	r24, Z
    4482:	91 81       	ldd	r25, Z+1	; 0x01
    4484:	01 97       	sbiw	r24, 0x01	; 1
    4486:	f1 f7       	brne	.-4      	; 0x4484 <main+0x233a>
    4488:	fe 01       	movw	r30, r28
    448a:	eb 59       	subi	r30, 0x9B	; 155
    448c:	ff 4f       	sbci	r31, 0xFF	; 255
    448e:	91 83       	std	Z+1, r25	; 0x01
    4490:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4492:	de 01       	movw	r26, r28
    4494:	a9 59       	subi	r26, 0x99	; 153
    4496:	bf 4f       	sbci	r27, 0xFF	; 255
    4498:	fe 01       	movw	r30, r28
    449a:	e9 59       	subi	r30, 0x99	; 153
    449c:	ff 4f       	sbci	r31, 0xFF	; 255
    449e:	80 81       	ld	r24, Z
    44a0:	91 81       	ldd	r25, Z+1	; 0x01
    44a2:	01 97       	sbiw	r24, 0x01	; 1
    44a4:	11 96       	adiw	r26, 0x01	; 1
    44a6:	9c 93       	st	X, r25
    44a8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    44aa:	fe 01       	movw	r30, r28
    44ac:	e9 59       	subi	r30, 0x99	; 153
    44ae:	ff 4f       	sbci	r31, 0xFF	; 255
    44b0:	80 81       	ld	r24, Z
    44b2:	91 81       	ldd	r25, Z+1	; 0x01
    44b4:	00 97       	sbiw	r24, 0x00	; 0
    44b6:	d1 f6       	brne	.-76     	; 0x446c <main+0x2322>
    44b8:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    44bc:	8e 01       	movw	r16, r28
    44be:	09 59       	subi	r16, 0x99	; 153
    44c0:	1f 4f       	sbci	r17, 0xFF	; 255
    44c2:	fe 01       	movw	r30, r28
    44c4:	e7 59       	subi	r30, 0x97	; 151
    44c6:	ff 4f       	sbci	r31, 0xFF	; 255
    44c8:	60 81       	ld	r22, Z
    44ca:	71 81       	ldd	r23, Z+1	; 0x01
    44cc:	82 81       	ldd	r24, Z+2	; 0x02
    44ce:	93 81       	ldd	r25, Z+3	; 0x03
    44d0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    44d4:	dc 01       	movw	r26, r24
    44d6:	cb 01       	movw	r24, r22
    44d8:	f8 01       	movw	r30, r16
    44da:	91 83       	std	Z+1, r25	; 0x01
    44dc:	80 83       	st	Z, r24
    44de:	de 01       	movw	r26, r28
    44e0:	ad 59       	subi	r26, 0x9D	; 157
    44e2:	bf 4f       	sbci	r27, 0xFF	; 255
    44e4:	fe 01       	movw	r30, r28
    44e6:	e9 59       	subi	r30, 0x99	; 153
    44e8:	ff 4f       	sbci	r31, 0xFF	; 255
    44ea:	80 81       	ld	r24, Z
    44ec:	91 81       	ldd	r25, Z+1	; 0x01
    44ee:	11 96       	adiw	r26, 0x01	; 1
    44f0:	9c 93       	st	X, r25
    44f2:	8e 93       	st	-X, r24
    44f4:	fe 01       	movw	r30, r28
    44f6:	ed 59       	subi	r30, 0x9D	; 157
    44f8:	ff 4f       	sbci	r31, 0xFF	; 255
    44fa:	80 81       	ld	r24, Z
    44fc:	91 81       	ldd	r25, Z+1	; 0x01
    44fe:	01 97       	sbiw	r24, 0x01	; 1
    4500:	f1 f7       	brne	.-4      	; 0x44fe <main+0x23b4>
    4502:	fe 01       	movw	r30, r28
    4504:	ed 59       	subi	r30, 0x9D	; 157
    4506:	ff 4f       	sbci	r31, 0xFF	; 255
    4508:	91 83       	std	Z+1, r25	; 0x01
    450a:	80 83       	st	Z, r24
    450c:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>

			_delay_ms(CASE_DELAY);

		}
		else if(KeyPressed == '5')
    4510:	fe 01       	movw	r30, r28
    4512:	ee 50       	subi	r30, 0x0E	; 14
    4514:	ff 4f       	sbci	r31, 0xFF	; 255
    4516:	80 81       	ld	r24, Z
    4518:	85 33       	cpi	r24, 0x35	; 53
    451a:	09 f0       	breq	.+2      	; 0x451e <main+0x23d4>
    451c:	d0 c0       	rjmp	.+416    	; 0x46be <main+0x2574>
		{//TOGGLE CURRENT LED STATE
			DIO_SetPinValue(PORTB,PIN6,LOW);
    451e:	81 e0       	ldi	r24, 0x01	; 1
    4520:	66 e0       	ldi	r22, 0x06	; 6
    4522:	40 e0       	ldi	r20, 0x00	; 0
    4524:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    4528:	fe 01       	movw	r30, r28
    452a:	ee 50       	subi	r30, 0x0E	; 14
    452c:	ff 4f       	sbci	r31, 0xFF	; 255
    452e:	80 e4       	ldi	r24, 0x40	; 64
    4530:	80 83       	st	Z, r24
			LCD_WriteCmd(DISPLAY_CLEAR);
    4532:	81 e0       	ldi	r24, 0x01	; 1
    4534:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    4538:	80 e0       	ldi	r24, 0x00	; 0
    453a:	60 e0       	ldi	r22, 0x00	; 0
    453c:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			//SENDING 5 to TO turn Auto CONTROL Off then Toggle LEDs & ENABLE MANUAL CONTROL
			UART_SEND_CHAR_POLLING('5');
    4540:	85 e3       	ldi	r24, 0x35	; 53
    4542:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
			LCD_WriteString(TOGGLING_LEDS_MSG);
    4546:	ce 01       	movw	r24, r28
    4548:	82 5f       	subi	r24, 0xF2	; 242
    454a:	9d 4f       	sbci	r25, 0xFD	; 253
    454c:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    4550:	fe 01       	movw	r30, r28
    4552:	e1 5a       	subi	r30, 0xA1	; 161
    4554:	ff 4f       	sbci	r31, 0xFF	; 255
    4556:	80 e0       	ldi	r24, 0x00	; 0
    4558:	90 e0       	ldi	r25, 0x00	; 0
    455a:	aa ef       	ldi	r26, 0xFA	; 250
    455c:	b4 e4       	ldi	r27, 0x44	; 68
    455e:	80 83       	st	Z, r24
    4560:	91 83       	std	Z+1, r25	; 0x01
    4562:	a2 83       	std	Z+2, r26	; 0x02
    4564:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4566:	8e 01       	movw	r16, r28
    4568:	05 5a       	subi	r16, 0xA5	; 165
    456a:	1f 4f       	sbci	r17, 0xFF	; 255
    456c:	fe 01       	movw	r30, r28
    456e:	e1 5a       	subi	r30, 0xA1	; 161
    4570:	ff 4f       	sbci	r31, 0xFF	; 255
    4572:	60 81       	ld	r22, Z
    4574:	71 81       	ldd	r23, Z+1	; 0x01
    4576:	82 81       	ldd	r24, Z+2	; 0x02
    4578:	93 81       	ldd	r25, Z+3	; 0x03
    457a:	20 e0       	ldi	r18, 0x00	; 0
    457c:	30 e0       	ldi	r19, 0x00	; 0
    457e:	4a ef       	ldi	r20, 0xFA	; 250
    4580:	54 e4       	ldi	r21, 0x44	; 68
    4582:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4586:	dc 01       	movw	r26, r24
    4588:	cb 01       	movw	r24, r22
    458a:	f8 01       	movw	r30, r16
    458c:	80 83       	st	Z, r24
    458e:	91 83       	std	Z+1, r25	; 0x01
    4590:	a2 83       	std	Z+2, r26	; 0x02
    4592:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4594:	fe 01       	movw	r30, r28
    4596:	e5 5a       	subi	r30, 0xA5	; 165
    4598:	ff 4f       	sbci	r31, 0xFF	; 255
    459a:	60 81       	ld	r22, Z
    459c:	71 81       	ldd	r23, Z+1	; 0x01
    459e:	82 81       	ldd	r24, Z+2	; 0x02
    45a0:	93 81       	ldd	r25, Z+3	; 0x03
    45a2:	20 e0       	ldi	r18, 0x00	; 0
    45a4:	30 e0       	ldi	r19, 0x00	; 0
    45a6:	40 e8       	ldi	r20, 0x80	; 128
    45a8:	5f e3       	ldi	r21, 0x3F	; 63
    45aa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    45ae:	88 23       	and	r24, r24
    45b0:	44 f4       	brge	.+16     	; 0x45c2 <main+0x2478>
		__ticks = 1;
    45b2:	fe 01       	movw	r30, r28
    45b4:	e7 5a       	subi	r30, 0xA7	; 167
    45b6:	ff 4f       	sbci	r31, 0xFF	; 255
    45b8:	81 e0       	ldi	r24, 0x01	; 1
    45ba:	90 e0       	ldi	r25, 0x00	; 0
    45bc:	91 83       	std	Z+1, r25	; 0x01
    45be:	80 83       	st	Z, r24
    45c0:	65 c0       	rjmp	.+202    	; 0x468c <main+0x2542>
	else if (__tmp > 65535)
    45c2:	fe 01       	movw	r30, r28
    45c4:	e5 5a       	subi	r30, 0xA5	; 165
    45c6:	ff 4f       	sbci	r31, 0xFF	; 255
    45c8:	60 81       	ld	r22, Z
    45ca:	71 81       	ldd	r23, Z+1	; 0x01
    45cc:	82 81       	ldd	r24, Z+2	; 0x02
    45ce:	93 81       	ldd	r25, Z+3	; 0x03
    45d0:	20 e0       	ldi	r18, 0x00	; 0
    45d2:	3f ef       	ldi	r19, 0xFF	; 255
    45d4:	4f e7       	ldi	r20, 0x7F	; 127
    45d6:	57 e4       	ldi	r21, 0x47	; 71
    45d8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    45dc:	18 16       	cp	r1, r24
    45de:	0c f0       	brlt	.+2      	; 0x45e2 <main+0x2498>
    45e0:	44 c0       	rjmp	.+136    	; 0x466a <main+0x2520>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45e2:	fe 01       	movw	r30, r28
    45e4:	e1 5a       	subi	r30, 0xA1	; 161
    45e6:	ff 4f       	sbci	r31, 0xFF	; 255
    45e8:	60 81       	ld	r22, Z
    45ea:	71 81       	ldd	r23, Z+1	; 0x01
    45ec:	82 81       	ldd	r24, Z+2	; 0x02
    45ee:	93 81       	ldd	r25, Z+3	; 0x03
    45f0:	20 e0       	ldi	r18, 0x00	; 0
    45f2:	30 e0       	ldi	r19, 0x00	; 0
    45f4:	40 e2       	ldi	r20, 0x20	; 32
    45f6:	51 e4       	ldi	r21, 0x41	; 65
    45f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45fc:	dc 01       	movw	r26, r24
    45fe:	cb 01       	movw	r24, r22
    4600:	8e 01       	movw	r16, r28
    4602:	07 5a       	subi	r16, 0xA7	; 167
    4604:	1f 4f       	sbci	r17, 0xFF	; 255
    4606:	bc 01       	movw	r22, r24
    4608:	cd 01       	movw	r24, r26
    460a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    460e:	dc 01       	movw	r26, r24
    4610:	cb 01       	movw	r24, r22
    4612:	f8 01       	movw	r30, r16
    4614:	91 83       	std	Z+1, r25	; 0x01
    4616:	80 83       	st	Z, r24
    4618:	1f c0       	rjmp	.+62     	; 0x4658 <main+0x250e>
    461a:	fe 01       	movw	r30, r28
    461c:	e9 5a       	subi	r30, 0xA9	; 169
    461e:	ff 4f       	sbci	r31, 0xFF	; 255
    4620:	88 ec       	ldi	r24, 0xC8	; 200
    4622:	90 e0       	ldi	r25, 0x00	; 0
    4624:	91 83       	std	Z+1, r25	; 0x01
    4626:	80 83       	st	Z, r24
    4628:	fe 01       	movw	r30, r28
    462a:	e9 5a       	subi	r30, 0xA9	; 169
    462c:	ff 4f       	sbci	r31, 0xFF	; 255
    462e:	80 81       	ld	r24, Z
    4630:	91 81       	ldd	r25, Z+1	; 0x01
    4632:	01 97       	sbiw	r24, 0x01	; 1
    4634:	f1 f7       	brne	.-4      	; 0x4632 <main+0x24e8>
    4636:	fe 01       	movw	r30, r28
    4638:	e9 5a       	subi	r30, 0xA9	; 169
    463a:	ff 4f       	sbci	r31, 0xFF	; 255
    463c:	91 83       	std	Z+1, r25	; 0x01
    463e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4640:	de 01       	movw	r26, r28
    4642:	a7 5a       	subi	r26, 0xA7	; 167
    4644:	bf 4f       	sbci	r27, 0xFF	; 255
    4646:	fe 01       	movw	r30, r28
    4648:	e7 5a       	subi	r30, 0xA7	; 167
    464a:	ff 4f       	sbci	r31, 0xFF	; 255
    464c:	80 81       	ld	r24, Z
    464e:	91 81       	ldd	r25, Z+1	; 0x01
    4650:	01 97       	sbiw	r24, 0x01	; 1
    4652:	11 96       	adiw	r26, 0x01	; 1
    4654:	9c 93       	st	X, r25
    4656:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4658:	fe 01       	movw	r30, r28
    465a:	e7 5a       	subi	r30, 0xA7	; 167
    465c:	ff 4f       	sbci	r31, 0xFF	; 255
    465e:	80 81       	ld	r24, Z
    4660:	91 81       	ldd	r25, Z+1	; 0x01
    4662:	00 97       	sbiw	r24, 0x00	; 0
    4664:	d1 f6       	brne	.-76     	; 0x461a <main+0x24d0>
    4666:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    466a:	8e 01       	movw	r16, r28
    466c:	07 5a       	subi	r16, 0xA7	; 167
    466e:	1f 4f       	sbci	r17, 0xFF	; 255
    4670:	fe 01       	movw	r30, r28
    4672:	e5 5a       	subi	r30, 0xA5	; 165
    4674:	ff 4f       	sbci	r31, 0xFF	; 255
    4676:	60 81       	ld	r22, Z
    4678:	71 81       	ldd	r23, Z+1	; 0x01
    467a:	82 81       	ldd	r24, Z+2	; 0x02
    467c:	93 81       	ldd	r25, Z+3	; 0x03
    467e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4682:	dc 01       	movw	r26, r24
    4684:	cb 01       	movw	r24, r22
    4686:	f8 01       	movw	r30, r16
    4688:	91 83       	std	Z+1, r25	; 0x01
    468a:	80 83       	st	Z, r24
    468c:	de 01       	movw	r26, r28
    468e:	ab 5a       	subi	r26, 0xAB	; 171
    4690:	bf 4f       	sbci	r27, 0xFF	; 255
    4692:	fe 01       	movw	r30, r28
    4694:	e7 5a       	subi	r30, 0xA7	; 167
    4696:	ff 4f       	sbci	r31, 0xFF	; 255
    4698:	80 81       	ld	r24, Z
    469a:	91 81       	ldd	r25, Z+1	; 0x01
    469c:	11 96       	adiw	r26, 0x01	; 1
    469e:	9c 93       	st	X, r25
    46a0:	8e 93       	st	-X, r24
    46a2:	fe 01       	movw	r30, r28
    46a4:	eb 5a       	subi	r30, 0xAB	; 171
    46a6:	ff 4f       	sbci	r31, 0xFF	; 255
    46a8:	80 81       	ld	r24, Z
    46aa:	91 81       	ldd	r25, Z+1	; 0x01
    46ac:	01 97       	sbiw	r24, 0x01	; 1
    46ae:	f1 f7       	brne	.-4      	; 0x46ac <main+0x2562>
    46b0:	fe 01       	movw	r30, r28
    46b2:	eb 5a       	subi	r30, 0xAB	; 171
    46b4:	ff 4f       	sbci	r31, 0xFF	; 255
    46b6:	91 83       	std	Z+1, r25	; 0x01
    46b8:	80 83       	st	Z, r24
    46ba:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			_delay_ms(2000);
		}
		else if(KeyPressed == '6')
    46be:	fe 01       	movw	r30, r28
    46c0:	ee 50       	subi	r30, 0x0E	; 14
    46c2:	ff 4f       	sbci	r31, 0xFF	; 255
    46c4:	80 81       	ld	r24, Z
    46c6:	86 33       	cpi	r24, 0x36	; 54
    46c8:	09 f0       	breq	.+2      	; 0x46cc <main+0x2582>
    46ca:	79 c1       	rjmp	.+754    	; 0x49be <main+0x2874>
		{//SHOW LED STATE
			DIO_SetPinValue(PORTB,PIN6,LOW);
    46cc:	81 e0       	ldi	r24, 0x01	; 1
    46ce:	66 e0       	ldi	r22, 0x06	; 6
    46d0:	40 e0       	ldi	r20, 0x00	; 0
    46d2:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    46d6:	fe 01       	movw	r30, r28
    46d8:	ee 50       	subi	r30, 0x0E	; 14
    46da:	ff 4f       	sbci	r31, 0xFF	; 255
    46dc:	80 e4       	ldi	r24, 0x40	; 64
    46de:	80 83       	st	Z, r24
			LCD_WriteCmd(DISPLAY_CLEAR);
    46e0:	81 e0       	ldi	r24, 0x01	; 1
    46e2:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    46e6:	80 e0       	ldi	r24, 0x00	; 0
    46e8:	60 e0       	ldi	r22, 0x00	; 0
    46ea:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>

			LCD_WriteString(LED_STATE_MSG);
    46ee:	ce 01       	movw	r24, r28
    46f0:	8d 50       	subi	r24, 0x0D	; 13
    46f2:	9e 4f       	sbci	r25, 0xFE	; 254
    46f4:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
			LCD_GoToXY(0,1);
    46f8:	80 e0       	ldi	r24, 0x00	; 0
    46fa:	61 e0       	ldi	r22, 0x01	; 1
    46fc:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>

			ReceivedChar = 0 ;
    4700:	fe 01       	movw	r30, r28
    4702:	ed 50       	subi	r30, 0x0D	; 13
    4704:	ff 4f       	sbci	r31, 0xFF	; 255
    4706:	10 82       	st	Z, r1
			//SENDING l to read LED STATE
			UART_SEND_CHAR_POLLING('l');
    4708:	8c e6       	ldi	r24, 0x6C	; 108
    470a:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
			UART_RECEIVE_CHAR_POLLING(& ReceivedChar);
    470e:	ce 01       	movw	r24, r28
    4710:	8d 50       	subi	r24, 0x0D	; 13
    4712:	9f 4f       	sbci	r25, 0xFF	; 255
    4714:	0e 94 8e 10 	call	0x211c	; 0x211c <UART_RECEIVE_CHAR_POLLING>
    4718:	fe 01       	movw	r30, r28
    471a:	ef 5a       	subi	r30, 0xAF	; 175
    471c:	ff 4f       	sbci	r31, 0xFF	; 255
    471e:	80 e0       	ldi	r24, 0x00	; 0
    4720:	90 e0       	ldi	r25, 0x00	; 0
    4722:	a8 e4       	ldi	r26, 0x48	; 72
    4724:	b3 e4       	ldi	r27, 0x43	; 67
    4726:	80 83       	st	Z, r24
    4728:	91 83       	std	Z+1, r25	; 0x01
    472a:	a2 83       	std	Z+2, r26	; 0x02
    472c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    472e:	8e 01       	movw	r16, r28
    4730:	03 5b       	subi	r16, 0xB3	; 179
    4732:	1f 4f       	sbci	r17, 0xFF	; 255
    4734:	fe 01       	movw	r30, r28
    4736:	ef 5a       	subi	r30, 0xAF	; 175
    4738:	ff 4f       	sbci	r31, 0xFF	; 255
    473a:	60 81       	ld	r22, Z
    473c:	71 81       	ldd	r23, Z+1	; 0x01
    473e:	82 81       	ldd	r24, Z+2	; 0x02
    4740:	93 81       	ldd	r25, Z+3	; 0x03
    4742:	20 e0       	ldi	r18, 0x00	; 0
    4744:	30 e0       	ldi	r19, 0x00	; 0
    4746:	4a ef       	ldi	r20, 0xFA	; 250
    4748:	54 e4       	ldi	r21, 0x44	; 68
    474a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    474e:	dc 01       	movw	r26, r24
    4750:	cb 01       	movw	r24, r22
    4752:	f8 01       	movw	r30, r16
    4754:	80 83       	st	Z, r24
    4756:	91 83       	std	Z+1, r25	; 0x01
    4758:	a2 83       	std	Z+2, r26	; 0x02
    475a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    475c:	fe 01       	movw	r30, r28
    475e:	e3 5b       	subi	r30, 0xB3	; 179
    4760:	ff 4f       	sbci	r31, 0xFF	; 255
    4762:	60 81       	ld	r22, Z
    4764:	71 81       	ldd	r23, Z+1	; 0x01
    4766:	82 81       	ldd	r24, Z+2	; 0x02
    4768:	93 81       	ldd	r25, Z+3	; 0x03
    476a:	20 e0       	ldi	r18, 0x00	; 0
    476c:	30 e0       	ldi	r19, 0x00	; 0
    476e:	40 e8       	ldi	r20, 0x80	; 128
    4770:	5f e3       	ldi	r21, 0x3F	; 63
    4772:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4776:	88 23       	and	r24, r24
    4778:	44 f4       	brge	.+16     	; 0x478a <main+0x2640>
		__ticks = 1;
    477a:	fe 01       	movw	r30, r28
    477c:	e5 5b       	subi	r30, 0xB5	; 181
    477e:	ff 4f       	sbci	r31, 0xFF	; 255
    4780:	81 e0       	ldi	r24, 0x01	; 1
    4782:	90 e0       	ldi	r25, 0x00	; 0
    4784:	91 83       	std	Z+1, r25	; 0x01
    4786:	80 83       	st	Z, r24
    4788:	64 c0       	rjmp	.+200    	; 0x4852 <main+0x2708>
	else if (__tmp > 65535)
    478a:	fe 01       	movw	r30, r28
    478c:	e3 5b       	subi	r30, 0xB3	; 179
    478e:	ff 4f       	sbci	r31, 0xFF	; 255
    4790:	60 81       	ld	r22, Z
    4792:	71 81       	ldd	r23, Z+1	; 0x01
    4794:	82 81       	ldd	r24, Z+2	; 0x02
    4796:	93 81       	ldd	r25, Z+3	; 0x03
    4798:	20 e0       	ldi	r18, 0x00	; 0
    479a:	3f ef       	ldi	r19, 0xFF	; 255
    479c:	4f e7       	ldi	r20, 0x7F	; 127
    479e:	57 e4       	ldi	r21, 0x47	; 71
    47a0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    47a4:	18 16       	cp	r1, r24
    47a6:	0c f0       	brlt	.+2      	; 0x47aa <main+0x2660>
    47a8:	43 c0       	rjmp	.+134    	; 0x4830 <main+0x26e6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47aa:	fe 01       	movw	r30, r28
    47ac:	ef 5a       	subi	r30, 0xAF	; 175
    47ae:	ff 4f       	sbci	r31, 0xFF	; 255
    47b0:	60 81       	ld	r22, Z
    47b2:	71 81       	ldd	r23, Z+1	; 0x01
    47b4:	82 81       	ldd	r24, Z+2	; 0x02
    47b6:	93 81       	ldd	r25, Z+3	; 0x03
    47b8:	20 e0       	ldi	r18, 0x00	; 0
    47ba:	30 e0       	ldi	r19, 0x00	; 0
    47bc:	40 e2       	ldi	r20, 0x20	; 32
    47be:	51 e4       	ldi	r21, 0x41	; 65
    47c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47c4:	dc 01       	movw	r26, r24
    47c6:	cb 01       	movw	r24, r22
    47c8:	8e 01       	movw	r16, r28
    47ca:	05 5b       	subi	r16, 0xB5	; 181
    47cc:	1f 4f       	sbci	r17, 0xFF	; 255
    47ce:	bc 01       	movw	r22, r24
    47d0:	cd 01       	movw	r24, r26
    47d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    47d6:	dc 01       	movw	r26, r24
    47d8:	cb 01       	movw	r24, r22
    47da:	f8 01       	movw	r30, r16
    47dc:	91 83       	std	Z+1, r25	; 0x01
    47de:	80 83       	st	Z, r24
    47e0:	1f c0       	rjmp	.+62     	; 0x4820 <main+0x26d6>
    47e2:	fe 01       	movw	r30, r28
    47e4:	e7 5b       	subi	r30, 0xB7	; 183
    47e6:	ff 4f       	sbci	r31, 0xFF	; 255
    47e8:	88 ec       	ldi	r24, 0xC8	; 200
    47ea:	90 e0       	ldi	r25, 0x00	; 0
    47ec:	91 83       	std	Z+1, r25	; 0x01
    47ee:	80 83       	st	Z, r24
    47f0:	fe 01       	movw	r30, r28
    47f2:	e7 5b       	subi	r30, 0xB7	; 183
    47f4:	ff 4f       	sbci	r31, 0xFF	; 255
    47f6:	80 81       	ld	r24, Z
    47f8:	91 81       	ldd	r25, Z+1	; 0x01
    47fa:	01 97       	sbiw	r24, 0x01	; 1
    47fc:	f1 f7       	brne	.-4      	; 0x47fa <main+0x26b0>
    47fe:	fe 01       	movw	r30, r28
    4800:	e7 5b       	subi	r30, 0xB7	; 183
    4802:	ff 4f       	sbci	r31, 0xFF	; 255
    4804:	91 83       	std	Z+1, r25	; 0x01
    4806:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4808:	de 01       	movw	r26, r28
    480a:	a5 5b       	subi	r26, 0xB5	; 181
    480c:	bf 4f       	sbci	r27, 0xFF	; 255
    480e:	fe 01       	movw	r30, r28
    4810:	e5 5b       	subi	r30, 0xB5	; 181
    4812:	ff 4f       	sbci	r31, 0xFF	; 255
    4814:	80 81       	ld	r24, Z
    4816:	91 81       	ldd	r25, Z+1	; 0x01
    4818:	01 97       	sbiw	r24, 0x01	; 1
    481a:	11 96       	adiw	r26, 0x01	; 1
    481c:	9c 93       	st	X, r25
    481e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4820:	fe 01       	movw	r30, r28
    4822:	e5 5b       	subi	r30, 0xB5	; 181
    4824:	ff 4f       	sbci	r31, 0xFF	; 255
    4826:	80 81       	ld	r24, Z
    4828:	91 81       	ldd	r25, Z+1	; 0x01
    482a:	00 97       	sbiw	r24, 0x00	; 0
    482c:	d1 f6       	brne	.-76     	; 0x47e2 <main+0x2698>
    482e:	28 c0       	rjmp	.+80     	; 0x4880 <main+0x2736>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4830:	8e 01       	movw	r16, r28
    4832:	05 5b       	subi	r16, 0xB5	; 181
    4834:	1f 4f       	sbci	r17, 0xFF	; 255
    4836:	fe 01       	movw	r30, r28
    4838:	e3 5b       	subi	r30, 0xB3	; 179
    483a:	ff 4f       	sbci	r31, 0xFF	; 255
    483c:	60 81       	ld	r22, Z
    483e:	71 81       	ldd	r23, Z+1	; 0x01
    4840:	82 81       	ldd	r24, Z+2	; 0x02
    4842:	93 81       	ldd	r25, Z+3	; 0x03
    4844:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4848:	dc 01       	movw	r26, r24
    484a:	cb 01       	movw	r24, r22
    484c:	f8 01       	movw	r30, r16
    484e:	91 83       	std	Z+1, r25	; 0x01
    4850:	80 83       	st	Z, r24
    4852:	de 01       	movw	r26, r28
    4854:	a9 5b       	subi	r26, 0xB9	; 185
    4856:	bf 4f       	sbci	r27, 0xFF	; 255
    4858:	fe 01       	movw	r30, r28
    485a:	e5 5b       	subi	r30, 0xB5	; 181
    485c:	ff 4f       	sbci	r31, 0xFF	; 255
    485e:	80 81       	ld	r24, Z
    4860:	91 81       	ldd	r25, Z+1	; 0x01
    4862:	11 96       	adiw	r26, 0x01	; 1
    4864:	9c 93       	st	X, r25
    4866:	8e 93       	st	-X, r24
    4868:	fe 01       	movw	r30, r28
    486a:	e9 5b       	subi	r30, 0xB9	; 185
    486c:	ff 4f       	sbci	r31, 0xFF	; 255
    486e:	80 81       	ld	r24, Z
    4870:	91 81       	ldd	r25, Z+1	; 0x01
    4872:	01 97       	sbiw	r24, 0x01	; 1
    4874:	f1 f7       	brne	.-4      	; 0x4872 <main+0x2728>
    4876:	fe 01       	movw	r30, r28
    4878:	e9 5b       	subi	r30, 0xB9	; 185
    487a:	ff 4f       	sbci	r31, 0xFF	; 255
    487c:	91 83       	std	Z+1, r25	; 0x01
    487e:	80 83       	st	Z, r24
			_delay_ms(200);
			if(ReceivedChar == '1')
    4880:	fe 01       	movw	r30, r28
    4882:	ed 50       	subi	r30, 0x0D	; 13
    4884:	ff 4f       	sbci	r31, 0xFF	; 255
    4886:	80 81       	ld	r24, Z
    4888:	81 33       	cpi	r24, 0x31	; 49
    488a:	31 f4       	brne	.+12     	; 0x4898 <main+0x274e>
			{
				LCD_WriteString(ON_MSG);
    488c:	ce 01       	movw	r24, r28
    488e:	85 5d       	subi	r24, 0xD5	; 213
    4890:	9d 4f       	sbci	r25, 0xFD	; 253
    4892:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    4896:	0b c0       	rjmp	.+22     	; 0x48ae <main+0x2764>
			}
			else if(ReceivedChar == '0')
    4898:	fe 01       	movw	r30, r28
    489a:	ed 50       	subi	r30, 0x0D	; 13
    489c:	ff 4f       	sbci	r31, 0xFF	; 255
    489e:	80 81       	ld	r24, Z
    48a0:	80 33       	cpi	r24, 0x30	; 48
    48a2:	29 f4       	brne	.+10     	; 0x48ae <main+0x2764>
			{
				LCD_WriteString(OFF_MSG);
    48a4:	ce 01       	movw	r24, r28
    48a6:	82 5d       	subi	r24, 0xD2	; 210
    48a8:	9d 4f       	sbci	r25, 0xFD	; 253
    48aa:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    48ae:	fe 01       	movw	r30, r28
    48b0:	ed 5b       	subi	r30, 0xBD	; 189
    48b2:	ff 4f       	sbci	r31, 0xFF	; 255
    48b4:	80 e0       	ldi	r24, 0x00	; 0
    48b6:	90 e0       	ldi	r25, 0x00	; 0
    48b8:	aa ef       	ldi	r26, 0xFA	; 250
    48ba:	b4 e4       	ldi	r27, 0x44	; 68
    48bc:	80 83       	st	Z, r24
    48be:	91 83       	std	Z+1, r25	; 0x01
    48c0:	a2 83       	std	Z+2, r26	; 0x02
    48c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    48c4:	8e 01       	movw	r16, r28
    48c6:	01 5c       	subi	r16, 0xC1	; 193
    48c8:	1f 4f       	sbci	r17, 0xFF	; 255
    48ca:	fe 01       	movw	r30, r28
    48cc:	ed 5b       	subi	r30, 0xBD	; 189
    48ce:	ff 4f       	sbci	r31, 0xFF	; 255
    48d0:	60 81       	ld	r22, Z
    48d2:	71 81       	ldd	r23, Z+1	; 0x01
    48d4:	82 81       	ldd	r24, Z+2	; 0x02
    48d6:	93 81       	ldd	r25, Z+3	; 0x03
    48d8:	20 e0       	ldi	r18, 0x00	; 0
    48da:	30 e0       	ldi	r19, 0x00	; 0
    48dc:	4a ef       	ldi	r20, 0xFA	; 250
    48de:	54 e4       	ldi	r21, 0x44	; 68
    48e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48e4:	dc 01       	movw	r26, r24
    48e6:	cb 01       	movw	r24, r22
    48e8:	f8 01       	movw	r30, r16
    48ea:	80 83       	st	Z, r24
    48ec:	91 83       	std	Z+1, r25	; 0x01
    48ee:	a2 83       	std	Z+2, r26	; 0x02
    48f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    48f2:	fe 01       	movw	r30, r28
    48f4:	ff 96       	adiw	r30, 0x3f	; 63
    48f6:	60 81       	ld	r22, Z
    48f8:	71 81       	ldd	r23, Z+1	; 0x01
    48fa:	82 81       	ldd	r24, Z+2	; 0x02
    48fc:	93 81       	ldd	r25, Z+3	; 0x03
    48fe:	20 e0       	ldi	r18, 0x00	; 0
    4900:	30 e0       	ldi	r19, 0x00	; 0
    4902:	40 e8       	ldi	r20, 0x80	; 128
    4904:	5f e3       	ldi	r21, 0x3F	; 63
    4906:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    490a:	88 23       	and	r24, r24
    490c:	2c f4       	brge	.+10     	; 0x4918 <main+0x27ce>
		__ticks = 1;
    490e:	81 e0       	ldi	r24, 0x01	; 1
    4910:	90 e0       	ldi	r25, 0x00	; 0
    4912:	9e af       	std	Y+62, r25	; 0x3e
    4914:	8d af       	std	Y+61, r24	; 0x3d
    4916:	47 c0       	rjmp	.+142    	; 0x49a6 <main+0x285c>
	else if (__tmp > 65535)
    4918:	fe 01       	movw	r30, r28
    491a:	ff 96       	adiw	r30, 0x3f	; 63
    491c:	60 81       	ld	r22, Z
    491e:	71 81       	ldd	r23, Z+1	; 0x01
    4920:	82 81       	ldd	r24, Z+2	; 0x02
    4922:	93 81       	ldd	r25, Z+3	; 0x03
    4924:	20 e0       	ldi	r18, 0x00	; 0
    4926:	3f ef       	ldi	r19, 0xFF	; 255
    4928:	4f e7       	ldi	r20, 0x7F	; 127
    492a:	57 e4       	ldi	r21, 0x47	; 71
    492c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4930:	18 16       	cp	r1, r24
    4932:	6c f5       	brge	.+90     	; 0x498e <main+0x2844>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4934:	fe 01       	movw	r30, r28
    4936:	ed 5b       	subi	r30, 0xBD	; 189
    4938:	ff 4f       	sbci	r31, 0xFF	; 255
    493a:	60 81       	ld	r22, Z
    493c:	71 81       	ldd	r23, Z+1	; 0x01
    493e:	82 81       	ldd	r24, Z+2	; 0x02
    4940:	93 81       	ldd	r25, Z+3	; 0x03
    4942:	20 e0       	ldi	r18, 0x00	; 0
    4944:	30 e0       	ldi	r19, 0x00	; 0
    4946:	40 e2       	ldi	r20, 0x20	; 32
    4948:	51 e4       	ldi	r21, 0x41	; 65
    494a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    494e:	dc 01       	movw	r26, r24
    4950:	cb 01       	movw	r24, r22
    4952:	bc 01       	movw	r22, r24
    4954:	cd 01       	movw	r24, r26
    4956:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    495a:	dc 01       	movw	r26, r24
    495c:	cb 01       	movw	r24, r22
    495e:	9e af       	std	Y+62, r25	; 0x3e
    4960:	8d af       	std	Y+61, r24	; 0x3d
    4962:	0f c0       	rjmp	.+30     	; 0x4982 <main+0x2838>
    4964:	88 ec       	ldi	r24, 0xC8	; 200
    4966:	90 e0       	ldi	r25, 0x00	; 0
    4968:	9c af       	std	Y+60, r25	; 0x3c
    496a:	8b af       	std	Y+59, r24	; 0x3b
    496c:	8b ad       	ldd	r24, Y+59	; 0x3b
    496e:	9c ad       	ldd	r25, Y+60	; 0x3c
    4970:	01 97       	sbiw	r24, 0x01	; 1
    4972:	f1 f7       	brne	.-4      	; 0x4970 <main+0x2826>
    4974:	9c af       	std	Y+60, r25	; 0x3c
    4976:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4978:	8d ad       	ldd	r24, Y+61	; 0x3d
    497a:	9e ad       	ldd	r25, Y+62	; 0x3e
    497c:	01 97       	sbiw	r24, 0x01	; 1
    497e:	9e af       	std	Y+62, r25	; 0x3e
    4980:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4982:	8d ad       	ldd	r24, Y+61	; 0x3d
    4984:	9e ad       	ldd	r25, Y+62	; 0x3e
    4986:	00 97       	sbiw	r24, 0x00	; 0
    4988:	69 f7       	brne	.-38     	; 0x4964 <main+0x281a>
    498a:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    498e:	fe 01       	movw	r30, r28
    4990:	ff 96       	adiw	r30, 0x3f	; 63
    4992:	60 81       	ld	r22, Z
    4994:	71 81       	ldd	r23, Z+1	; 0x01
    4996:	82 81       	ldd	r24, Z+2	; 0x02
    4998:	93 81       	ldd	r25, Z+3	; 0x03
    499a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    499e:	dc 01       	movw	r26, r24
    49a0:	cb 01       	movw	r24, r22
    49a2:	9e af       	std	Y+62, r25	; 0x3e
    49a4:	8d af       	std	Y+61, r24	; 0x3d
    49a6:	8d ad       	ldd	r24, Y+61	; 0x3d
    49a8:	9e ad       	ldd	r25, Y+62	; 0x3e
    49aa:	9a af       	std	Y+58, r25	; 0x3a
    49ac:	89 af       	std	Y+57, r24	; 0x39
    49ae:	89 ad       	ldd	r24, Y+57	; 0x39
    49b0:	9a ad       	ldd	r25, Y+58	; 0x3a
    49b2:	01 97       	sbiw	r24, 0x01	; 1
    49b4:	f1 f7       	brne	.-4      	; 0x49b2 <main+0x2868>
    49b6:	9a af       	std	Y+58, r25	; 0x3a
    49b8:	89 af       	std	Y+57, r24	; 0x39
    49ba:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			_delay_ms(CASE_DELAY);



		}
		else if(KeyPressed == '+')
    49be:	fe 01       	movw	r30, r28
    49c0:	ee 50       	subi	r30, 0x0E	; 14
    49c2:	ff 4f       	sbci	r31, 0xFF	; 255
    49c4:	80 81       	ld	r24, Z
    49c6:	8b 32       	cpi	r24, 0x2B	; 43
    49c8:	09 f0       	breq	.+2      	; 0x49cc <main+0x2882>
    49ca:	a2 c0       	rjmp	.+324    	; 0x4b10 <main+0x29c6>
		{//INCREASE FAN SPEED
			DIO_SetPinValue(PORTB,PIN6,LOW);
    49cc:	81 e0       	ldi	r24, 0x01	; 1
    49ce:	66 e0       	ldi	r22, 0x06	; 6
    49d0:	40 e0       	ldi	r20, 0x00	; 0
    49d2:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    49d6:	fe 01       	movw	r30, r28
    49d8:	ee 50       	subi	r30, 0x0E	; 14
    49da:	ff 4f       	sbci	r31, 0xFF	; 255
    49dc:	80 e4       	ldi	r24, 0x40	; 64
    49de:	80 83       	st	Z, r24
			LCD_WriteCmd(DISPLAY_CLEAR);
    49e0:	81 e0       	ldi	r24, 0x01	; 1
    49e2:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    49e6:	80 e0       	ldi	r24, 0x00	; 0
    49e8:	60 e0       	ldi	r22, 0x00	; 0
    49ea:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			//SENDING + to turn Auto CONTROL Off then increase Fan SPEED & ENABLE MANUAL CONTROL
			UART_SEND_CHAR_POLLING('+');
    49ee:	8b e2       	ldi	r24, 0x2B	; 43
    49f0:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
			LCD_WriteString(I_FAN_SPEED_MSG);
    49f4:	ce 01       	movw	r24, r28
    49f6:	8c 5b       	subi	r24, 0xBC	; 188
    49f8:	9e 4f       	sbci	r25, 0xFE	; 254
    49fa:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
			UART_RECEIVE_CHAR_POLLING(& ReceivedChar);
    49fe:	ce 01       	movw	r24, r28
    4a00:	8d 50       	subi	r24, 0x0D	; 13
    4a02:	9f 4f       	sbci	r25, 0xFF	; 255
    4a04:	0e 94 8e 10 	call	0x211c	; 0x211c <UART_RECEIVE_CHAR_POLLING>
			LCD_GoToXY(0,1);
    4a08:	80 e0       	ldi	r24, 0x00	; 0
    4a0a:	61 e0       	ldi	r22, 0x01	; 1
    4a0c:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			LCD_WriteString(SPEED_LEVEL_MSG);
    4a10:	ce 01       	movw	r24, r28
    4a12:	87 53       	subi	r24, 0x37	; 55
    4a14:	9e 4f       	sbci	r25, 0xFE	; 254
    4a16:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
			LCD_WriteChar(ReceivedChar);
    4a1a:	fe 01       	movw	r30, r28
    4a1c:	ed 50       	subi	r30, 0x0D	; 13
    4a1e:	ff 4f       	sbci	r31, 0xFF	; 255
    4a20:	80 81       	ld	r24, Z
    4a22:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <LCD_WriteChar>
    4a26:	80 e0       	ldi	r24, 0x00	; 0
    4a28:	90 e0       	ldi	r25, 0x00	; 0
    4a2a:	aa ef       	ldi	r26, 0xFA	; 250
    4a2c:	b4 e4       	ldi	r27, 0x44	; 68
    4a2e:	8d ab       	std	Y+53, r24	; 0x35
    4a30:	9e ab       	std	Y+54, r25	; 0x36
    4a32:	af ab       	std	Y+55, r26	; 0x37
    4a34:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4a36:	6d a9       	ldd	r22, Y+53	; 0x35
    4a38:	7e a9       	ldd	r23, Y+54	; 0x36
    4a3a:	8f a9       	ldd	r24, Y+55	; 0x37
    4a3c:	98 ad       	ldd	r25, Y+56	; 0x38
    4a3e:	20 e0       	ldi	r18, 0x00	; 0
    4a40:	30 e0       	ldi	r19, 0x00	; 0
    4a42:	4a ef       	ldi	r20, 0xFA	; 250
    4a44:	54 e4       	ldi	r21, 0x44	; 68
    4a46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a4a:	dc 01       	movw	r26, r24
    4a4c:	cb 01       	movw	r24, r22
    4a4e:	89 ab       	std	Y+49, r24	; 0x31
    4a50:	9a ab       	std	Y+50, r25	; 0x32
    4a52:	ab ab       	std	Y+51, r26	; 0x33
    4a54:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4a56:	69 a9       	ldd	r22, Y+49	; 0x31
    4a58:	7a a9       	ldd	r23, Y+50	; 0x32
    4a5a:	8b a9       	ldd	r24, Y+51	; 0x33
    4a5c:	9c a9       	ldd	r25, Y+52	; 0x34
    4a5e:	20 e0       	ldi	r18, 0x00	; 0
    4a60:	30 e0       	ldi	r19, 0x00	; 0
    4a62:	40 e8       	ldi	r20, 0x80	; 128
    4a64:	5f e3       	ldi	r21, 0x3F	; 63
    4a66:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4a6a:	88 23       	and	r24, r24
    4a6c:	2c f4       	brge	.+10     	; 0x4a78 <main+0x292e>
		__ticks = 1;
    4a6e:	81 e0       	ldi	r24, 0x01	; 1
    4a70:	90 e0       	ldi	r25, 0x00	; 0
    4a72:	98 ab       	std	Y+48, r25	; 0x30
    4a74:	8f a7       	std	Y+47, r24	; 0x2f
    4a76:	40 c0       	rjmp	.+128    	; 0x4af8 <main+0x29ae>
	else if (__tmp > 65535)
    4a78:	69 a9       	ldd	r22, Y+49	; 0x31
    4a7a:	7a a9       	ldd	r23, Y+50	; 0x32
    4a7c:	8b a9       	ldd	r24, Y+51	; 0x33
    4a7e:	9c a9       	ldd	r25, Y+52	; 0x34
    4a80:	20 e0       	ldi	r18, 0x00	; 0
    4a82:	3f ef       	ldi	r19, 0xFF	; 255
    4a84:	4f e7       	ldi	r20, 0x7F	; 127
    4a86:	57 e4       	ldi	r21, 0x47	; 71
    4a88:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4a8c:	18 16       	cp	r1, r24
    4a8e:	54 f5       	brge	.+84     	; 0x4ae4 <main+0x299a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a90:	6d a9       	ldd	r22, Y+53	; 0x35
    4a92:	7e a9       	ldd	r23, Y+54	; 0x36
    4a94:	8f a9       	ldd	r24, Y+55	; 0x37
    4a96:	98 ad       	ldd	r25, Y+56	; 0x38
    4a98:	20 e0       	ldi	r18, 0x00	; 0
    4a9a:	30 e0       	ldi	r19, 0x00	; 0
    4a9c:	40 e2       	ldi	r20, 0x20	; 32
    4a9e:	51 e4       	ldi	r21, 0x41	; 65
    4aa0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4aa4:	dc 01       	movw	r26, r24
    4aa6:	cb 01       	movw	r24, r22
    4aa8:	bc 01       	movw	r22, r24
    4aaa:	cd 01       	movw	r24, r26
    4aac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4ab0:	dc 01       	movw	r26, r24
    4ab2:	cb 01       	movw	r24, r22
    4ab4:	98 ab       	std	Y+48, r25	; 0x30
    4ab6:	8f a7       	std	Y+47, r24	; 0x2f
    4ab8:	0f c0       	rjmp	.+30     	; 0x4ad8 <main+0x298e>
    4aba:	88 ec       	ldi	r24, 0xC8	; 200
    4abc:	90 e0       	ldi	r25, 0x00	; 0
    4abe:	9e a7       	std	Y+46, r25	; 0x2e
    4ac0:	8d a7       	std	Y+45, r24	; 0x2d
    4ac2:	8d a5       	ldd	r24, Y+45	; 0x2d
    4ac4:	9e a5       	ldd	r25, Y+46	; 0x2e
    4ac6:	01 97       	sbiw	r24, 0x01	; 1
    4ac8:	f1 f7       	brne	.-4      	; 0x4ac6 <main+0x297c>
    4aca:	9e a7       	std	Y+46, r25	; 0x2e
    4acc:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4ace:	8f a5       	ldd	r24, Y+47	; 0x2f
    4ad0:	98 a9       	ldd	r25, Y+48	; 0x30
    4ad2:	01 97       	sbiw	r24, 0x01	; 1
    4ad4:	98 ab       	std	Y+48, r25	; 0x30
    4ad6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ad8:	8f a5       	ldd	r24, Y+47	; 0x2f
    4ada:	98 a9       	ldd	r25, Y+48	; 0x30
    4adc:	00 97       	sbiw	r24, 0x00	; 0
    4ade:	69 f7       	brne	.-38     	; 0x4aba <main+0x2970>
    4ae0:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ae4:	69 a9       	ldd	r22, Y+49	; 0x31
    4ae6:	7a a9       	ldd	r23, Y+50	; 0x32
    4ae8:	8b a9       	ldd	r24, Y+51	; 0x33
    4aea:	9c a9       	ldd	r25, Y+52	; 0x34
    4aec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4af0:	dc 01       	movw	r26, r24
    4af2:	cb 01       	movw	r24, r22
    4af4:	98 ab       	std	Y+48, r25	; 0x30
    4af6:	8f a7       	std	Y+47, r24	; 0x2f
    4af8:	8f a5       	ldd	r24, Y+47	; 0x2f
    4afa:	98 a9       	ldd	r25, Y+48	; 0x30
    4afc:	9c a7       	std	Y+44, r25	; 0x2c
    4afe:	8b a7       	std	Y+43, r24	; 0x2b
    4b00:	8b a5       	ldd	r24, Y+43	; 0x2b
    4b02:	9c a5       	ldd	r25, Y+44	; 0x2c
    4b04:	01 97       	sbiw	r24, 0x01	; 1
    4b06:	f1 f7       	brne	.-4      	; 0x4b04 <main+0x29ba>
    4b08:	9c a7       	std	Y+44, r25	; 0x2c
    4b0a:	8b a7       	std	Y+43, r24	; 0x2b
    4b0c:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			_delay_ms(CASE_DELAY);

		}
		else if(KeyPressed == '-')
    4b10:	fe 01       	movw	r30, r28
    4b12:	ee 50       	subi	r30, 0x0E	; 14
    4b14:	ff 4f       	sbci	r31, 0xFF	; 255
    4b16:	80 81       	ld	r24, Z
    4b18:	8d 32       	cpi	r24, 0x2D	; 45
    4b1a:	09 f0       	breq	.+2      	; 0x4b1e <main+0x29d4>
    4b1c:	a2 c0       	rjmp	.+324    	; 0x4c62 <main+0x2b18>
		{//DECREASE FAN SPEED
			DIO_SetPinValue(PORTB,PIN6,LOW);
    4b1e:	81 e0       	ldi	r24, 0x01	; 1
    4b20:	66 e0       	ldi	r22, 0x06	; 6
    4b22:	40 e0       	ldi	r20, 0x00	; 0
    4b24:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    4b28:	fe 01       	movw	r30, r28
    4b2a:	ee 50       	subi	r30, 0x0E	; 14
    4b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b2e:	80 e4       	ldi	r24, 0x40	; 64
    4b30:	80 83       	st	Z, r24
			LCD_WriteCmd(DISPLAY_CLEAR);
    4b32:	81 e0       	ldi	r24, 0x01	; 1
    4b34:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    4b38:	80 e0       	ldi	r24, 0x00	; 0
    4b3a:	60 e0       	ldi	r22, 0x00	; 0
    4b3c:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			//SENDING - to turn Auto CONTROL Off then increase Fan SPEED & ENABLE MANUAL CONTROL
			UART_SEND_CHAR_POLLING('-');
    4b40:	8d e2       	ldi	r24, 0x2D	; 45
    4b42:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
			LCD_WriteString(D_FAN_SPEED_MSG);
    4b46:	ce 01       	movw	r24, r28
    4b48:	8f 5a       	subi	r24, 0xAF	; 175
    4b4a:	9e 4f       	sbci	r25, 0xFE	; 254
    4b4c:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
			UART_RECEIVE_CHAR_POLLING(& ReceivedChar);
    4b50:	ce 01       	movw	r24, r28
    4b52:	8d 50       	subi	r24, 0x0D	; 13
    4b54:	9f 4f       	sbci	r25, 0xFF	; 255
    4b56:	0e 94 8e 10 	call	0x211c	; 0x211c <UART_RECEIVE_CHAR_POLLING>
			LCD_GoToXY(0,1);
    4b5a:	80 e0       	ldi	r24, 0x00	; 0
    4b5c:	61 e0       	ldi	r22, 0x01	; 1
    4b5e:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			LCD_WriteString(SPEED_LEVEL_MSG);
    4b62:	ce 01       	movw	r24, r28
    4b64:	87 53       	subi	r24, 0x37	; 55
    4b66:	9e 4f       	sbci	r25, 0xFE	; 254
    4b68:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
			LCD_WriteChar(ReceivedChar);
    4b6c:	fe 01       	movw	r30, r28
    4b6e:	ed 50       	subi	r30, 0x0D	; 13
    4b70:	ff 4f       	sbci	r31, 0xFF	; 255
    4b72:	80 81       	ld	r24, Z
    4b74:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <LCD_WriteChar>
    4b78:	80 e0       	ldi	r24, 0x00	; 0
    4b7a:	90 e0       	ldi	r25, 0x00	; 0
    4b7c:	aa ef       	ldi	r26, 0xFA	; 250
    4b7e:	b4 e4       	ldi	r27, 0x44	; 68
    4b80:	8f a3       	std	Y+39, r24	; 0x27
    4b82:	98 a7       	std	Y+40, r25	; 0x28
    4b84:	a9 a7       	std	Y+41, r26	; 0x29
    4b86:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b88:	6f a1       	ldd	r22, Y+39	; 0x27
    4b8a:	78 a5       	ldd	r23, Y+40	; 0x28
    4b8c:	89 a5       	ldd	r24, Y+41	; 0x29
    4b8e:	9a a5       	ldd	r25, Y+42	; 0x2a
    4b90:	20 e0       	ldi	r18, 0x00	; 0
    4b92:	30 e0       	ldi	r19, 0x00	; 0
    4b94:	4a ef       	ldi	r20, 0xFA	; 250
    4b96:	54 e4       	ldi	r21, 0x44	; 68
    4b98:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b9c:	dc 01       	movw	r26, r24
    4b9e:	cb 01       	movw	r24, r22
    4ba0:	8b a3       	std	Y+35, r24	; 0x23
    4ba2:	9c a3       	std	Y+36, r25	; 0x24
    4ba4:	ad a3       	std	Y+37, r26	; 0x25
    4ba6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4ba8:	6b a1       	ldd	r22, Y+35	; 0x23
    4baa:	7c a1       	ldd	r23, Y+36	; 0x24
    4bac:	8d a1       	ldd	r24, Y+37	; 0x25
    4bae:	9e a1       	ldd	r25, Y+38	; 0x26
    4bb0:	20 e0       	ldi	r18, 0x00	; 0
    4bb2:	30 e0       	ldi	r19, 0x00	; 0
    4bb4:	40 e8       	ldi	r20, 0x80	; 128
    4bb6:	5f e3       	ldi	r21, 0x3F	; 63
    4bb8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4bbc:	88 23       	and	r24, r24
    4bbe:	2c f4       	brge	.+10     	; 0x4bca <main+0x2a80>
		__ticks = 1;
    4bc0:	81 e0       	ldi	r24, 0x01	; 1
    4bc2:	90 e0       	ldi	r25, 0x00	; 0
    4bc4:	9a a3       	std	Y+34, r25	; 0x22
    4bc6:	89 a3       	std	Y+33, r24	; 0x21
    4bc8:	40 c0       	rjmp	.+128    	; 0x4c4a <main+0x2b00>
	else if (__tmp > 65535)
    4bca:	6b a1       	ldd	r22, Y+35	; 0x23
    4bcc:	7c a1       	ldd	r23, Y+36	; 0x24
    4bce:	8d a1       	ldd	r24, Y+37	; 0x25
    4bd0:	9e a1       	ldd	r25, Y+38	; 0x26
    4bd2:	20 e0       	ldi	r18, 0x00	; 0
    4bd4:	3f ef       	ldi	r19, 0xFF	; 255
    4bd6:	4f e7       	ldi	r20, 0x7F	; 127
    4bd8:	57 e4       	ldi	r21, 0x47	; 71
    4bda:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4bde:	18 16       	cp	r1, r24
    4be0:	54 f5       	brge	.+84     	; 0x4c36 <main+0x2aec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4be2:	6f a1       	ldd	r22, Y+39	; 0x27
    4be4:	78 a5       	ldd	r23, Y+40	; 0x28
    4be6:	89 a5       	ldd	r24, Y+41	; 0x29
    4be8:	9a a5       	ldd	r25, Y+42	; 0x2a
    4bea:	20 e0       	ldi	r18, 0x00	; 0
    4bec:	30 e0       	ldi	r19, 0x00	; 0
    4bee:	40 e2       	ldi	r20, 0x20	; 32
    4bf0:	51 e4       	ldi	r21, 0x41	; 65
    4bf2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4bf6:	dc 01       	movw	r26, r24
    4bf8:	cb 01       	movw	r24, r22
    4bfa:	bc 01       	movw	r22, r24
    4bfc:	cd 01       	movw	r24, r26
    4bfe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c02:	dc 01       	movw	r26, r24
    4c04:	cb 01       	movw	r24, r22
    4c06:	9a a3       	std	Y+34, r25	; 0x22
    4c08:	89 a3       	std	Y+33, r24	; 0x21
    4c0a:	0f c0       	rjmp	.+30     	; 0x4c2a <main+0x2ae0>
    4c0c:	88 ec       	ldi	r24, 0xC8	; 200
    4c0e:	90 e0       	ldi	r25, 0x00	; 0
    4c10:	98 a3       	std	Y+32, r25	; 0x20
    4c12:	8f 8f       	std	Y+31, r24	; 0x1f
    4c14:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4c16:	98 a1       	ldd	r25, Y+32	; 0x20
    4c18:	01 97       	sbiw	r24, 0x01	; 1
    4c1a:	f1 f7       	brne	.-4      	; 0x4c18 <main+0x2ace>
    4c1c:	98 a3       	std	Y+32, r25	; 0x20
    4c1e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c20:	89 a1       	ldd	r24, Y+33	; 0x21
    4c22:	9a a1       	ldd	r25, Y+34	; 0x22
    4c24:	01 97       	sbiw	r24, 0x01	; 1
    4c26:	9a a3       	std	Y+34, r25	; 0x22
    4c28:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c2a:	89 a1       	ldd	r24, Y+33	; 0x21
    4c2c:	9a a1       	ldd	r25, Y+34	; 0x22
    4c2e:	00 97       	sbiw	r24, 0x00	; 0
    4c30:	69 f7       	brne	.-38     	; 0x4c0c <main+0x2ac2>
    4c32:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c36:	6b a1       	ldd	r22, Y+35	; 0x23
    4c38:	7c a1       	ldd	r23, Y+36	; 0x24
    4c3a:	8d a1       	ldd	r24, Y+37	; 0x25
    4c3c:	9e a1       	ldd	r25, Y+38	; 0x26
    4c3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c42:	dc 01       	movw	r26, r24
    4c44:	cb 01       	movw	r24, r22
    4c46:	9a a3       	std	Y+34, r25	; 0x22
    4c48:	89 a3       	std	Y+33, r24	; 0x21
    4c4a:	89 a1       	ldd	r24, Y+33	; 0x21
    4c4c:	9a a1       	ldd	r25, Y+34	; 0x22
    4c4e:	9e 8f       	std	Y+30, r25	; 0x1e
    4c50:	8d 8f       	std	Y+29, r24	; 0x1d
    4c52:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4c54:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4c56:	01 97       	sbiw	r24, 0x01	; 1
    4c58:	f1 f7       	brne	.-4      	; 0x4c56 <main+0x2b0c>
    4c5a:	9e 8f       	std	Y+30, r25	; 0x1e
    4c5c:	8d 8f       	std	Y+29, r24	; 0x1d
    4c5e:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			_delay_ms(CASE_DELAY);

		}
		else if(KeyPressed == '*')
    4c62:	fe 01       	movw	r30, r28
    4c64:	ee 50       	subi	r30, 0x0E	; 14
    4c66:	ff 4f       	sbci	r31, 0xFF	; 255
    4c68:	80 81       	ld	r24, Z
    4c6a:	8a 32       	cpi	r24, 0x2A	; 42
    4c6c:	09 f0       	breq	.+2      	; 0x4c70 <main+0x2b26>
    4c6e:	97 c0       	rjmp	.+302    	; 0x4d9e <main+0x2c54>
		{//MANUAL CONTROL IS OFF - AUTO CONTROL IS ON
			DIO_SetPinValue(PORTB,PIN6,LOW);
    4c70:	81 e0       	ldi	r24, 0x01	; 1
    4c72:	66 e0       	ldi	r22, 0x06	; 6
    4c74:	40 e0       	ldi	r20, 0x00	; 0
    4c76:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    4c7a:	fe 01       	movw	r30, r28
    4c7c:	ee 50       	subi	r30, 0x0E	; 14
    4c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c80:	80 e4       	ldi	r24, 0x40	; 64
    4c82:	80 83       	st	Z, r24
			LCD_WriteCmd(DISPLAY_CLEAR);
    4c84:	81 e0       	ldi	r24, 0x01	; 1
    4c86:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    4c8a:	80 e0       	ldi	r24, 0x00	; 0
    4c8c:	60 e0       	ldi	r22, 0x00	; 0
    4c8e:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			//SENDING a to EN AUTO Control and disable Manual Control
			UART_SEND_CHAR_POLLING('a');
    4c92:	81 e6       	ldi	r24, 0x61	; 97
    4c94:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
			LCD_WriteString(AUTO_CONTROL_MSG);
    4c98:	ce 01       	movw	r24, r28
    4c9a:	8a 51       	subi	r24, 0x1A	; 26
    4c9c:	9e 4f       	sbci	r25, 0xFE	; 254
    4c9e:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
			LCD_GoToXY(0,1);
    4ca2:	80 e0       	ldi	r24, 0x00	; 0
    4ca4:	61 e0       	ldi	r22, 0x01	; 1
    4ca6:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			LCD_WriteString(ON_MSG);
    4caa:	ce 01       	movw	r24, r28
    4cac:	85 5d       	subi	r24, 0xD5	; 213
    4cae:	9d 4f       	sbci	r25, 0xFD	; 253
    4cb0:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    4cb4:	80 e0       	ldi	r24, 0x00	; 0
    4cb6:	90 e0       	ldi	r25, 0x00	; 0
    4cb8:	aa ef       	ldi	r26, 0xFA	; 250
    4cba:	b4 e4       	ldi	r27, 0x44	; 68
    4cbc:	89 8f       	std	Y+25, r24	; 0x19
    4cbe:	9a 8f       	std	Y+26, r25	; 0x1a
    4cc0:	ab 8f       	std	Y+27, r26	; 0x1b
    4cc2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4cc4:	69 8d       	ldd	r22, Y+25	; 0x19
    4cc6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4cc8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4cca:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4ccc:	20 e0       	ldi	r18, 0x00	; 0
    4cce:	30 e0       	ldi	r19, 0x00	; 0
    4cd0:	4a ef       	ldi	r20, 0xFA	; 250
    4cd2:	54 e4       	ldi	r21, 0x44	; 68
    4cd4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4cd8:	dc 01       	movw	r26, r24
    4cda:	cb 01       	movw	r24, r22
    4cdc:	8d 8b       	std	Y+21, r24	; 0x15
    4cde:	9e 8b       	std	Y+22, r25	; 0x16
    4ce0:	af 8b       	std	Y+23, r26	; 0x17
    4ce2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4ce4:	6d 89       	ldd	r22, Y+21	; 0x15
    4ce6:	7e 89       	ldd	r23, Y+22	; 0x16
    4ce8:	8f 89       	ldd	r24, Y+23	; 0x17
    4cea:	98 8d       	ldd	r25, Y+24	; 0x18
    4cec:	20 e0       	ldi	r18, 0x00	; 0
    4cee:	30 e0       	ldi	r19, 0x00	; 0
    4cf0:	40 e8       	ldi	r20, 0x80	; 128
    4cf2:	5f e3       	ldi	r21, 0x3F	; 63
    4cf4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4cf8:	88 23       	and	r24, r24
    4cfa:	2c f4       	brge	.+10     	; 0x4d06 <main+0x2bbc>
		__ticks = 1;
    4cfc:	81 e0       	ldi	r24, 0x01	; 1
    4cfe:	90 e0       	ldi	r25, 0x00	; 0
    4d00:	9c 8b       	std	Y+20, r25	; 0x14
    4d02:	8b 8b       	std	Y+19, r24	; 0x13
    4d04:	40 c0       	rjmp	.+128    	; 0x4d86 <main+0x2c3c>
	else if (__tmp > 65535)
    4d06:	6d 89       	ldd	r22, Y+21	; 0x15
    4d08:	7e 89       	ldd	r23, Y+22	; 0x16
    4d0a:	8f 89       	ldd	r24, Y+23	; 0x17
    4d0c:	98 8d       	ldd	r25, Y+24	; 0x18
    4d0e:	20 e0       	ldi	r18, 0x00	; 0
    4d10:	3f ef       	ldi	r19, 0xFF	; 255
    4d12:	4f e7       	ldi	r20, 0x7F	; 127
    4d14:	57 e4       	ldi	r21, 0x47	; 71
    4d16:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4d1a:	18 16       	cp	r1, r24
    4d1c:	54 f5       	brge	.+84     	; 0x4d72 <main+0x2c28>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d1e:	69 8d       	ldd	r22, Y+25	; 0x19
    4d20:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4d22:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4d24:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4d26:	20 e0       	ldi	r18, 0x00	; 0
    4d28:	30 e0       	ldi	r19, 0x00	; 0
    4d2a:	40 e2       	ldi	r20, 0x20	; 32
    4d2c:	51 e4       	ldi	r21, 0x41	; 65
    4d2e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d32:	dc 01       	movw	r26, r24
    4d34:	cb 01       	movw	r24, r22
    4d36:	bc 01       	movw	r22, r24
    4d38:	cd 01       	movw	r24, r26
    4d3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d3e:	dc 01       	movw	r26, r24
    4d40:	cb 01       	movw	r24, r22
    4d42:	9c 8b       	std	Y+20, r25	; 0x14
    4d44:	8b 8b       	std	Y+19, r24	; 0x13
    4d46:	0f c0       	rjmp	.+30     	; 0x4d66 <main+0x2c1c>
    4d48:	88 ec       	ldi	r24, 0xC8	; 200
    4d4a:	90 e0       	ldi	r25, 0x00	; 0
    4d4c:	9a 8b       	std	Y+18, r25	; 0x12
    4d4e:	89 8b       	std	Y+17, r24	; 0x11
    4d50:	89 89       	ldd	r24, Y+17	; 0x11
    4d52:	9a 89       	ldd	r25, Y+18	; 0x12
    4d54:	01 97       	sbiw	r24, 0x01	; 1
    4d56:	f1 f7       	brne	.-4      	; 0x4d54 <main+0x2c0a>
    4d58:	9a 8b       	std	Y+18, r25	; 0x12
    4d5a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d5c:	8b 89       	ldd	r24, Y+19	; 0x13
    4d5e:	9c 89       	ldd	r25, Y+20	; 0x14
    4d60:	01 97       	sbiw	r24, 0x01	; 1
    4d62:	9c 8b       	std	Y+20, r25	; 0x14
    4d64:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d66:	8b 89       	ldd	r24, Y+19	; 0x13
    4d68:	9c 89       	ldd	r25, Y+20	; 0x14
    4d6a:	00 97       	sbiw	r24, 0x00	; 0
    4d6c:	69 f7       	brne	.-38     	; 0x4d48 <main+0x2bfe>
    4d6e:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d72:	6d 89       	ldd	r22, Y+21	; 0x15
    4d74:	7e 89       	ldd	r23, Y+22	; 0x16
    4d76:	8f 89       	ldd	r24, Y+23	; 0x17
    4d78:	98 8d       	ldd	r25, Y+24	; 0x18
    4d7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d7e:	dc 01       	movw	r26, r24
    4d80:	cb 01       	movw	r24, r22
    4d82:	9c 8b       	std	Y+20, r25	; 0x14
    4d84:	8b 8b       	std	Y+19, r24	; 0x13
    4d86:	8b 89       	ldd	r24, Y+19	; 0x13
    4d88:	9c 89       	ldd	r25, Y+20	; 0x14
    4d8a:	98 8b       	std	Y+16, r25	; 0x10
    4d8c:	8f 87       	std	Y+15, r24	; 0x0f
    4d8e:	8f 85       	ldd	r24, Y+15	; 0x0f
    4d90:	98 89       	ldd	r25, Y+16	; 0x10
    4d92:	01 97       	sbiw	r24, 0x01	; 1
    4d94:	f1 f7       	brne	.-4      	; 0x4d92 <main+0x2c48>
    4d96:	98 8b       	std	Y+16, r25	; 0x10
    4d98:	8f 87       	std	Y+15, r24	; 0x0f
    4d9a:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			_delay_ms(CASE_DELAY);

		}
		else
		{//ENTERD Value no specified
			DIO_SetPinValue(PORTB,PIN6,LOW);
    4d9e:	81 e0       	ldi	r24, 0x01	; 1
    4da0:	66 e0       	ldi	r22, 0x06	; 6
    4da2:	40 e0       	ldi	r20, 0x00	; 0
    4da4:	0e 94 ac 06 	call	0xd58	; 0xd58 <DIO_SetPinValue>
			KeyPressed = '@';
    4da8:	fe 01       	movw	r30, r28
    4daa:	ee 50       	subi	r30, 0x0E	; 14
    4dac:	ff 4f       	sbci	r31, 0xFF	; 255
    4dae:	80 e4       	ldi	r24, 0x40	; 64
    4db0:	80 83       	st	Z, r24
			LCD_WriteCmd(DISPLAY_CLEAR);
    4db2:	81 e0       	ldi	r24, 0x01	; 1
    4db4:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
			LCD_GoToXY(0,0);
    4db8:	80 e0       	ldi	r24, 0x00	; 0
    4dba:	60 e0       	ldi	r22, 0x00	; 0
    4dbc:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
			LCD_WriteString(WRONG_ENTRY_MSG);
    4dc0:	ce 01       	movw	r24, r28
    4dc2:	89 5d       	subi	r24, 0xD9	; 217
    4dc4:	9e 4f       	sbci	r25, 0xFE	; 254
    4dc6:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    4dca:	80 e0       	ldi	r24, 0x00	; 0
    4dcc:	90 e0       	ldi	r25, 0x00	; 0
    4dce:	aa ef       	ldi	r26, 0xFA	; 250
    4dd0:	b4 e4       	ldi	r27, 0x44	; 68
    4dd2:	8b 87       	std	Y+11, r24	; 0x0b
    4dd4:	9c 87       	std	Y+12, r25	; 0x0c
    4dd6:	ad 87       	std	Y+13, r26	; 0x0d
    4dd8:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4dda:	6b 85       	ldd	r22, Y+11	; 0x0b
    4ddc:	7c 85       	ldd	r23, Y+12	; 0x0c
    4dde:	8d 85       	ldd	r24, Y+13	; 0x0d
    4de0:	9e 85       	ldd	r25, Y+14	; 0x0e
    4de2:	20 e0       	ldi	r18, 0x00	; 0
    4de4:	30 e0       	ldi	r19, 0x00	; 0
    4de6:	4a ef       	ldi	r20, 0xFA	; 250
    4de8:	54 e4       	ldi	r21, 0x44	; 68
    4dea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4dee:	dc 01       	movw	r26, r24
    4df0:	cb 01       	movw	r24, r22
    4df2:	8f 83       	std	Y+7, r24	; 0x07
    4df4:	98 87       	std	Y+8, r25	; 0x08
    4df6:	a9 87       	std	Y+9, r26	; 0x09
    4df8:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4dfa:	6f 81       	ldd	r22, Y+7	; 0x07
    4dfc:	78 85       	ldd	r23, Y+8	; 0x08
    4dfe:	89 85       	ldd	r24, Y+9	; 0x09
    4e00:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e02:	20 e0       	ldi	r18, 0x00	; 0
    4e04:	30 e0       	ldi	r19, 0x00	; 0
    4e06:	40 e8       	ldi	r20, 0x80	; 128
    4e08:	5f e3       	ldi	r21, 0x3F	; 63
    4e0a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4e0e:	88 23       	and	r24, r24
    4e10:	2c f4       	brge	.+10     	; 0x4e1c <main+0x2cd2>
		__ticks = 1;
    4e12:	81 e0       	ldi	r24, 0x01	; 1
    4e14:	90 e0       	ldi	r25, 0x00	; 0
    4e16:	9e 83       	std	Y+6, r25	; 0x06
    4e18:	8d 83       	std	Y+5, r24	; 0x05
    4e1a:	40 c0       	rjmp	.+128    	; 0x4e9c <main+0x2d52>
	else if (__tmp > 65535)
    4e1c:	6f 81       	ldd	r22, Y+7	; 0x07
    4e1e:	78 85       	ldd	r23, Y+8	; 0x08
    4e20:	89 85       	ldd	r24, Y+9	; 0x09
    4e22:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e24:	20 e0       	ldi	r18, 0x00	; 0
    4e26:	3f ef       	ldi	r19, 0xFF	; 255
    4e28:	4f e7       	ldi	r20, 0x7F	; 127
    4e2a:	57 e4       	ldi	r21, 0x47	; 71
    4e2c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4e30:	18 16       	cp	r1, r24
    4e32:	54 f5       	brge	.+84     	; 0x4e88 <main+0x2d3e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e34:	6b 85       	ldd	r22, Y+11	; 0x0b
    4e36:	7c 85       	ldd	r23, Y+12	; 0x0c
    4e38:	8d 85       	ldd	r24, Y+13	; 0x0d
    4e3a:	9e 85       	ldd	r25, Y+14	; 0x0e
    4e3c:	20 e0       	ldi	r18, 0x00	; 0
    4e3e:	30 e0       	ldi	r19, 0x00	; 0
    4e40:	40 e2       	ldi	r20, 0x20	; 32
    4e42:	51 e4       	ldi	r21, 0x41	; 65
    4e44:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e48:	dc 01       	movw	r26, r24
    4e4a:	cb 01       	movw	r24, r22
    4e4c:	bc 01       	movw	r22, r24
    4e4e:	cd 01       	movw	r24, r26
    4e50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e54:	dc 01       	movw	r26, r24
    4e56:	cb 01       	movw	r24, r22
    4e58:	9e 83       	std	Y+6, r25	; 0x06
    4e5a:	8d 83       	std	Y+5, r24	; 0x05
    4e5c:	0f c0       	rjmp	.+30     	; 0x4e7c <main+0x2d32>
    4e5e:	88 ec       	ldi	r24, 0xC8	; 200
    4e60:	90 e0       	ldi	r25, 0x00	; 0
    4e62:	9c 83       	std	Y+4, r25	; 0x04
    4e64:	8b 83       	std	Y+3, r24	; 0x03
    4e66:	8b 81       	ldd	r24, Y+3	; 0x03
    4e68:	9c 81       	ldd	r25, Y+4	; 0x04
    4e6a:	01 97       	sbiw	r24, 0x01	; 1
    4e6c:	f1 f7       	brne	.-4      	; 0x4e6a <main+0x2d20>
    4e6e:	9c 83       	std	Y+4, r25	; 0x04
    4e70:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e72:	8d 81       	ldd	r24, Y+5	; 0x05
    4e74:	9e 81       	ldd	r25, Y+6	; 0x06
    4e76:	01 97       	sbiw	r24, 0x01	; 1
    4e78:	9e 83       	std	Y+6, r25	; 0x06
    4e7a:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e7c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e7e:	9e 81       	ldd	r25, Y+6	; 0x06
    4e80:	00 97       	sbiw	r24, 0x00	; 0
    4e82:	69 f7       	brne	.-38     	; 0x4e5e <main+0x2d14>
    4e84:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e88:	6f 81       	ldd	r22, Y+7	; 0x07
    4e8a:	78 85       	ldd	r23, Y+8	; 0x08
    4e8c:	89 85       	ldd	r24, Y+9	; 0x09
    4e8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4e90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e94:	dc 01       	movw	r26, r24
    4e96:	cb 01       	movw	r24, r22
    4e98:	9e 83       	std	Y+6, r25	; 0x06
    4e9a:	8d 83       	std	Y+5, r24	; 0x05
    4e9c:	8d 81       	ldd	r24, Y+5	; 0x05
    4e9e:	9e 81       	ldd	r25, Y+6	; 0x06
    4ea0:	9a 83       	std	Y+2, r25	; 0x02
    4ea2:	89 83       	std	Y+1, r24	; 0x01
    4ea4:	89 81       	ldd	r24, Y+1	; 0x01
    4ea6:	9a 81       	ldd	r25, Y+2	; 0x02
    4ea8:	01 97       	sbiw	r24, 0x01	; 1
    4eaa:	f1 f7       	brne	.-4      	; 0x4ea8 <main+0x2d5e>
    4eac:	9a 83       	std	Y+2, r25	; 0x02
    4eae:	89 83       	std	Y+1, r24	; 0x01
    4eb0:	0c 94 be 19 	jmp	0x337c	; 0x337c <main+0x1232>

00004eb4 <GET_PASS_CHECK>:



}
u8 GET_PASS_CHECK(void)
{
    4eb4:	df 93       	push	r29
    4eb6:	cf 93       	push	r28
    4eb8:	cd b7       	in	r28, 0x3d	; 61
    4eba:	de b7       	in	r29, 0x3e	; 62
    4ebc:	ae 97       	sbiw	r28, 0x2e	; 46
    4ebe:	0f b6       	in	r0, 0x3f	; 63
    4ec0:	f8 94       	cli
    4ec2:	de bf       	out	0x3e, r29	; 62
    4ec4:	0f be       	out	0x3f, r0	; 63
    4ec6:	cd bf       	out	0x3d, r28	; 61
	u8 PASS_flag = 0;
    4ec8:	1f 8e       	std	Y+31, r1	; 0x1f
	u8 index = 0;
    4eca:	1e 8e       	std	Y+30, r1	; 0x1e
	u8 Entered_PASS[4];

	u8 KeyPressed = '@';
    4ecc:	80 e4       	ldi	r24, 0x40	; 64
    4ece:	8d 8f       	std	Y+29, r24	; 0x1d
	u8 PASS_MSG[6]="PASS:";
    4ed0:	ce 01       	movw	r24, r28
    4ed2:	84 96       	adiw	r24, 0x24	; 36
    4ed4:	9b a7       	std	Y+43, r25	; 0x2b
    4ed6:	8a a7       	std	Y+42, r24	; 0x2a
    4ed8:	e9 ed       	ldi	r30, 0xD9	; 217
    4eda:	f1 e0       	ldi	r31, 0x01	; 1
    4edc:	fd a7       	std	Y+45, r31	; 0x2d
    4ede:	ec a7       	std	Y+44, r30	; 0x2c
    4ee0:	f6 e0       	ldi	r31, 0x06	; 6
    4ee2:	fe a7       	std	Y+46, r31	; 0x2e
    4ee4:	ec a5       	ldd	r30, Y+44	; 0x2c
    4ee6:	fd a5       	ldd	r31, Y+45	; 0x2d
    4ee8:	00 80       	ld	r0, Z
    4eea:	8c a5       	ldd	r24, Y+44	; 0x2c
    4eec:	9d a5       	ldd	r25, Y+45	; 0x2d
    4eee:	01 96       	adiw	r24, 0x01	; 1
    4ef0:	9d a7       	std	Y+45, r25	; 0x2d
    4ef2:	8c a7       	std	Y+44, r24	; 0x2c
    4ef4:	ea a5       	ldd	r30, Y+42	; 0x2a
    4ef6:	fb a5       	ldd	r31, Y+43	; 0x2b
    4ef8:	00 82       	st	Z, r0
    4efa:	8a a5       	ldd	r24, Y+42	; 0x2a
    4efc:	9b a5       	ldd	r25, Y+43	; 0x2b
    4efe:	01 96       	adiw	r24, 0x01	; 1
    4f00:	9b a7       	std	Y+43, r25	; 0x2b
    4f02:	8a a7       	std	Y+42, r24	; 0x2a
    4f04:	9e a5       	ldd	r25, Y+46	; 0x2e
    4f06:	91 50       	subi	r25, 0x01	; 1
    4f08:	9e a7       	std	Y+46, r25	; 0x2e
    4f0a:	ee a5       	ldd	r30, Y+46	; 0x2e
    4f0c:	ee 23       	and	r30, r30
    4f0e:	51 f7       	brne	.-44     	; 0x4ee4 <GET_PASS_CHECK+0x30>

	LCD_WriteCmd(DISPLAY_CLEAR);
    4f10:	81 e0       	ldi	r24, 0x01	; 1
    4f12:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
	LCD_GoToXY(0,0);
    4f16:	80 e0       	ldi	r24, 0x00	; 0
    4f18:	60 e0       	ldi	r22, 0x00	; 0
    4f1a:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
	LCD_WriteString(PASS_MSG);
    4f1e:	ce 01       	movw	r24, r28
    4f20:	84 96       	adiw	r24, 0x24	; 36
    4f22:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
    4f26:	80 e0       	ldi	r24, 0x00	; 0
    4f28:	90 e0       	ldi	r25, 0x00	; 0
    4f2a:	a8 e4       	ldi	r26, 0x48	; 72
    4f2c:	b3 e4       	ldi	r27, 0x43	; 67
    4f2e:	89 8f       	std	Y+25, r24	; 0x19
    4f30:	9a 8f       	std	Y+26, r25	; 0x1a
    4f32:	ab 8f       	std	Y+27, r26	; 0x1b
    4f34:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4f36:	69 8d       	ldd	r22, Y+25	; 0x19
    4f38:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4f3a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4f3c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f3e:	20 e0       	ldi	r18, 0x00	; 0
    4f40:	30 e0       	ldi	r19, 0x00	; 0
    4f42:	4a ef       	ldi	r20, 0xFA	; 250
    4f44:	54 e4       	ldi	r21, 0x44	; 68
    4f46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4f4a:	dc 01       	movw	r26, r24
    4f4c:	cb 01       	movw	r24, r22
    4f4e:	8d 8b       	std	Y+21, r24	; 0x15
    4f50:	9e 8b       	std	Y+22, r25	; 0x16
    4f52:	af 8b       	std	Y+23, r26	; 0x17
    4f54:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4f56:	6d 89       	ldd	r22, Y+21	; 0x15
    4f58:	7e 89       	ldd	r23, Y+22	; 0x16
    4f5a:	8f 89       	ldd	r24, Y+23	; 0x17
    4f5c:	98 8d       	ldd	r25, Y+24	; 0x18
    4f5e:	20 e0       	ldi	r18, 0x00	; 0
    4f60:	30 e0       	ldi	r19, 0x00	; 0
    4f62:	40 e8       	ldi	r20, 0x80	; 128
    4f64:	5f e3       	ldi	r21, 0x3F	; 63
    4f66:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4f6a:	88 23       	and	r24, r24
    4f6c:	2c f4       	brge	.+10     	; 0x4f78 <GET_PASS_CHECK+0xc4>
		__ticks = 1;
    4f6e:	81 e0       	ldi	r24, 0x01	; 1
    4f70:	90 e0       	ldi	r25, 0x00	; 0
    4f72:	9c 8b       	std	Y+20, r25	; 0x14
    4f74:	8b 8b       	std	Y+19, r24	; 0x13
    4f76:	3f c0       	rjmp	.+126    	; 0x4ff6 <GET_PASS_CHECK+0x142>
	else if (__tmp > 65535)
    4f78:	6d 89       	ldd	r22, Y+21	; 0x15
    4f7a:	7e 89       	ldd	r23, Y+22	; 0x16
    4f7c:	8f 89       	ldd	r24, Y+23	; 0x17
    4f7e:	98 8d       	ldd	r25, Y+24	; 0x18
    4f80:	20 e0       	ldi	r18, 0x00	; 0
    4f82:	3f ef       	ldi	r19, 0xFF	; 255
    4f84:	4f e7       	ldi	r20, 0x7F	; 127
    4f86:	57 e4       	ldi	r21, 0x47	; 71
    4f88:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4f8c:	18 16       	cp	r1, r24
    4f8e:	4c f5       	brge	.+82     	; 0x4fe2 <GET_PASS_CHECK+0x12e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f90:	69 8d       	ldd	r22, Y+25	; 0x19
    4f92:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4f94:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4f96:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4f98:	20 e0       	ldi	r18, 0x00	; 0
    4f9a:	30 e0       	ldi	r19, 0x00	; 0
    4f9c:	40 e2       	ldi	r20, 0x20	; 32
    4f9e:	51 e4       	ldi	r21, 0x41	; 65
    4fa0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4fa4:	dc 01       	movw	r26, r24
    4fa6:	cb 01       	movw	r24, r22
    4fa8:	bc 01       	movw	r22, r24
    4faa:	cd 01       	movw	r24, r26
    4fac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4fb0:	dc 01       	movw	r26, r24
    4fb2:	cb 01       	movw	r24, r22
    4fb4:	9c 8b       	std	Y+20, r25	; 0x14
    4fb6:	8b 8b       	std	Y+19, r24	; 0x13
    4fb8:	0f c0       	rjmp	.+30     	; 0x4fd8 <GET_PASS_CHECK+0x124>
    4fba:	88 ec       	ldi	r24, 0xC8	; 200
    4fbc:	90 e0       	ldi	r25, 0x00	; 0
    4fbe:	9a 8b       	std	Y+18, r25	; 0x12
    4fc0:	89 8b       	std	Y+17, r24	; 0x11
    4fc2:	89 89       	ldd	r24, Y+17	; 0x11
    4fc4:	9a 89       	ldd	r25, Y+18	; 0x12
    4fc6:	01 97       	sbiw	r24, 0x01	; 1
    4fc8:	f1 f7       	brne	.-4      	; 0x4fc6 <GET_PASS_CHECK+0x112>
    4fca:	9a 8b       	std	Y+18, r25	; 0x12
    4fcc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4fce:	8b 89       	ldd	r24, Y+19	; 0x13
    4fd0:	9c 89       	ldd	r25, Y+20	; 0x14
    4fd2:	01 97       	sbiw	r24, 0x01	; 1
    4fd4:	9c 8b       	std	Y+20, r25	; 0x14
    4fd6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4fd8:	8b 89       	ldd	r24, Y+19	; 0x13
    4fda:	9c 89       	ldd	r25, Y+20	; 0x14
    4fdc:	00 97       	sbiw	r24, 0x00	; 0
    4fde:	69 f7       	brne	.-38     	; 0x4fba <GET_PASS_CHECK+0x106>
    4fe0:	14 c0       	rjmp	.+40     	; 0x500a <GET_PASS_CHECK+0x156>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4fe2:	6d 89       	ldd	r22, Y+21	; 0x15
    4fe4:	7e 89       	ldd	r23, Y+22	; 0x16
    4fe6:	8f 89       	ldd	r24, Y+23	; 0x17
    4fe8:	98 8d       	ldd	r25, Y+24	; 0x18
    4fea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4fee:	dc 01       	movw	r26, r24
    4ff0:	cb 01       	movw	r24, r22
    4ff2:	9c 8b       	std	Y+20, r25	; 0x14
    4ff4:	8b 8b       	std	Y+19, r24	; 0x13
    4ff6:	8b 89       	ldd	r24, Y+19	; 0x13
    4ff8:	9c 89       	ldd	r25, Y+20	; 0x14
    4ffa:	98 8b       	std	Y+16, r25	; 0x10
    4ffc:	8f 87       	std	Y+15, r24	; 0x0f
    4ffe:	8f 85       	ldd	r24, Y+15	; 0x0f
    5000:	98 89       	ldd	r25, Y+16	; 0x10
    5002:	01 97       	sbiw	r24, 0x01	; 1
    5004:	f1 f7       	brne	.-4      	; 0x5002 <GET_PASS_CHECK+0x14e>
    5006:	98 8b       	std	Y+16, r25	; 0x10
    5008:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(200);
	LCD_GoToXY(0,1);
    500a:	80 e0       	ldi	r24, 0x00	; 0
    500c:	61 e0       	ldi	r22, 0x01	; 1
    500e:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
	for (index = 0;index < 4 ;index ++)
    5012:	1e 8e       	std	Y+30, r1	; 0x1e
    5014:	8a c0       	rjmp	.+276    	; 0x512a <GET_PASS_CHECK+0x276>
	{
		while(KeyPressed == '@')
		{
			KeyPressed	= KPD_GetPressedKey();
    5016:	0e 94 ca 09 	call	0x1394	; 0x1394 <KPD_GetPressedKey>
    501a:	8d 8f       	std	Y+29, r24	; 0x1d

	_delay_ms(200);
	LCD_GoToXY(0,1);
	for (index = 0;index < 4 ;index ++)
	{
		while(KeyPressed == '@')
    501c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    501e:	80 34       	cpi	r24, 0x40	; 64
    5020:	d1 f3       	breq	.-12     	; 0x5016 <GET_PASS_CHECK+0x162>
		{
			KeyPressed	= KPD_GetPressedKey();
		}
		Entered_PASS[index] = KeyPressed;
    5022:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5024:	28 2f       	mov	r18, r24
    5026:	30 e0       	ldi	r19, 0x00	; 0
    5028:	ce 01       	movw	r24, r28
    502a:	80 96       	adiw	r24, 0x20	; 32
    502c:	fc 01       	movw	r30, r24
    502e:	e2 0f       	add	r30, r18
    5030:	f3 1f       	adc	r31, r19
    5032:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5034:	80 83       	st	Z, r24
		LCD_WriteChar('*');
    5036:	8a e2       	ldi	r24, 0x2A	; 42
    5038:	0e 94 ce 0d 	call	0x1b9c	; 0x1b9c <LCD_WriteChar>
    503c:	80 e0       	ldi	r24, 0x00	; 0
    503e:	90 e0       	ldi	r25, 0x00	; 0
    5040:	a8 ec       	ldi	r26, 0xC8	; 200
    5042:	b2 e4       	ldi	r27, 0x42	; 66
    5044:	8b 87       	std	Y+11, r24	; 0x0b
    5046:	9c 87       	std	Y+12, r25	; 0x0c
    5048:	ad 87       	std	Y+13, r26	; 0x0d
    504a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    504c:	6b 85       	ldd	r22, Y+11	; 0x0b
    504e:	7c 85       	ldd	r23, Y+12	; 0x0c
    5050:	8d 85       	ldd	r24, Y+13	; 0x0d
    5052:	9e 85       	ldd	r25, Y+14	; 0x0e
    5054:	20 e0       	ldi	r18, 0x00	; 0
    5056:	30 e0       	ldi	r19, 0x00	; 0
    5058:	4a ef       	ldi	r20, 0xFA	; 250
    505a:	54 e4       	ldi	r21, 0x44	; 68
    505c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5060:	dc 01       	movw	r26, r24
    5062:	cb 01       	movw	r24, r22
    5064:	8f 83       	std	Y+7, r24	; 0x07
    5066:	98 87       	std	Y+8, r25	; 0x08
    5068:	a9 87       	std	Y+9, r26	; 0x09
    506a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    506c:	6f 81       	ldd	r22, Y+7	; 0x07
    506e:	78 85       	ldd	r23, Y+8	; 0x08
    5070:	89 85       	ldd	r24, Y+9	; 0x09
    5072:	9a 85       	ldd	r25, Y+10	; 0x0a
    5074:	20 e0       	ldi	r18, 0x00	; 0
    5076:	30 e0       	ldi	r19, 0x00	; 0
    5078:	40 e8       	ldi	r20, 0x80	; 128
    507a:	5f e3       	ldi	r21, 0x3F	; 63
    507c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5080:	88 23       	and	r24, r24
    5082:	2c f4       	brge	.+10     	; 0x508e <GET_PASS_CHECK+0x1da>
		__ticks = 1;
    5084:	81 e0       	ldi	r24, 0x01	; 1
    5086:	90 e0       	ldi	r25, 0x00	; 0
    5088:	9e 83       	std	Y+6, r25	; 0x06
    508a:	8d 83       	std	Y+5, r24	; 0x05
    508c:	3f c0       	rjmp	.+126    	; 0x510c <GET_PASS_CHECK+0x258>
	else if (__tmp > 65535)
    508e:	6f 81       	ldd	r22, Y+7	; 0x07
    5090:	78 85       	ldd	r23, Y+8	; 0x08
    5092:	89 85       	ldd	r24, Y+9	; 0x09
    5094:	9a 85       	ldd	r25, Y+10	; 0x0a
    5096:	20 e0       	ldi	r18, 0x00	; 0
    5098:	3f ef       	ldi	r19, 0xFF	; 255
    509a:	4f e7       	ldi	r20, 0x7F	; 127
    509c:	57 e4       	ldi	r21, 0x47	; 71
    509e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    50a2:	18 16       	cp	r1, r24
    50a4:	4c f5       	brge	.+82     	; 0x50f8 <GET_PASS_CHECK+0x244>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    50a6:	6b 85       	ldd	r22, Y+11	; 0x0b
    50a8:	7c 85       	ldd	r23, Y+12	; 0x0c
    50aa:	8d 85       	ldd	r24, Y+13	; 0x0d
    50ac:	9e 85       	ldd	r25, Y+14	; 0x0e
    50ae:	20 e0       	ldi	r18, 0x00	; 0
    50b0:	30 e0       	ldi	r19, 0x00	; 0
    50b2:	40 e2       	ldi	r20, 0x20	; 32
    50b4:	51 e4       	ldi	r21, 0x41	; 65
    50b6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    50ba:	dc 01       	movw	r26, r24
    50bc:	cb 01       	movw	r24, r22
    50be:	bc 01       	movw	r22, r24
    50c0:	cd 01       	movw	r24, r26
    50c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    50c6:	dc 01       	movw	r26, r24
    50c8:	cb 01       	movw	r24, r22
    50ca:	9e 83       	std	Y+6, r25	; 0x06
    50cc:	8d 83       	std	Y+5, r24	; 0x05
    50ce:	0f c0       	rjmp	.+30     	; 0x50ee <GET_PASS_CHECK+0x23a>
    50d0:	88 ec       	ldi	r24, 0xC8	; 200
    50d2:	90 e0       	ldi	r25, 0x00	; 0
    50d4:	9c 83       	std	Y+4, r25	; 0x04
    50d6:	8b 83       	std	Y+3, r24	; 0x03
    50d8:	8b 81       	ldd	r24, Y+3	; 0x03
    50da:	9c 81       	ldd	r25, Y+4	; 0x04
    50dc:	01 97       	sbiw	r24, 0x01	; 1
    50de:	f1 f7       	brne	.-4      	; 0x50dc <GET_PASS_CHECK+0x228>
    50e0:	9c 83       	std	Y+4, r25	; 0x04
    50e2:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    50e4:	8d 81       	ldd	r24, Y+5	; 0x05
    50e6:	9e 81       	ldd	r25, Y+6	; 0x06
    50e8:	01 97       	sbiw	r24, 0x01	; 1
    50ea:	9e 83       	std	Y+6, r25	; 0x06
    50ec:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    50ee:	8d 81       	ldd	r24, Y+5	; 0x05
    50f0:	9e 81       	ldd	r25, Y+6	; 0x06
    50f2:	00 97       	sbiw	r24, 0x00	; 0
    50f4:	69 f7       	brne	.-38     	; 0x50d0 <GET_PASS_CHECK+0x21c>
    50f6:	14 c0       	rjmp	.+40     	; 0x5120 <GET_PASS_CHECK+0x26c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    50f8:	6f 81       	ldd	r22, Y+7	; 0x07
    50fa:	78 85       	ldd	r23, Y+8	; 0x08
    50fc:	89 85       	ldd	r24, Y+9	; 0x09
    50fe:	9a 85       	ldd	r25, Y+10	; 0x0a
    5100:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5104:	dc 01       	movw	r26, r24
    5106:	cb 01       	movw	r24, r22
    5108:	9e 83       	std	Y+6, r25	; 0x06
    510a:	8d 83       	std	Y+5, r24	; 0x05
    510c:	8d 81       	ldd	r24, Y+5	; 0x05
    510e:	9e 81       	ldd	r25, Y+6	; 0x06
    5110:	9a 83       	std	Y+2, r25	; 0x02
    5112:	89 83       	std	Y+1, r24	; 0x01
    5114:	89 81       	ldd	r24, Y+1	; 0x01
    5116:	9a 81       	ldd	r25, Y+2	; 0x02
    5118:	01 97       	sbiw	r24, 0x01	; 1
    511a:	f1 f7       	brne	.-4      	; 0x5118 <GET_PASS_CHECK+0x264>
    511c:	9a 83       	std	Y+2, r25	; 0x02
    511e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(100);
		KeyPressed = '@';
    5120:	80 e4       	ldi	r24, 0x40	; 64
    5122:	8d 8f       	std	Y+29, r24	; 0x1d
	LCD_GoToXY(0,0);
	LCD_WriteString(PASS_MSG);

	_delay_ms(200);
	LCD_GoToXY(0,1);
	for (index = 0;index < 4 ;index ++)
    5124:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5126:	8f 5f       	subi	r24, 0xFF	; 255
    5128:	8e 8f       	std	Y+30, r24	; 0x1e
    512a:	8e 8d       	ldd	r24, Y+30	; 0x1e
    512c:	84 30       	cpi	r24, 0x04	; 4
    512e:	08 f4       	brcc	.+2      	; 0x5132 <GET_PASS_CHECK+0x27e>
    5130:	75 cf       	rjmp	.-278    	; 0x501c <GET_PASS_CHECK+0x168>
		Entered_PASS[index] = KeyPressed;
		LCD_WriteChar('*');
		_delay_ms(100);
		KeyPressed = '@';
	}
	for (index = 0;index < 4 ;index ++)
    5132:	1e 8e       	std	Y+30, r1	; 0x1e
    5134:	18 c0       	rjmp	.+48     	; 0x5166 <GET_PASS_CHECK+0x2b2>
	{
		if (Saved_PASS[index] == Entered_PASS[index])
    5136:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5138:	88 2f       	mov	r24, r24
    513a:	90 e0       	ldi	r25, 0x00	; 0
    513c:	fc 01       	movw	r30, r24
    513e:	ed 5f       	subi	r30, 0xFD	; 253
    5140:	fd 4f       	sbci	r31, 0xFD	; 253
    5142:	40 81       	ld	r20, Z
    5144:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5146:	28 2f       	mov	r18, r24
    5148:	30 e0       	ldi	r19, 0x00	; 0
    514a:	ce 01       	movw	r24, r28
    514c:	80 96       	adiw	r24, 0x20	; 32
    514e:	fc 01       	movw	r30, r24
    5150:	e2 0f       	add	r30, r18
    5152:	f3 1f       	adc	r31, r19
    5154:	80 81       	ld	r24, Z
    5156:	48 17       	cp	r20, r24
    5158:	19 f4       	brne	.+6      	; 0x5160 <GET_PASS_CHECK+0x2ac>
		{
			PASS_flag ++;
    515a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    515c:	8f 5f       	subi	r24, 0xFF	; 255
    515e:	8f 8f       	std	Y+31, r24	; 0x1f
		Entered_PASS[index] = KeyPressed;
		LCD_WriteChar('*');
		_delay_ms(100);
		KeyPressed = '@';
	}
	for (index = 0;index < 4 ;index ++)
    5160:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5162:	8f 5f       	subi	r24, 0xFF	; 255
    5164:	8e 8f       	std	Y+30, r24	; 0x1e
    5166:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5168:	84 30       	cpi	r24, 0x04	; 4
    516a:	28 f3       	brcs	.-54     	; 0x5136 <GET_PASS_CHECK+0x282>
			PASS_flag ++;
		}
		else{}
	}

return PASS_flag	;
    516c:	8f 8d       	ldd	r24, Y+31	; 0x1f
}
    516e:	ae 96       	adiw	r28, 0x2e	; 46
    5170:	0f b6       	in	r0, 0x3f	; 63
    5172:	f8 94       	cli
    5174:	de bf       	out	0x3e, r29	; 62
    5176:	0f be       	out	0x3f, r0	; 63
    5178:	cd bf       	out	0x3d, r28	; 61
    517a:	cf 91       	pop	r28
    517c:	df 91       	pop	r29
    517e:	08 95       	ret

00005180 <READ_DISPLAY_TEMP>:


void READ_DISPLAY_TEMP(void)
{
    5180:	df 93       	push	r29
    5182:	cf 93       	push	r28
    5184:	cd b7       	in	r28, 0x3d	; 61
    5186:	de b7       	in	r29, 0x3e	; 62
    5188:	e1 97       	sbiw	r28, 0x31	; 49
    518a:	0f b6       	in	r0, 0x3f	; 63
    518c:	f8 94       	cli
    518e:	de bf       	out	0x3e, r29	; 62
    5190:	0f be       	out	0x3f, r0	; 63
    5192:	cd bf       	out	0x3d, r28	; 61
	u8 TEMP_MSG[12]="TEMPERATURE";
    5194:	ce 01       	movw	r24, r28
    5196:	41 96       	adiw	r24, 0x11	; 17
    5198:	99 a7       	std	Y+41, r25	; 0x29
    519a:	88 a7       	std	Y+40, r24	; 0x28
    519c:	ef ed       	ldi	r30, 0xDF	; 223
    519e:	f1 e0       	ldi	r31, 0x01	; 1
    51a0:	fb a7       	std	Y+43, r31	; 0x2b
    51a2:	ea a7       	std	Y+42, r30	; 0x2a
    51a4:	fc e0       	ldi	r31, 0x0C	; 12
    51a6:	fc a7       	std	Y+44, r31	; 0x2c
    51a8:	ea a5       	ldd	r30, Y+42	; 0x2a
    51aa:	fb a5       	ldd	r31, Y+43	; 0x2b
    51ac:	00 80       	ld	r0, Z
    51ae:	8a a5       	ldd	r24, Y+42	; 0x2a
    51b0:	9b a5       	ldd	r25, Y+43	; 0x2b
    51b2:	01 96       	adiw	r24, 0x01	; 1
    51b4:	9b a7       	std	Y+43, r25	; 0x2b
    51b6:	8a a7       	std	Y+42, r24	; 0x2a
    51b8:	e8 a5       	ldd	r30, Y+40	; 0x28
    51ba:	f9 a5       	ldd	r31, Y+41	; 0x29
    51bc:	00 82       	st	Z, r0
    51be:	88 a5       	ldd	r24, Y+40	; 0x28
    51c0:	99 a5       	ldd	r25, Y+41	; 0x29
    51c2:	01 96       	adiw	r24, 0x01	; 1
    51c4:	99 a7       	std	Y+41, r25	; 0x29
    51c6:	88 a7       	std	Y+40, r24	; 0x28
    51c8:	9c a5       	ldd	r25, Y+44	; 0x2c
    51ca:	91 50       	subi	r25, 0x01	; 1
    51cc:	9c a7       	std	Y+44, r25	; 0x2c
    51ce:	ec a5       	ldd	r30, Y+44	; 0x2c
    51d0:	ee 23       	and	r30, r30
    51d2:	51 f7       	brne	.-44     	; 0x51a8 <READ_DISPLAY_TEMP+0x28>
	u8 ReceivedChar = 0;
    51d4:	1d 8e       	std	Y+29, r1	; 0x1d
	u8 ReceivedData[10]={' ',' ',' ',' ',' ',' ',' ',' ',' ',' '};
    51d6:	ce 01       	movw	r24, r28
    51d8:	4e 96       	adiw	r24, 0x1e	; 30
    51da:	9e a7       	std	Y+46, r25	; 0x2e
    51dc:	8d a7       	std	Y+45, r24	; 0x2d
    51de:	e7 e0       	ldi	r30, 0x07	; 7
    51e0:	f2 e0       	ldi	r31, 0x02	; 2
    51e2:	f8 ab       	std	Y+48, r31	; 0x30
    51e4:	ef a7       	std	Y+47, r30	; 0x2f
    51e6:	fa e0       	ldi	r31, 0x0A	; 10
    51e8:	f9 ab       	std	Y+49, r31	; 0x31
    51ea:	ef a5       	ldd	r30, Y+47	; 0x2f
    51ec:	f8 a9       	ldd	r31, Y+48	; 0x30
    51ee:	00 80       	ld	r0, Z
    51f0:	8f a5       	ldd	r24, Y+47	; 0x2f
    51f2:	98 a9       	ldd	r25, Y+48	; 0x30
    51f4:	01 96       	adiw	r24, 0x01	; 1
    51f6:	98 ab       	std	Y+48, r25	; 0x30
    51f8:	8f a7       	std	Y+47, r24	; 0x2f
    51fa:	ed a5       	ldd	r30, Y+45	; 0x2d
    51fc:	fe a5       	ldd	r31, Y+46	; 0x2e
    51fe:	00 82       	st	Z, r0
    5200:	8d a5       	ldd	r24, Y+45	; 0x2d
    5202:	9e a5       	ldd	r25, Y+46	; 0x2e
    5204:	01 96       	adiw	r24, 0x01	; 1
    5206:	9e a7       	std	Y+46, r25	; 0x2e
    5208:	8d a7       	std	Y+45, r24	; 0x2d
    520a:	99 a9       	ldd	r25, Y+49	; 0x31
    520c:	91 50       	subi	r25, 0x01	; 1
    520e:	99 ab       	std	Y+49, r25	; 0x31
    5210:	e9 a9       	ldd	r30, Y+49	; 0x31
    5212:	ee 23       	and	r30, r30
    5214:	51 f7       	brne	.-44     	; 0x51ea <READ_DISPLAY_TEMP+0x6a>
	u8 index = 0;
    5216:	18 8a       	std	Y+16, r1	; 0x10
	u8 Receive_flag = 0 ;
    5218:	1f 86       	std	Y+15, r1	; 0x0f

	LCD_WriteCmd(DISPLAY_CLEAR);
    521a:	81 e0       	ldi	r24, 0x01	; 1
    521c:	0e 94 2b 0d 	call	0x1a56	; 0x1a56 <LCD_WriteCmd>
	LCD_GoToXY(0,0);
    5220:	80 e0       	ldi	r24, 0x00	; 0
    5222:	60 e0       	ldi	r22, 0x00	; 0
    5224:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>
	LCD_WriteString(TEMP_MSG);
    5228:	ce 01       	movw	r24, r28
    522a:	41 96       	adiw	r24, 0x11	; 17
    522c:	0e 94 71 0e 	call	0x1ce2	; 0x1ce2 <LCD_WriteString>
	LCD_GoToXY(0,1);
    5230:	80 e0       	ldi	r24, 0x00	; 0
    5232:	61 e0       	ldi	r22, 0x01	; 1
    5234:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <LCD_GoToXY>

		UART_SEND_CHAR_POLLING('t');
    5238:	84 e7       	ldi	r24, 0x74	; 116
    523a:	0e 94 74 10 	call	0x20e8	; 0x20e8 <UART_SEND_CHAR_POLLING>
    523e:	17 c0       	rjmp	.+46     	; 0x526e <READ_DISPLAY_TEMP+0xee>
	/*REC TEMP read from UART*/
		while(Receive_flag != 2)
		{
			UART_RECEIVE_CHAR_POLLING(& ReceivedChar);
    5240:	ce 01       	movw	r24, r28
    5242:	4d 96       	adiw	r24, 0x1d	; 29
    5244:	0e 94 8e 10 	call	0x211c	; 0x211c <UART_RECEIVE_CHAR_POLLING>
			if (ReceivedChar == '#')
    5248:	8d 8d       	ldd	r24, Y+29	; 0x1d
    524a:	83 32       	cpi	r24, 0x23	; 35
    524c:	19 f4       	brne	.+6      	; 0x5254 <READ_DISPLAY_TEMP+0xd4>
			{
				Receive_flag ++;
    524e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5250:	8f 5f       	subi	r24, 0xFF	; 255
    5252:	8f 87       	std	Y+15, r24	; 0x0f
			}
			ReceivedData[index]=ReceivedChar;
    5254:	88 89       	ldd	r24, Y+16	; 0x10
    5256:	28 2f       	mov	r18, r24
    5258:	30 e0       	ldi	r19, 0x00	; 0
    525a:	4d 8d       	ldd	r20, Y+29	; 0x1d
    525c:	ce 01       	movw	r24, r28
    525e:	4e 96       	adiw	r24, 0x1e	; 30
    5260:	fc 01       	movw	r30, r24
    5262:	e2 0f       	add	r30, r18
    5264:	f3 1f       	adc	r31, r19
    5266:	40 83       	st	Z, r20
			index++;
    5268:	88 89       	ldd	r24, Y+16	; 0x10
    526a:	8f 5f       	subi	r24, 0xFF	; 255
    526c:	88 8b       	std	Y+16, r24	; 0x10
	LCD_WriteString(TEMP_MSG);
	LCD_GoToXY(0,1);

		UART_SEND_CHAR_POLLING('t');
	/*REC TEMP read from UART*/
		while(Receive_flag != 2)
    526e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5270:	82 30       	cpi	r24, 0x02	; 2
    5272:	31 f7       	brne	.-52     	; 0x5240 <READ_DISPLAY_TEMP+0xc0>
				Receive_flag ++;
			}
			ReceivedData[index]=ReceivedChar;
			index++;
		}
		if (ReceivedData[index-1] == '#')
    5274:	88 89       	ldd	r24, Y+16	; 0x10
    5276:	88 2f       	mov	r24, r24
    5278:	90 e0       	ldi	r25, 0x00	; 0
    527a:	9c 01       	movw	r18, r24
    527c:	21 50       	subi	r18, 0x01	; 1
    527e:	30 40       	sbci	r19, 0x00	; 0
    5280:	ce 01       	movw	r24, r28
    5282:	4e 96       	adiw	r24, 0x1e	; 30
    5284:	fc 01       	movw	r30, r24
    5286:	e2 0f       	add	r30, r18
    5288:	f3 1f       	adc	r31, r19
    528a:	80 81       	ld	r24, Z
    528c:	83 32       	cpi	r24, 0x23	; 35
    528e:	69 f4       	brne	.+26     	; 0x52aa <READ_DISPLAY_TEMP+0x12a>
		{
			ReceivedData[index-1] = 'C';
    5290:	88 89       	ldd	r24, Y+16	; 0x10
    5292:	88 2f       	mov	r24, r24
    5294:	90 e0       	ldi	r25, 0x00	; 0
    5296:	9c 01       	movw	r18, r24
    5298:	21 50       	subi	r18, 0x01	; 1
    529a:	30 40       	sbci	r19, 0x00	; 0
    529c:	ce 01       	movw	r24, r28
    529e:	4e 96       	adiw	r24, 0x1e	; 30
    52a0:	fc 01       	movw	r30, r24
    52a2:	e2 0f       	add	r30, r18
    52a4:	f3 1f       	adc	r31, r19
    52a6:	83 e4       	ldi	r24, 0x43	; 67
    52a8:	80 83       	st	Z, r24
		}
		else{}
		for (index = 0;index < 9;index++)
    52aa:	18 8a       	std	Y+16, r1	; 0x10
    52ac:	18 c0       	rjmp	.+48     	; 0x52de <READ_DISPLAY_TEMP+0x15e>
		{
			ReceivedData[index] = ReceivedData[index + 1];
    52ae:	88 89       	ldd	r24, Y+16	; 0x10
    52b0:	48 2f       	mov	r20, r24
    52b2:	50 e0       	ldi	r21, 0x00	; 0
    52b4:	88 89       	ldd	r24, Y+16	; 0x10
    52b6:	88 2f       	mov	r24, r24
    52b8:	90 e0       	ldi	r25, 0x00	; 0
    52ba:	9c 01       	movw	r18, r24
    52bc:	2f 5f       	subi	r18, 0xFF	; 255
    52be:	3f 4f       	sbci	r19, 0xFF	; 255
    52c0:	ce 01       	movw	r24, r28
    52c2:	4e 96       	adiw	r24, 0x1e	; 30
    52c4:	fc 01       	movw	r30, r24
    52c6:	e2 0f       	add	r30, r18
    52c8:	f3 1f       	adc	r31, r19
    52ca:	20 81       	ld	r18, Z
    52cc:	ce 01       	movw	r24, r28
    52ce:	4e 96       	adiw	r24, 0x1e	; 30
    52d0:	fc 01       	movw	r30, r24
    52d2:	e4 0f       	add	r30, r20
    52d4:	f5 1f       	adc	r31, r21
    52d6:	20 83       	st	Z, r18
		if (ReceivedData[index-1] == '#')
		{
			ReceivedData[index-1] = 'C';
		}
		else{}
		for (index = 0;index < 9;index++)
    52d8:	88 89       	ldd	r24, Y+16	; 0x10
    52da:	8f 5f       	subi	r24, 0xFF	; 255
    52dc:	88 8b       	std	Y+16, r24	; 0x10
    52de:	88 89       	ldd	r24, Y+16	; 0x10
    52e0:	89 30       	cpi	r24, 0x09	; 9
    52e2:	28 f3       	brcs	.-54     	; 0x52ae <READ_DISPLAY_TEMP+0x12e>
			ReceivedData[index] = ReceivedData[index + 1];
		}
		//ReceivedData[8]=' ';

		/*OUTPUT TEMP read on LCD*/
		LCD_WriteArrofChar(ReceivedData,10);
    52e4:	ce 01       	movw	r24, r28
    52e6:	4e 96       	adiw	r24, 0x1e	; 30
    52e8:	6a e0       	ldi	r22, 0x0A	; 10
    52ea:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <LCD_WriteArrofChar>
    52ee:	80 e0       	ldi	r24, 0x00	; 0
    52f0:	90 e0       	ldi	r25, 0x00	; 0
    52f2:	aa ef       	ldi	r26, 0xFA	; 250
    52f4:	b3 e4       	ldi	r27, 0x43	; 67
    52f6:	8b 87       	std	Y+11, r24	; 0x0b
    52f8:	9c 87       	std	Y+12, r25	; 0x0c
    52fa:	ad 87       	std	Y+13, r26	; 0x0d
    52fc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    52fe:	6b 85       	ldd	r22, Y+11	; 0x0b
    5300:	7c 85       	ldd	r23, Y+12	; 0x0c
    5302:	8d 85       	ldd	r24, Y+13	; 0x0d
    5304:	9e 85       	ldd	r25, Y+14	; 0x0e
    5306:	20 e0       	ldi	r18, 0x00	; 0
    5308:	30 e0       	ldi	r19, 0x00	; 0
    530a:	4a ef       	ldi	r20, 0xFA	; 250
    530c:	54 e4       	ldi	r21, 0x44	; 68
    530e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5312:	dc 01       	movw	r26, r24
    5314:	cb 01       	movw	r24, r22
    5316:	8f 83       	std	Y+7, r24	; 0x07
    5318:	98 87       	std	Y+8, r25	; 0x08
    531a:	a9 87       	std	Y+9, r26	; 0x09
    531c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    531e:	6f 81       	ldd	r22, Y+7	; 0x07
    5320:	78 85       	ldd	r23, Y+8	; 0x08
    5322:	89 85       	ldd	r24, Y+9	; 0x09
    5324:	9a 85       	ldd	r25, Y+10	; 0x0a
    5326:	20 e0       	ldi	r18, 0x00	; 0
    5328:	30 e0       	ldi	r19, 0x00	; 0
    532a:	40 e8       	ldi	r20, 0x80	; 128
    532c:	5f e3       	ldi	r21, 0x3F	; 63
    532e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5332:	88 23       	and	r24, r24
    5334:	2c f4       	brge	.+10     	; 0x5340 <READ_DISPLAY_TEMP+0x1c0>
		__ticks = 1;
    5336:	81 e0       	ldi	r24, 0x01	; 1
    5338:	90 e0       	ldi	r25, 0x00	; 0
    533a:	9e 83       	std	Y+6, r25	; 0x06
    533c:	8d 83       	std	Y+5, r24	; 0x05
    533e:	3f c0       	rjmp	.+126    	; 0x53be <READ_DISPLAY_TEMP+0x23e>
	else if (__tmp > 65535)
    5340:	6f 81       	ldd	r22, Y+7	; 0x07
    5342:	78 85       	ldd	r23, Y+8	; 0x08
    5344:	89 85       	ldd	r24, Y+9	; 0x09
    5346:	9a 85       	ldd	r25, Y+10	; 0x0a
    5348:	20 e0       	ldi	r18, 0x00	; 0
    534a:	3f ef       	ldi	r19, 0xFF	; 255
    534c:	4f e7       	ldi	r20, 0x7F	; 127
    534e:	57 e4       	ldi	r21, 0x47	; 71
    5350:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5354:	18 16       	cp	r1, r24
    5356:	4c f5       	brge	.+82     	; 0x53aa <READ_DISPLAY_TEMP+0x22a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5358:	6b 85       	ldd	r22, Y+11	; 0x0b
    535a:	7c 85       	ldd	r23, Y+12	; 0x0c
    535c:	8d 85       	ldd	r24, Y+13	; 0x0d
    535e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5360:	20 e0       	ldi	r18, 0x00	; 0
    5362:	30 e0       	ldi	r19, 0x00	; 0
    5364:	40 e2       	ldi	r20, 0x20	; 32
    5366:	51 e4       	ldi	r21, 0x41	; 65
    5368:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    536c:	dc 01       	movw	r26, r24
    536e:	cb 01       	movw	r24, r22
    5370:	bc 01       	movw	r22, r24
    5372:	cd 01       	movw	r24, r26
    5374:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5378:	dc 01       	movw	r26, r24
    537a:	cb 01       	movw	r24, r22
    537c:	9e 83       	std	Y+6, r25	; 0x06
    537e:	8d 83       	std	Y+5, r24	; 0x05
    5380:	0f c0       	rjmp	.+30     	; 0x53a0 <READ_DISPLAY_TEMP+0x220>
    5382:	88 ec       	ldi	r24, 0xC8	; 200
    5384:	90 e0       	ldi	r25, 0x00	; 0
    5386:	9c 83       	std	Y+4, r25	; 0x04
    5388:	8b 83       	std	Y+3, r24	; 0x03
    538a:	8b 81       	ldd	r24, Y+3	; 0x03
    538c:	9c 81       	ldd	r25, Y+4	; 0x04
    538e:	01 97       	sbiw	r24, 0x01	; 1
    5390:	f1 f7       	brne	.-4      	; 0x538e <READ_DISPLAY_TEMP+0x20e>
    5392:	9c 83       	std	Y+4, r25	; 0x04
    5394:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5396:	8d 81       	ldd	r24, Y+5	; 0x05
    5398:	9e 81       	ldd	r25, Y+6	; 0x06
    539a:	01 97       	sbiw	r24, 0x01	; 1
    539c:	9e 83       	std	Y+6, r25	; 0x06
    539e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    53a0:	8d 81       	ldd	r24, Y+5	; 0x05
    53a2:	9e 81       	ldd	r25, Y+6	; 0x06
    53a4:	00 97       	sbiw	r24, 0x00	; 0
    53a6:	69 f7       	brne	.-38     	; 0x5382 <READ_DISPLAY_TEMP+0x202>
    53a8:	14 c0       	rjmp	.+40     	; 0x53d2 <READ_DISPLAY_TEMP+0x252>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    53aa:	6f 81       	ldd	r22, Y+7	; 0x07
    53ac:	78 85       	ldd	r23, Y+8	; 0x08
    53ae:	89 85       	ldd	r24, Y+9	; 0x09
    53b0:	9a 85       	ldd	r25, Y+10	; 0x0a
    53b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    53b6:	dc 01       	movw	r26, r24
    53b8:	cb 01       	movw	r24, r22
    53ba:	9e 83       	std	Y+6, r25	; 0x06
    53bc:	8d 83       	std	Y+5, r24	; 0x05
    53be:	8d 81       	ldd	r24, Y+5	; 0x05
    53c0:	9e 81       	ldd	r25, Y+6	; 0x06
    53c2:	9a 83       	std	Y+2, r25	; 0x02
    53c4:	89 83       	std	Y+1, r24	; 0x01
    53c6:	89 81       	ldd	r24, Y+1	; 0x01
    53c8:	9a 81       	ldd	r25, Y+2	; 0x02
    53ca:	01 97       	sbiw	r24, 0x01	; 1
    53cc:	f1 f7       	brne	.-4      	; 0x53ca <READ_DISPLAY_TEMP+0x24a>
    53ce:	9a 83       	std	Y+2, r25	; 0x02
    53d0:	89 83       	std	Y+1, r24	; 0x01
		//LCD_WriteChar(' ');
		//LCD_WriteChar('C');
		_delay_ms(500);


}
    53d2:	e1 96       	adiw	r28, 0x31	; 49
    53d4:	0f b6       	in	r0, 0x3f	; 63
    53d6:	f8 94       	cli
    53d8:	de bf       	out	0x3e, r29	; 62
    53da:	0f be       	out	0x3f, r0	; 63
    53dc:	cd bf       	out	0x3d, r28	; 61
    53de:	cf 91       	pop	r28
    53e0:	df 91       	pop	r29
    53e2:	08 95       	ret

000053e4 <__udivmodhi4>:
    53e4:	aa 1b       	sub	r26, r26
    53e6:	bb 1b       	sub	r27, r27
    53e8:	51 e1       	ldi	r21, 0x11	; 17
    53ea:	07 c0       	rjmp	.+14     	; 0x53fa <__udivmodhi4_ep>

000053ec <__udivmodhi4_loop>:
    53ec:	aa 1f       	adc	r26, r26
    53ee:	bb 1f       	adc	r27, r27
    53f0:	a6 17       	cp	r26, r22
    53f2:	b7 07       	cpc	r27, r23
    53f4:	10 f0       	brcs	.+4      	; 0x53fa <__udivmodhi4_ep>
    53f6:	a6 1b       	sub	r26, r22
    53f8:	b7 0b       	sbc	r27, r23

000053fa <__udivmodhi4_ep>:
    53fa:	88 1f       	adc	r24, r24
    53fc:	99 1f       	adc	r25, r25
    53fe:	5a 95       	dec	r21
    5400:	a9 f7       	brne	.-22     	; 0x53ec <__udivmodhi4_loop>
    5402:	80 95       	com	r24
    5404:	90 95       	com	r25
    5406:	bc 01       	movw	r22, r24
    5408:	cd 01       	movw	r24, r26
    540a:	08 95       	ret

0000540c <__prologue_saves__>:
    540c:	2f 92       	push	r2
    540e:	3f 92       	push	r3
    5410:	4f 92       	push	r4
    5412:	5f 92       	push	r5
    5414:	6f 92       	push	r6
    5416:	7f 92       	push	r7
    5418:	8f 92       	push	r8
    541a:	9f 92       	push	r9
    541c:	af 92       	push	r10
    541e:	bf 92       	push	r11
    5420:	cf 92       	push	r12
    5422:	df 92       	push	r13
    5424:	ef 92       	push	r14
    5426:	ff 92       	push	r15
    5428:	0f 93       	push	r16
    542a:	1f 93       	push	r17
    542c:	cf 93       	push	r28
    542e:	df 93       	push	r29
    5430:	cd b7       	in	r28, 0x3d	; 61
    5432:	de b7       	in	r29, 0x3e	; 62
    5434:	ca 1b       	sub	r28, r26
    5436:	db 0b       	sbc	r29, r27
    5438:	0f b6       	in	r0, 0x3f	; 63
    543a:	f8 94       	cli
    543c:	de bf       	out	0x3e, r29	; 62
    543e:	0f be       	out	0x3f, r0	; 63
    5440:	cd bf       	out	0x3d, r28	; 61
    5442:	09 94       	ijmp

00005444 <__epilogue_restores__>:
    5444:	2a 88       	ldd	r2, Y+18	; 0x12
    5446:	39 88       	ldd	r3, Y+17	; 0x11
    5448:	48 88       	ldd	r4, Y+16	; 0x10
    544a:	5f 84       	ldd	r5, Y+15	; 0x0f
    544c:	6e 84       	ldd	r6, Y+14	; 0x0e
    544e:	7d 84       	ldd	r7, Y+13	; 0x0d
    5450:	8c 84       	ldd	r8, Y+12	; 0x0c
    5452:	9b 84       	ldd	r9, Y+11	; 0x0b
    5454:	aa 84       	ldd	r10, Y+10	; 0x0a
    5456:	b9 84       	ldd	r11, Y+9	; 0x09
    5458:	c8 84       	ldd	r12, Y+8	; 0x08
    545a:	df 80       	ldd	r13, Y+7	; 0x07
    545c:	ee 80       	ldd	r14, Y+6	; 0x06
    545e:	fd 80       	ldd	r15, Y+5	; 0x05
    5460:	0c 81       	ldd	r16, Y+4	; 0x04
    5462:	1b 81       	ldd	r17, Y+3	; 0x03
    5464:	aa 81       	ldd	r26, Y+2	; 0x02
    5466:	b9 81       	ldd	r27, Y+1	; 0x01
    5468:	ce 0f       	add	r28, r30
    546a:	d1 1d       	adc	r29, r1
    546c:	0f b6       	in	r0, 0x3f	; 63
    546e:	f8 94       	cli
    5470:	de bf       	out	0x3e, r29	; 62
    5472:	0f be       	out	0x3f, r0	; 63
    5474:	cd bf       	out	0x3d, r28	; 61
    5476:	ed 01       	movw	r28, r26
    5478:	08 95       	ret

0000547a <strlen>:
    547a:	fc 01       	movw	r30, r24
    547c:	01 90       	ld	r0, Z+
    547e:	00 20       	and	r0, r0
    5480:	e9 f7       	brne	.-6      	; 0x547c <strlen+0x2>
    5482:	80 95       	com	r24
    5484:	90 95       	com	r25
    5486:	8e 0f       	add	r24, r30
    5488:	9f 1f       	adc	r25, r31
    548a:	08 95       	ret

0000548c <_exit>:
    548c:	f8 94       	cli

0000548e <__stop_program>:
    548e:	ff cf       	rjmp	.-2      	; 0x548e <__stop_program>
